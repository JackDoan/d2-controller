<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<edc:PIC xmlns:atdf="http://crownking/atdf" xmlns:edc="http://crownking/edc" xmlns:ltx="http://crownking/ltx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://crownking/edc edc/PIC.xsd" edc:name="PIC32CM6408MC00032" edc:arch="arm32bit" edc:procid="0x0000" atdf:architecture="CORTEX-M0PLUS" atdf:family="PIC32CMMC" edc:hasFreeze="false" edc:masksetid="SG003">
  <edc:Properties>
    <edc:Property edc:propkey="file.registers.are.odd.address.accessible" edc:propvalue="true"/>
  </edc:Properties>
  <edc:Power>
    <edc:VDD edc:minvoltage="2.7" edc:maxvoltage="5.5" edc:nominalvoltage="5.000"/>
  </edc:Power>
  <edc:Programming edc:haslvp2="true"/>
  <edc:ArchDef edc:name="arm32bit" edc:desc="arm32bit">
    <edc:MemTraits edc:addrinc="0x1" edc:locsize="0x1" edc:wordimpl="0xFFFFFFFF" edc:wordinit="0xFFFFFFFF" edc:wordsafe="0xFFFFFFFF" edc:wordsize="0x4"/>
  </edc:ArchDef>
  <edc:InstructionSet edc:instructionsetid="armv6m"/>
  <edc:InterruptList>
    <edc:Interrupt edc:irq="-15" edc:cname="Reset" edc:desc="Reset Vector, invoked on Power up and warm reset"/>
    <edc:Interrupt edc:irq="-14" edc:cname="NonMaskableInt" edc:desc="Non maskable Interrupt, cannot be stopped or preempted"/>
    <edc:Interrupt edc:irq="-13" edc:cname="HardFault" edc:desc="Hard Fault, all classes of Fault"/>
    <edc:Interrupt edc:irq="-5" edc:cname="SVCall" edc:desc="System Service Call via SVC instruction"/>
    <edc:Interrupt edc:irq="-2" edc:cname="PendSV" edc:desc="Pendable request for system service"/>
    <edc:Interrupt edc:irq="-1" edc:cname="SysTick" edc:desc="System Tick Timer"/>
    <edc:Interrupt edc:irq="0" edc:cname="SYSTEM" edc:desc="System peripherals shared interrupt" ltx:memberofperipheral="MCLK OSCCTRL OSC32KCTRL PAC PM SUPC"/>
    <edc:Interrupt edc:irq="1" edc:cname="WDT" edc:desc="Watchdog Timer" ltx:memberofperipheral="WDT"/>
    <edc:Interrupt edc:irq="2" edc:cname="RTC" edc:desc="Real Time Counter" ltx:memberofperipheral="RTC"/>
    <edc:Interrupt edc:irq="3" edc:cname="EIC" edc:desc="External Interrupt Controller" ltx:memberofperipheral="EIC"/>
    <edc:Interrupt edc:irq="4" edc:cname="FREQM" edc:desc="Frequency Meter" ltx:memberofperipheral="FREQM"/>
    <edc:Interrupt edc:irq="5" edc:cname="TSENS" edc:desc="Temperature Sensor" ltx:memberofperipheral="TSENS"/>
    <edc:Interrupt edc:irq="6" edc:cname="NVMCTRL" edc:desc="Non-Volatile Memory Controller" ltx:memberofperipheral="NVMCTRL"/>
    <edc:Interrupt edc:irq="7" edc:cname="DMAC" edc:desc="Direct Memory Controller" ltx:memberofperipheral="DMAC"/>
    <edc:Interrupt edc:irq="8" edc:cname="EVSYS" edc:desc="Event Systems" ltx:memberofperipheral="EVSYS"/>
    <edc:Interrupt edc:irq="9" edc:cname="SERCOM0" edc:desc="Serial Communication Interface 0" ltx:memberofperipheral="SERCOM0"/>
    <edc:Interrupt edc:irq="10" edc:cname="SERCOM1" edc:desc="Serial Communication Interface 1" ltx:memberofperipheral="SERCOM1"/>
    <edc:Interrupt edc:irq="11" edc:cname="SERCOM2" edc:desc="Serial Communication Interface 2" ltx:memberofperipheral="SERCOM2"/>
    <edc:Interrupt edc:irq="12" edc:cname="SERCOM3" edc:desc="Serial Communication Interface 3" ltx:memberofperipheral="SERCOM3"/>
    <edc:Interrupt edc:irq="13" edc:cname="TCC0" edc:desc="Timer/Counter for Control Applications 0" ltx:memberofperipheral="TCC0"/>
    <edc:Interrupt edc:irq="14" edc:cname="TCC1" edc:desc="Timer/Counter for Control Applications 1" ltx:memberofperipheral="TCC1"/>
    <edc:Interrupt edc:irq="15" edc:cname="TCC2" edc:desc="Timer/Counter for Control Applications 2" ltx:memberofperipheral="TCC2"/>
    <edc:Interrupt edc:irq="16" edc:cname="TC0" edc:desc="Timer/Counter 0" ltx:memberofperipheral="TC0"/>
    <edc:Interrupt edc:irq="17" edc:cname="TC1" edc:desc="Timer/Counter 1" ltx:memberofperipheral="TC1"/>
    <edc:Interrupt edc:irq="18" edc:cname="TC2" edc:desc="Timer/Counter 2" ltx:memberofperipheral="TC2"/>
    <edc:Interrupt edc:irq="19" edc:cname="TC3" edc:desc="Timer/Counter 3" ltx:memberofperipheral="TC3"/>
    <edc:Interrupt edc:irq="20" edc:cname="TC4" edc:desc="Timer/Counter 4" ltx:memberofperipheral="TC4"/>
    <edc:Interrupt edc:irq="21" edc:cname="ADC0" edc:desc="Analog-to-Digital Converter 0" ltx:memberofperipheral="ADC0"/>
    <edc:Interrupt edc:irq="22" edc:cname="ADC1" edc:desc="Analog-to-Digital Converter 1" ltx:memberofperipheral="ADC1"/>
    <edc:Interrupt edc:irq="23" edc:cname="AC" edc:desc="Analog Comparators" ltx:memberofperipheral="AC"/>
    <edc:Interrupt edc:irq="24" edc:cname="DAC" edc:desc="Digital-to-Analog Converter" ltx:memberofperipheral="DAC"/>
    <edc:Interrupt edc:irq="25" edc:cname="SDADC" edc:desc="Sigma-Delat Analog-to-Digital Converter" ltx:memberofperipheral="SDADC"/>
    <edc:Interrupt edc:irq="26" edc:cname="PDEC" edc:desc="Position Decoder" ltx:memberofperipheral="PDEC"/>
  </edc:InterruptList>
  <edc:PeripheralList>
    <edc:Peripheral edc:cname="AC" edc:desc=""/>
    <edc:Peripheral edc:cname="ADC0" edc:desc=""/>
    <edc:Peripheral edc:cname="ADC1" edc:desc=""/>
    <edc:Peripheral edc:cname="CCL" edc:desc=""/>
    <edc:Peripheral edc:cname="DAC" edc:desc=""/>
    <edc:Peripheral edc:cname="DIVAS" edc:desc=""/>
    <edc:Peripheral edc:cname="DMAC" edc:desc=""/>
    <edc:Peripheral edc:cname="DSU" edc:desc=""/>
    <edc:Peripheral edc:cname="EIC" edc:desc=""/>
    <edc:Peripheral edc:cname="EVSYS" edc:desc=""/>
    <edc:Peripheral edc:cname="FREQM" edc:desc=""/>
    <edc:Peripheral edc:cname="GCLK" edc:desc=""/>
    <edc:Peripheral edc:cname="HMATRIXHS" edc:desc=""/>
    <edc:Peripheral edc:cname="MCLK" edc:desc=""/>
    <edc:Peripheral edc:cname="MTB" edc:desc=""/>
    <edc:Peripheral edc:cname="NVMCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="FUSES" edc:desc=""/>
    <edc:Peripheral edc:cname="OSCCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="OSC32KCTRL" edc:desc=""/>
    <edc:Peripheral edc:cname="PAC" edc:desc=""/>
    <edc:Peripheral edc:cname="PDEC" edc:desc=""/>
    <edc:Peripheral edc:cname="PM" edc:desc=""/>
    <edc:Peripheral edc:cname="PORT" edc:desc=""/>
    <edc:Peripheral edc:cname="RSTC" edc:desc=""/>
    <edc:Peripheral edc:cname="RTC" edc:desc=""/>
    <edc:Peripheral edc:cname="SDADC" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM0" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM1" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM2" edc:desc=""/>
    <edc:Peripheral edc:cname="SERCOM3" edc:desc=""/>
    <edc:Peripheral edc:cname="SUPC" edc:desc=""/>
    <edc:Peripheral edc:cname="TC0" edc:desc=""/>
    <edc:Peripheral edc:cname="TC1" edc:desc=""/>
    <edc:Peripheral edc:cname="TC2" edc:desc=""/>
    <edc:Peripheral edc:cname="TC3" edc:desc=""/>
    <edc:Peripheral edc:cname="TC4" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC0" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC1" edc:desc=""/>
    <edc:Peripheral edc:cname="TCC2" edc:desc=""/>
    <edc:Peripheral edc:cname="TSENS" edc:desc=""/>
    <edc:Peripheral edc:cname="WDT" edc:desc=""/>
    <edc:Peripheral edc:cname="MPU" edc:desc=""/>
    <edc:Peripheral edc:cname="NVIC" edc:desc=""/>
    <edc:Peripheral edc:cname="SysTick" edc:desc=""/>
    <edc:Peripheral edc:cname="SystemControl" edc:desc=""/>
  </edc:PeripheralList>
  <edc:PhysicalSpace>
    <edc:NMMRPlace edc:regionid="corenmmrs">
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R0" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="0"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R1" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="4"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R2" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="8"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R3" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="12"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R4" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="16"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R5" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="20"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R6" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="24"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R7" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="28"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R8" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="32"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R9" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="36"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R10" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="40"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R11" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="44"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="R12" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="General-Purpose Register" edc:nmmrid="48"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="SP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Stack Pointer" edc:nmmrid="52"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="MSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Main Stack Pointer" edc:nmmrid="64"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSP" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Process Stack Pointer" edc:nmmrid="68"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="LR" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:desc="Link Register" edc:nmmrid="56"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PC" edc:impl="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Program Counter" edc:nmmrid="60"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PSR" edc:impl="0xF100003F" edc:access="nnnn---n------------------nnnnnn" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Program Status Register" edc:nmmrid="72"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="APSR" edc:impl="0xF0000000" edc:access="nnnn----------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Application Program Status Register" edc:nmmrid="76"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="IPSR" edc:impl="0x3F" edc:access="--------------------------rrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Interrupt Program Status Register" edc:nmmrid="80"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="EPSR" edc:impl="0x1000000" edc:access="-------r------------------------" edc:por="00000001000000000000000000000000" edc:mclr="00000001000000000000000000000000" edc:desc="Execution Program Status Register" edc:nmmrid="84"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="PRIMASK" edc:impl="0x1" edc:access="-------------------------------n" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Priority Mask Register" edc:nmmrid="88"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="CONTROL" edc:impl="0x3" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:desc="Control Register" edc:nmmrid="100"/>
    </edc:NMMRPlace>
    <edc:CodeSector edc:regionid="IFLASH" edc:beginaddr="0x0" edc:endaddr="0x10000" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:UserZone edc:regionid="USER_PAGE" edc:beginaddr="0x804000" edc:endaddr="0x804100" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:ConfigFuseSector edc:regionid="fuses" edc:beginaddr="0x804000" edc:endaddr="0x804008" atdf:pagesize="0x40">
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="USER_WORD_0" edc:nzwidth="0x20" edc:impl="0xFC01FF07" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnn---------nnnnnnnnn-----nnn" edc:_addr="0x804000" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="NVMCTRL_BOOTPROT" edc:nzwidth="0x3" edc:desc="Bootloader Size">
              <edc:DCRFieldSemantic edc:cname="SIZE_0BYTES" edc:desc="0 Bytes" edc:when="(field &amp; 0x7) == 0x7"/>
              <edc:DCRFieldSemantic edc:cname="SIZE_512BYTES" edc:desc="512 Bytes" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:DCRFieldSemantic edc:cname="SIZE_1024BYTES" edc:desc="1024 Bytes" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:DCRFieldSemantic edc:cname="SIZE_2048BYTES" edc:desc="2048 Bytes" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:DCRFieldSemantic edc:cname="SIZE_4096BYTES" edc:desc="4096 Bytes" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:DCRFieldSemantic edc:cname="SIZE_8192BYTES" edc:desc="8192 Bytes" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:DCRFieldSemantic edc:cname="SIZE_16384BYTES" edc:desc="16384 Bytes" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="SIZE_32768BYTES" edc:desc="32768 Bytes" edc:when="(field &amp; 0x7) == 0x0"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:DCRFieldDef edc:cname="BODVDDUSERLEVEL" edc:nzwidth="0x6" edc:desc="BODVDD User Level"/>
            <edc:DCRFieldDef edc:cname="BODVDD_DIS" edc:nzwidth="0x1" edc:desc="BODVDD Disable">
              <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="BODVDD is enabled on power on" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="DISABLED" edc:desc="BODVDD is disabled on power on" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BODVDD_ACTION" edc:nzwidth="0x2" edc:desc="BODVDD Action">
              <edc:DCRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="RESET" edc:desc="The BODVDD generates a reset" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="INT" edc:desc="The BODVDD generates an interrupt" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:DCRFieldDef edc:cname="WDT_ENABLE" edc:nzwidth="0x1" edc:desc="WDT Enable">
              <edc:DCRFieldSemantic edc:cname="DISABLED" edc:desc="WDT is disabled on power on" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="WDT is enabled on power on" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDT_ALWAYSON" edc:nzwidth="0x1" edc:desc="WDT Always On">
              <edc:DCRFieldSemantic edc:cname="DISABLED" edc:desc="WDT is enabled and disabled through ENABLE bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="WDT is enabled and can only be disabled by a power-on reset" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDT_PER" edc:nzwidth="0x4" edc:desc="WDT Period">
              <edc:DCRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:DCRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:DCRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:DCRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:DCRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:DCRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:DCRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:DCRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:DCRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:DCRFieldSemantic edc:cname="CYC16384" edc:desc="16384 clock cycles" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:DCRFieldDef>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
      <edc:DCRDef ltx:memberofperipheral="FUSES" edc:cname="USER_WORD_1" edc:nzwidth="0x20" edc:impl="0xFFFF03FF" edc:unused="0x0" edc:useinchecksum="0xFFFFFFFF" edc:factorydefault="0xFFFFFFFF" edc:access="nnnnnnnnnnnnnnnn------nnnnnnnnnn" edc:_addr="0x804004" edc:default="0xFFFFFFFF">
        <edc:DCRModeList>
          <edc:DCRMode edc:id="DS.0" ltx:memberofperipheral="FUSES">
            <edc:DCRFieldDef edc:cname="WDT_WINDOW" edc:nzwidth="0x4" edc:desc="WDT Window">
              <edc:DCRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:DCRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:DCRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:DCRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:DCRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:DCRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:DCRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:DCRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:DCRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:DCRFieldSemantic edc:cname="CYC16384" edc:desc="16384 clock cycles" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDT_EWOFFSET" edc:nzwidth="0x4" edc:desc="WDT Early Warning Offset">
              <edc:DCRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:DCRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:DCRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:DCRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:DCRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:DCRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:DCRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:DCRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:DCRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:DCRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:DCRFieldSemantic edc:cname="CYC16384" edc:desc="16384 clock cycles" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="WDT_WEN" edc:nzwidth="0x1" edc:desc="WDT Window Mode Enable">
              <edc:DCRFieldSemantic edc:cname="DISABLED" edc:desc="WDT is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="WDT is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:DCRFieldDef edc:cname="BODVDD_HYST" edc:nzwidth="0x1" edc:desc="BODVDD Hysterisis">
              <edc:DCRFieldSemantic edc:cname="DISABLED" edc:desc="No Hysteresis" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:DCRFieldSemantic edc:cname="ENABLED" edc:desc="Hysteresis Enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:DCRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:DCRFieldDef edc:cname="NVMCTRL_REGION_LOCKS" edc:nzwidth="0x10" edc:desc="NVM Region lock bits"/>
          </edc:DCRMode>
        </edc:DCRModeList>
      </edc:DCRDef>
    </edc:ConfigFuseSector>
    <edc:UserIDSector edc:regionid="userid" edc:beginaddr="0x804008" edc:endaddr="0x804100" atdf:pagesize="0x40"/>
    <edc:CodeSector edc:regionid="DATAFLASH" edc:beginaddr="0x400000" edc:endaddr="0x400800" atdf:pagesize="0x40" edc:rw="rw"/>
    <edc:GPRDataSector edc:regionid="HSRAM" edc:beginaddr="0x20000000" edc:endaddr="0x20002000" edc:isexecutable="true" edc:rw="rw"/>
    <edc:SFRDataSector edc:regionid="HPB0" edc:beginaddr="0x40000000" edc:endaddr="0x40004000" edc:rw="rw"/>
    <edc:SFRDataSector edc:regionid="HPB1" edc:beginaddr="0x41000000" edc:endaddr="0x41010000" edc:rw="rw"/>
    <edc:SFRDataSector edc:regionid="HPB2" edc:beginaddr="0x42000000" edc:endaddr="0x42008000" edc:rw="rw"/>
    <edc:SFRDataSector edc:regionid="DIVAS" edc:beginaddr="0x48000000" edc:endaddr="0x48000020" edc:rw="rw"/>
    <edc:SFRDataSector edc:regionid="PPB" edc:beginaddr="0xE0000000" edc:endaddr="0xE000EDA4" edc:rw="rw">
      <edc:AdjustPoint edc:offset="0xE004" edc:_addr="0xE0000000"/>
      <edc:SFRDef edc:nzwidth="0x20" edc:cname="ICTR" edc:impl="0xF" edc:access="----------------------------rrrr" edc:por="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:mclr="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" edc:desc="Interrupt Controller Type Register" edc:_addr="0xE000E004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0">
            <edc:SFRFieldDef edc:nzwidth="0x4" edc:cname="INTLINESNUM" edc:desc="Number of interrupt lines supported by NVIC in granularities of 32."/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE000E008"/>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CSR" edc:nzwidth="0x20" edc:access="---------------n-------------nnn" edc:por="00000000000000000000000000000100" edc:mclr="00000000000000000000000000000100" edc:impl="0x10007" edc:_addr="0xE000E010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SysTick Counter Enable">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Counter disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Counter enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TICKINT" edc:nzwidth="0x1" edc:desc="SysTick Exception Request Enable">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Counting down to 0 does not assert the SysTick exception request" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Counting down to 0 asserts the SysTick exception request" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CLKSOURCE" edc:nzwidth="0x1" edc:desc="Clock Source 0=external, 1=processor">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="External clock" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Processor clock" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xD"/>
            <edc:SFRFieldDef edc:cname="COUNTFLAG" edc:nzwidth="0x1" edc:desc="Timer counted to 0 since last read of register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="RVR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0xE000E014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="RELOAD" edc:nzwidth="0x18" edc:desc="Value to load into the SysTick Current Value Register when the counter reaches 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CVR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:impl="0xFFFFFF" edc:_addr="0xE000E018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="CURRENT" edc:nzwidth="0x18" edc:desc="Current value at the time the register is accessed"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SysTick" edc:cname="CALIB" edc:nzwidth="0x20" edc:access="rr------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xC0FFFFFF" edc:_addr="0xE000E01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SysTick">
            <edc:SFRFieldDef edc:cname="TENMS" edc:nzwidth="0x18" edc:desc="Reload value to use for 10ms timing"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="SKEW" edc:nzwidth="0x1" edc:desc="TENMS is rounded from non-integer ratio">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="10ms calibration value is exact" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="10ms calibration value is inexact, because of the clock frequency" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NOREF" edc:nzwidth="0x1" edc:desc="No Separate Reference Clock">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="The reference clock is provided" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="The reference clock is not provided" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xE0" edc:_addr="0xE000E020"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ISER" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFFFF" edc:_addr="0xE000E100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETENA" edc:nzwidth="0x1F" edc:desc="Interrupt set enable bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7C" edc:_addr="0xE000E104"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ICER" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFFFF" edc:_addr="0xE000E180">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRENA" edc:nzwidth="0x1F" edc:desc="Interrupt clear-enable bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7C" edc:_addr="0xE000E184"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ISPR" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFFFF" edc:_addr="0xE000E200">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="SETPEND" edc:nzwidth="0x1F" edc:desc="Interrupt set-pending bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7C" edc:_addr="0xE000E204"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="ICPR" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FFFFFFF" edc:_addr="0xE000E280">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="CLRPEND" edc:nzwidth="0x1F" edc:desc="Interrupt clear-pending bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x17C" edc:_addr="0xE000E284"/>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR0" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR1" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR2" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR3" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E40C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR4" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR5" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR6" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVIC" edc:cname="IPR7" edc:nzwidth="0x20" edc:access="------nn------nn------nn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3030303" edc:_addr="0xE000E41C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVIC">
            <edc:SFRFieldDef edc:cname="PRI0" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI1" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI2" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="PRI3" edc:nzwidth="0x2" edc:desc="Priority of interrupt n"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8E0" edc:_addr="0xE000E420"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="CPUID" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="01000001000011001100011000000001" edc:mclr="01000001000011001100011000000001" edc:_addr="0xE000ED00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Minor revision number"/>
            <edc:SFRFieldDef edc:cname="PARTNO" edc:nzwidth="0xC" edc:desc="Processor Part Number, 0xC60=Cortex-M0+"/>
            <edc:SFRFieldDef edc:cname="ARCHITECTURE" edc:nzwidth="0x4" edc:desc="Processor Architecture, 0xC=ARMv6-M"/>
            <edc:SFRFieldDef edc:cname="VARIANT" edc:nzwidth="0x4" edc:desc="Major revision number"/>
            <edc:SFRFieldDef edc:cname="IMPLEMENTER" edc:nzwidth="0x8" edc:desc="Implementer code, ARM=0x41"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="ICSR" edc:nzwidth="0x20" edc:access="n--nnnn-nn-nnnnnnnnn---nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x9EDFF1FF" edc:_addr="0xE000ED04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="VECTACTIVE" edc:nzwidth="0x9" edc:desc="Debug: Exception number of currently executing exception, or 0 if thread mode"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="VECTPENDING" edc:nzwidth="0x9" edc:desc="Exception number of the highest priority pending enabled exception"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ISRPENDING" edc:nzwidth="0x1" edc:desc="Debug: NVIC interrupt pending"/>
            <edc:SFRFieldDef edc:cname="ISRPREEMPT" edc:nzwidth="0x1" edc:desc="Debug: Pending exception serviced on exit from debug halt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PENDSTCLR" edc:nzwidth="0x1" edc:desc="SysTick exception clear-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No effect" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Removes the pending state from the SysTick exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSTSET" edc:nzwidth="0x1" edc:desc="SysTick exception set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: SysTick exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes SysTick exception state to pending; read: SysTick exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVCLR" edc:nzwidth="0x1" edc:desc="PendSV clear-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No effect" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Removes the pending state from the PendSV exception" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PENDSVSET" edc:nzwidth="0x1" edc:desc="PendSV set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: PendSV exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes PendSV exception state to pending; read: PendSV exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="NMIPENDSET" edc:nzwidth="0x1" edc:desc="NMI set-pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Write: no effect; read: NMI exception is not pending" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Write: changes NMI exception state to pending; read: NMI exception is pending" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="VTOR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnn-------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF80" edc:_addr="0xE000ED08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="TBLOFF" edc:nzwidth="0x19" edc:desc="Vector table base offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="AIRCR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnn------------nn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF8006" edc:_addr="0xE000ED0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="VECTCLRACTIVE" edc:nzwidth="0x1" edc:desc="Debug: Clear state information"/>
            <edc:SFRFieldDef edc:cname="SYSRESETREQ" edc:nzwidth="0x1" edc:desc="System Reset Request">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="No system reset request" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Asserts a signal to the outer system that requests a reset" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0xC"/>
            <edc:SFRFieldDef edc:cname="ENDIANNESS" edc:nzwidth="0x1" edc:desc="Data Endianness, 0=little, 1=big">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Little-endian" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Big-endian" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="VECTKEY" edc:nzwidth="0x10" edc:desc="Register key (0x05FA)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SCR" edc:nzwidth="0x20" edc:access="---------------------------n-nn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x16" edc:_addr="0xE000ED10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SLEEPONEXIT" edc:nzwidth="0x1" edc:desc="Sleep-On-Exit when exiting Handler mode">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="O not sleep when returning to Thread mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Enter sleep, or deep sleep, on return from an ISR" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SLEEPDEEP" edc:nzwidth="0x1" edc:desc="Uses Deep Sleep as low power mode">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Sleep" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Deep sleep" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEVONPEND" edc:nzwidth="0x1" edc:desc="Send Event on Pending bit">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Only enabled interrupts or events can wakeup the processor, disabled interrupts are excluded" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Enabled events and all interrupts, including disabled interrupts, can wakeup the processor" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="CCR" edc:nzwidth="0x20" edc:access="----------------------r-----r---" edc:por="00000000000000000000001000000100" edc:mclr="00000000000000000000001000000100" edc:impl="0x208" edc:_addr="0xE000ED14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="UNALIGN_TRP" edc:nzwidth="0x1" edc:desc="Unaligned accesses generates a Hard Fault">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="Do not trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="Trap unaligned halfword and word accesses" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="STKALIGN" edc:nzwidth="0x1" edc:desc="Stack 8-byte aligned on exception entry">
              <edc:SFRFieldSemantic edc:cname="VALUE_0" edc:desc="4-byte aligned" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VALUE_1" edc:desc="8-byte aligned" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0xE000ED18"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHPR2" edc:nzwidth="0x20" edc:access="nnnnnnnn------------------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF000000" edc:_addr="0xE000ED1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x18"/>
            <edc:SFRFieldDef edc:cname="PRI_11" edc:nzwidth="0x8" edc:desc="Priority of system handler 11, SVCall"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHPR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0000" edc:_addr="0xE000ED20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0x10"/>
            <edc:SFRFieldDef edc:cname="PRI_14" edc:nzwidth="0x8" edc:desc="Priority of system handler 14, PendSV"/>
            <edc:SFRFieldDef edc:cname="PRI_15" edc:nzwidth="0x8" edc:desc="Priority of system handler 15, SysTick exception"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="SHCSR" edc:nzwidth="0x20" edc:access="----------------n---------------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8000" edc:_addr="0xE000ED24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:AdjustPoint edc:offset="0xF"/>
            <edc:SFRFieldDef edc:cname="SVCALLPENDED" edc:nzwidth="0x1" edc:desc="no description available"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0xE000ED28"/>
      <edc:SFRDef ltx:memberofperipheral="SystemControl" edc:cname="DFSR" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0xE000ED30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SystemControl">
            <edc:SFRFieldDef edc:cname="HALTED" edc:nzwidth="0x1" edc:desc="Halt request debug event active"/>
            <edc:SFRFieldDef edc:cname="BKPT" edc:nzwidth="0x1" edc:desc="Breakpoint debug event"/>
            <edc:SFRFieldDef edc:cname="DWTTRAP" edc:nzwidth="0x1" edc:desc="DWT debug event"/>
            <edc:SFRFieldDef edc:cname="VCATCH" edc:nzwidth="0x1" edc:desc="Vector catch debug event"/>
            <edc:SFRFieldDef edc:cname="EXTERNAL" edc:nzwidth="0x1" edc:desc="EDBGRQ debug event"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5C" edc:_addr="0xE000ED34"/>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="TYPE" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrr-------r" edc:impl="0xFFFF01" edc:_addr="0xE000ED90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="SEPARATE" edc:nzwidth="0x1" edc:desc="Separate instruction and Data Memory MapsRegions"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DREGION" edc:nzwidth="0x8" edc:desc="Number of Data Regions"/>
            <edc:SFRFieldDef edc:cname="IREGION" edc:nzwidth="0x8" edc:desc="Number of Instruction Regions"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="CTRL" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:impl="0x7" edc:_addr="0xE000ED94">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="MPU Enable"/>
            <edc:SFRFieldDef edc:cname="HFNMIENA" edc:nzwidth="0x1" edc:desc="Enable Hard Fault and NMI handlers"/>
            <edc:SFRFieldDef edc:cname="PRIVDEFENA" edc:nzwidth="0x1" edc:desc="Enables privileged software access to default memory map"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RNR" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:impl="0xFF" edc:_addr="0xE000ED98">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:nzwidth="0x8" edc:desc="Region referenced by RBAR and RASR"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RBAR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0xE000ED9C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="REGION" edc:nzwidth="0x4" edc:desc="Region number"/>
            <edc:SFRFieldDef edc:cname="VALID" edc:nzwidth="0x1" edc:desc="Region number valid"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1B" edc:desc="Region base address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MPU" edc:cname="RASR" edc:nzwidth="0x20" edc:access="---n-nnn--nnnnnnnnnnnnnn--nnnnnn" edc:impl="0x173FFF3F" edc:_addr="0xE000EDA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MPU">
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Region Enable"/>
            <edc:SFRFieldDef edc:cname="SIZE" edc:nzwidth="0x5" edc:desc="Region Size"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SRD" edc:nzwidth="0x8" edc:desc="Sub-region disable"/>
            <edc:SFRFieldDef edc:cname="B" edc:nzwidth="0x1" edc:desc="Bufferable bit"/>
            <edc:SFRFieldDef edc:cname="C" edc:nzwidth="0x1" edc:desc="Cacheable bit"/>
            <edc:SFRFieldDef edc:cname="S" edc:nzwidth="0x1" edc:desc="Shareable bit"/>
            <edc:SFRFieldDef edc:cname="TEX" edc:nzwidth="0x3" edc:desc="TEX bit"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="AP" edc:nzwidth="0x3" edc:desc="Access Permission"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="XN" edc:nzwidth="0x1" edc:desc="Execute Never Attribute"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:SFRDataSector edc:regionid="SCS" edc:beginaddr="0xE000E000" edc:endaddr="0xE000F000" edc:rw="rw"/>
    <edc:SFRDataSector edc:regionid="PERIPHERALS" edc:beginaddr="0x40000000" edc:endaddr="0x4800001C" edc:rw="rw">
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="WRCTRL" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PERID" edc:nzwidth="0x10" edc:desc="Peripheral identifier"/>
            <edc:SFRFieldDef edc:cname="KEY" edc:nzwidth="0x8" edc:desc="Peripheral access control key">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No action" edc:when="(field &amp; 0xFF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CLR" edc:desc="Clear protection" edc:when="(field &amp; 0xFF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set protection" edc:when="(field &amp; 0xFF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="SETLCK" edc:desc="Set and lock protection" edc:when="(field &amp; 0xFF) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERREO" edc:nzwidth="0x1" edc:desc="Peripheral acess error event output"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40000005"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Peripheral access error interrupt disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Peripheral access error interrupt enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x4000000A"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGAHB" edc:nzwidth="0x20" edc:access="------------------------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x40000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="FLASH_" edc:nzwidth="0x1" edc:desc="FLASH"/>
            <edc:SFRFieldDef edc:cname="HSRAMCM0P_" edc:nzwidth="0x1" edc:desc="SRAM CPU"/>
            <edc:SFRFieldDef edc:cname="HSRAMDSU_" edc:nzwidth="0x1" edc:desc="SRAM DSU"/>
            <edc:SFRFieldDef edc:cname="APBB_" edc:nzwidth="0x1" edc:desc="HPB1"/>
            <edc:SFRFieldDef edc:cname="APBA_" edc:nzwidth="0x1" edc:desc="HPB0"/>
            <edc:SFRFieldDef edc:cname="APBC_" edc:nzwidth="0x1" edc:desc="HPB2"/>
            <edc:SFRFieldDef edc:cname="LPRAMDMAC_" edc:nzwidth="0x1" edc:desc="SRAM DMAC"/>
            <edc:SFRFieldDef edc:cname="DIVAS_" edc:nzwidth="0x1" edc:desc="DIVAS"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGA" edc:nzwidth="0x20" edc:access="-------------------nnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FFF" edc:_addr="0x40000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC"/>
            <edc:SFRFieldDef edc:cname="PM_" edc:nzwidth="0x1" edc:desc="PM"/>
            <edc:SFRFieldDef edc:cname="MCLK_" edc:nzwidth="0x1" edc:desc="MCLK"/>
            <edc:SFRFieldDef edc:cname="RSTC_" edc:nzwidth="0x1" edc:desc="RSTC"/>
            <edc:SFRFieldDef edc:cname="OSCCTRL_" edc:nzwidth="0x1" edc:desc="OSCCTRL"/>
            <edc:SFRFieldDef edc:cname="OSC32KCTRL_" edc:nzwidth="0x1" edc:desc="OSC32KCTRL"/>
            <edc:SFRFieldDef edc:cname="SUPC_" edc:nzwidth="0x1" edc:desc="SUPC"/>
            <edc:SFRFieldDef edc:cname="GCLK_" edc:nzwidth="0x1" edc:desc="GCLK"/>
            <edc:SFRFieldDef edc:cname="WDT_" edc:nzwidth="0x1" edc:desc="WDT"/>
            <edc:SFRFieldDef edc:cname="RTC_" edc:nzwidth="0x1" edc:desc="RTC"/>
            <edc:SFRFieldDef edc:cname="EIC_" edc:nzwidth="0x1" edc:desc="EIC"/>
            <edc:SFRFieldDef edc:cname="FREQM_" edc:nzwidth="0x1" edc:desc="FREQM"/>
            <edc:SFRFieldDef edc:cname="TSENS_" edc:nzwidth="0x1" edc:desc="TSENS"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGB" edc:nzwidth="0x20" edc:access="--------------------------nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F" edc:_addr="0x40000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PORT_" edc:nzwidth="0x1" edc:desc="PORT"/>
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU"/>
            <edc:SFRFieldDef edc:cname="NVMCTRL_" edc:nzwidth="0x1" edc:desc="NVMCTRL"/>
            <edc:SFRFieldDef edc:cname="DMAC_" edc:nzwidth="0x1" edc:desc="DMAC"/>
            <edc:SFRFieldDef edc:cname="MTB_" edc:nzwidth="0x1" edc:desc="MTB"/>
            <edc:SFRFieldDef edc:cname="HMATRIXHS_" edc:nzwidth="0x1" edc:desc="HMATRIXHS"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="INTFLAGC" edc:nzwidth="0x20" edc:access="-----n--n-nnnnnnnnnnnnn----nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BFFE1F" edc:_addr="0x4000001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="EVSYS_" edc:nzwidth="0x1" edc:desc="EVSYS"/>
            <edc:SFRFieldDef edc:cname="SERCOM0_" edc:nzwidth="0x1" edc:desc="SERCOM0"/>
            <edc:SFRFieldDef edc:cname="SERCOM1_" edc:nzwidth="0x1" edc:desc="SERCOM1"/>
            <edc:SFRFieldDef edc:cname="SERCOM2_" edc:nzwidth="0x1" edc:desc="SERCOM2"/>
            <edc:SFRFieldDef edc:cname="SERCOM3_" edc:nzwidth="0x1" edc:desc="SERCOM3"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TCC0_" edc:nzwidth="0x1" edc:desc="TCC0"/>
            <edc:SFRFieldDef edc:cname="TCC1_" edc:nzwidth="0x1" edc:desc="TCC1"/>
            <edc:SFRFieldDef edc:cname="TCC2_" edc:nzwidth="0x1" edc:desc="TCC2"/>
            <edc:SFRFieldDef edc:cname="TC0_" edc:nzwidth="0x1" edc:desc="TC0"/>
            <edc:SFRFieldDef edc:cname="TC1_" edc:nzwidth="0x1" edc:desc="TC1"/>
            <edc:SFRFieldDef edc:cname="TC2_" edc:nzwidth="0x1" edc:desc="TC2"/>
            <edc:SFRFieldDef edc:cname="TC3_" edc:nzwidth="0x1" edc:desc="TC3"/>
            <edc:SFRFieldDef edc:cname="TC4_" edc:nzwidth="0x1" edc:desc="TC4"/>
            <edc:SFRFieldDef edc:cname="ADC0_" edc:nzwidth="0x1" edc:desc="ADC0"/>
            <edc:SFRFieldDef edc:cname="ADC1_" edc:nzwidth="0x1" edc:desc="ADC1"/>
            <edc:SFRFieldDef edc:cname="SDADC_" edc:nzwidth="0x1" edc:desc="SDADC"/>
            <edc:SFRFieldDef edc:cname="AC_" edc:nzwidth="0x1" edc:desc="AC"/>
            <edc:SFRFieldDef edc:cname="DAC_" edc:nzwidth="0x1" edc:desc="DAC"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CCL_" edc:nzwidth="0x1" edc:desc="CCL"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PDEC_" edc:nzwidth="0x1" edc:desc="PDEC"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x14" edc:_addr="0x40000020"/>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSA" edc:nzwidth="0x20" edc:access="-------------------rrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FFF" edc:_addr="0x40000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="PM_" edc:nzwidth="0x1" edc:desc="PM APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="MCLK_" edc:nzwidth="0x1" edc:desc="MCLK APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="RSTC_" edc:nzwidth="0x1" edc:desc="RSTC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="OSCCTRL_" edc:nzwidth="0x1" edc:desc="OSCCTRL APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="OSC32KCTRL_" edc:nzwidth="0x1" edc:desc="OSC32KCTRL APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SUPC_" edc:nzwidth="0x1" edc:desc="SUPC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="GCLK_" edc:nzwidth="0x1" edc:desc="GCLK APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="WDT_" edc:nzwidth="0x1" edc:desc="WDT APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="RTC_" edc:nzwidth="0x1" edc:desc="RTC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="EIC_" edc:nzwidth="0x1" edc:desc="EIC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="FREQM_" edc:nzwidth="0x1" edc:desc="FREQM APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TSENS_" edc:nzwidth="0x1" edc:desc="TSENS APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSB" edc:nzwidth="0x20" edc:access="--------------------------rrrrrr" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x3F" edc:_addr="0x40000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="PORT_" edc:nzwidth="0x1" edc:desc="PORT APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="NVMCTRL_" edc:nzwidth="0x1" edc:desc="NVMCTRL APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="DMAC_" edc:nzwidth="0x1" edc:desc="DMAC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="MTB_" edc:nzwidth="0x1" edc:desc="MTB APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="HMATRIXHS_" edc:nzwidth="0x1" edc:desc="HMATRIXHS APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PAC" edc:cname="STATUSC" edc:nzwidth="0x20" edc:access="-----r--r-rrrrrrrrrrrrr----rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BFFE1F" edc:_addr="0x4000003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PAC">
            <edc:SFRFieldDef edc:cname="EVSYS_" edc:nzwidth="0x1" edc:desc="EVSYS APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM0_" edc:nzwidth="0x1" edc:desc="SERCOM0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM1_" edc:nzwidth="0x1" edc:desc="SERCOM1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM2_" edc:nzwidth="0x1" edc:desc="SERCOM2 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM3_" edc:nzwidth="0x1" edc:desc="SERCOM3 APB Protect Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TCC0_" edc:nzwidth="0x1" edc:desc="TCC0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC1_" edc:nzwidth="0x1" edc:desc="TCC1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TCC2_" edc:nzwidth="0x1" edc:desc="TCC2 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC0_" edc:nzwidth="0x1" edc:desc="TC0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC1_" edc:nzwidth="0x1" edc:desc="TC1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC2_" edc:nzwidth="0x1" edc:desc="TC2 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC3_" edc:nzwidth="0x1" edc:desc="TC3 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="TC4_" edc:nzwidth="0x1" edc:desc="TC4 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="ADC0_" edc:nzwidth="0x1" edc:desc="ADC0 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="ADC1_" edc:nzwidth="0x1" edc:desc="ADC1 APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="SDADC_" edc:nzwidth="0x1" edc:desc="SDADC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="AC_" edc:nzwidth="0x1" edc:desc="AC APB Protect Enable"/>
            <edc:SFRFieldDef edc:cname="DAC_" edc:nzwidth="0x1" edc:desc="DAC APB Protect Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CCL_" edc:nzwidth="0x1" edc:desc="CCL APB Protect Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PDEC_" edc:nzwidth="0x1" edc:desc="PDEC APB Protect Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C1" edc:_addr="0x40000040"/>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="SLEEPCFG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x40000401">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:SFRFieldDef edc:cname="SLEEPMODE" edc:nzwidth="0x3" edc:desc="Sleep Mode">
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="CPU clock is OFF. AHB/APB clocks are provided to IPs requesting them" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STANDBY" edc:desc="CPU clock is OFF. AHB/APB clocks are stopped except if requested" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x40000402"/>
      <edc:SFRDef ltx:memberofperipheral="PM" edc:cname="STDBYCFG" edc:nzwidth="0x10" edc:access="-----n--nn------" edc:por="0000010000000000" edc:mclr="0000010000000000" edc:impl="0x4C0" edc:_addr="0x40000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PM">
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="VREGSMOD" edc:nzwidth="0x2" edc:desc="Voltage Regulator Standby mode">
              <edc:SFRFieldSemantic edc:cname="AUTO" edc:desc="Automatic mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PERFORMANCE" edc:desc="Performance oriented" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="LP" edc:desc="Low Power oriented" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BBIASHS" edc:nzwidth="0x1" edc:desc="Back Bias for SRAM"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3F7" edc:_addr="0x4000040A"/>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000801">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="CKRDY" edc:nzwidth="0x1" edc:desc="Clock Ready Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40000802">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="CKRDY" edc:nzwidth="0x1" edc:desc="Clock Ready Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000001" edc:mclr="00000001" edc:impl="0x1" edc:_addr="0x40000803">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="CKRDY" edc:nzwidth="0x1" edc:desc="Clock Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="CPUDIV" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000001" edc:mclr="00000001" edc:_addr="0x40000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="CPUDIV" edc:nzwidth="0x8" edc:desc="CPU Clock Division Factor">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Divide by 1" edc:when="(field &amp; 0xFF) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0xFF) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0xFF) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0xFF) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0xFF) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Divide by 32" edc:when="(field &amp; 0xFF) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0xFF) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide by 128" edc:when="(field &amp; 0xFF) == 0x80"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xB" edc:_addr="0x40000805"/>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="AHBMASK" edc:nzwidth="0x20" edc:access="---------------------n-nnnnnnnnn" edc:por="00000000000000000111111111111111" edc:mclr="00000000000000000111111111111111" edc:impl="0x5FF" edc:_addr="0x40000810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="APBA_" edc:nzwidth="0x1" edc:desc="APBA AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="APBB_" edc:nzwidth="0x1" edc:desc="APBB AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="APBC_" edc:nzwidth="0x1" edc:desc="APBC AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="HMATRIXHS_" edc:nzwidth="0x1" edc:desc="HMATRIXHS AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="NVMCTRL_" edc:nzwidth="0x1" edc:desc="NVMCTRL AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="HSRAM_" edc:nzwidth="0x1" edc:desc="HSRAM AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="DMAC_" edc:nzwidth="0x1" edc:desc="DMAC AHB Clock Mask"/>
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC AHB Clock Mask"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DIVAS_" edc:nzwidth="0x1" edc:desc="DIVAS AHB Clock Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="APBAMASK" edc:nzwidth="0x20" edc:access="-------------------nnnnnnnnnnnnn" edc:por="00000000000000000000111111111111" edc:mclr="00000000000000000000111111111111" edc:impl="0x1FFF" edc:_addr="0x40000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="PAC_" edc:nzwidth="0x1" edc:desc="PAC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="PM_" edc:nzwidth="0x1" edc:desc="PM APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="MCLK_" edc:nzwidth="0x1" edc:desc="MCLK APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="RSTC_" edc:nzwidth="0x1" edc:desc="RSTC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OSCCTRL_" edc:nzwidth="0x1" edc:desc="OSCCTRL APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="OSC32KCTRL_" edc:nzwidth="0x1" edc:desc="OSC32KCTRL APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SUPC_" edc:nzwidth="0x1" edc:desc="SUPC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="GCLK_" edc:nzwidth="0x1" edc:desc="GCLK APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="WDT_" edc:nzwidth="0x1" edc:desc="WDT APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="RTC_" edc:nzwidth="0x1" edc:desc="RTC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="EIC_" edc:nzwidth="0x1" edc:desc="EIC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="FREQM_" edc:nzwidth="0x1" edc:desc="FREQM APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TSENS_" edc:nzwidth="0x1" edc:desc="TSENS APB Clock Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="APBBMASK" edc:nzwidth="0x20" edc:access="--------------------------n--nnn" edc:por="00000000000000000000000000000111" edc:mclr="00000000000000000000000000000111" edc:impl="0x27" edc:_addr="0x40000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="PORT_" edc:nzwidth="0x1" edc:desc="PORT APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="DSU_" edc:nzwidth="0x1" edc:desc="DSU APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="NVMCTRL_" edc:nzwidth="0x1" edc:desc="NVMCTRL APB Clock Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="HMATRIXHS_" edc:nzwidth="0x1" edc:desc="HMATRIXHS APB Clock Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MCLK" edc:cname="APBCMASK" edc:nzwidth="0x20" edc:access="-----n--n-nnnnnnnnnnnnn----nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BFFE1F" edc:_addr="0x4000081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MCLK">
            <edc:SFRFieldDef edc:cname="EVSYS_" edc:nzwidth="0x1" edc:desc="EVSYS APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM0_" edc:nzwidth="0x1" edc:desc="SERCOM0 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM1_" edc:nzwidth="0x1" edc:desc="SERCOM1 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM2_" edc:nzwidth="0x1" edc:desc="SERCOM2 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SERCOM3_" edc:nzwidth="0x1" edc:desc="SERCOM3 APB Clock Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TCC0_" edc:nzwidth="0x1" edc:desc="TCC0 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TCC1_" edc:nzwidth="0x1" edc:desc="TCC1 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TCC2_" edc:nzwidth="0x1" edc:desc="TCC2 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TC0_" edc:nzwidth="0x1" edc:desc="TC0 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TC1_" edc:nzwidth="0x1" edc:desc="TC1 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TC2_" edc:nzwidth="0x1" edc:desc="TC2 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TC3_" edc:nzwidth="0x1" edc:desc="TC3 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="TC4_" edc:nzwidth="0x1" edc:desc="TC4 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="ADC0_" edc:nzwidth="0x1" edc:desc="ADC0 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="ADC1_" edc:nzwidth="0x1" edc:desc="ADC1 APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="SDADC_" edc:nzwidth="0x1" edc:desc="SDADC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="AC_" edc:nzwidth="0x1" edc:desc="AC APB Clock Enable"/>
            <edc:SFRFieldDef edc:cname="DAC_" edc:nzwidth="0x1" edc:desc="DAC APB Clock Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CCL_" edc:nzwidth="0x1" edc:desc="CCL APB Clock Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PDEC_" edc:nzwidth="0x1" edc:desc="PDEC APB Clock Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3E0" edc:_addr="0x40000820"/>
      <edc:SFRDef ltx:memberofperipheral="RSTC" edc:cname="RCAUSE" edc:nzwidth="0x8" edc:access="-rrr-rrr" edc:impl="0x77" edc:_addr="0x40000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RSTC">
            <edc:SFRFieldDef edc:cname="POR" edc:nzwidth="0x1" edc:desc="Power On Reset"/>
            <edc:SFRFieldDef edc:cname="BODCORE" edc:nzwidth="0x1" edc:desc="Brown Out CORE Detector Reset"/>
            <edc:SFRFieldDef edc:cname="BODVDD" edc:nzwidth="0x1" edc:desc="Brown Out VDD Detector Reset"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EXT" edc:nzwidth="0x1" edc:desc="External Reset"/>
            <edc:SFRFieldDef edc:cname="WDT" edc:nzwidth="0x1" edc:desc="Watchdog Reset"/>
            <edc:SFRFieldDef edc:cname="SYST" edc:nzwidth="0x1" edc:desc="System Reset Request"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3FF" edc:_addr="0x40000C01"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="--------------------nnnn---n--nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF13" edc:_addr="0x40001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="XOSCRDY" edc:nzwidth="0x1" edc:desc="XOSC Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="XOSCFAIL" edc:nzwidth="0x1" edc:desc="XOSC Clock Failure Detector Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSC48MRDY" edc:nzwidth="0x1" edc:desc="OSC48M Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKR" edc:nzwidth="0x1" edc:desc="DPLL Lock Rise Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKF" edc:nzwidth="0x1" edc:desc="DPLL Lock Fall Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLTO" edc:nzwidth="0x1" edc:desc="DPLL Time Out Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLDRTO" edc:nzwidth="0x1" edc:desc="DPLL Ratio Ready Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="--------------------nnnn---n--nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF13" edc:_addr="0x40001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="XOSCRDY" edc:nzwidth="0x1" edc:desc="XOSC Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="XOSCFAIL" edc:nzwidth="0x1" edc:desc="XOSC Clock Failure Detector Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSC48MRDY" edc:nzwidth="0x1" edc:desc="OSC48M Ready Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKR" edc:nzwidth="0x1" edc:desc="DPLL Lock Rise Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKF" edc:nzwidth="0x1" edc:desc="DPLL Lock Fall Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLTO" edc:nzwidth="0x1" edc:desc="DPLL Time Out Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DPLLLDRTO" edc:nzwidth="0x1" edc:desc="DPLL Ratio Ready Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="--------------------nnnn---n--nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF13" edc:_addr="0x40001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="XOSCRDY" edc:nzwidth="0x1" edc:desc="XOSC Ready"/>
            <edc:SFRFieldDef edc:cname="XOSCFAIL" edc:nzwidth="0x1" edc:desc="XOSC Clock Failure Detector"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSC48MRDY" edc:nzwidth="0x1" edc:desc="OSC48M Ready"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKR" edc:nzwidth="0x1" edc:desc="DPLL Lock Rise"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKF" edc:nzwidth="0x1" edc:desc="DPLL Lock Fall"/>
            <edc:SFRFieldDef edc:cname="DPLLLTO" edc:nzwidth="0x1" edc:desc="DPLL Timeout"/>
            <edc:SFRFieldDef edc:cname="DPLLLDRTO" edc:nzwidth="0x1" edc:desc="DPLL Ratio Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="--------------------rrrr---r-rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF17" edc:_addr="0x4000100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="XOSCRDY" edc:nzwidth="0x1" edc:desc="XOSC Ready"/>
            <edc:SFRFieldDef edc:cname="XOSCFAIL" edc:nzwidth="0x1" edc:desc="XOSC Clock Failure Detector"/>
            <edc:SFRFieldDef edc:cname="XOSCCKSW" edc:nzwidth="0x1" edc:desc="XOSC Clock Switch"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OSC48MRDY" edc:nzwidth="0x1" edc:desc="OSC48M Ready"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKR" edc:nzwidth="0x1" edc:desc="DPLL Lock Rise"/>
            <edc:SFRFieldDef edc:cname="DPLLLCKF" edc:nzwidth="0x1" edc:desc="DPLL Lock Fall"/>
            <edc:SFRFieldDef edc:cname="DPLLLTO" edc:nzwidth="0x1" edc:desc="DPLL Timeout"/>
            <edc:SFRFieldDef edc:cname="DPLLLDRTO" edc:nzwidth="0x1" edc:desc="DPLL Ratio Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="XOSCCTRL" edc:nzwidth="0x10" edc:access="nnnnnnnnnn-nnnn-" edc:por="0000000010000000" edc:mclr="0000000010000000" edc:impl="0xFFDE" edc:_addr="0x40001010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="XTALEN" edc:nzwidth="0x1" edc:desc="Crystal Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="CFDEN" edc:nzwidth="0x1" edc:desc="Xosc Clock Failure Detector Enable"/>
            <edc:SFRFieldDef edc:cname="SWBEN" edc:nzwidth="0x1" edc:desc="Clock Switch Back Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="GAIN" edc:nzwidth="0x3" edc:desc="Oscillator Gain">
              <edc:SFRFieldSemantic edc:cname="GAIN2" edc:desc="2 MHz" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GAIN4" edc:desc="4 MHz" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GAIN8" edc:desc="8 MHz" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="GAIN16" edc:desc="16 MHz" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="GAIN30" edc:desc="30 MHz" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMPGC" edc:nzwidth="0x1" edc:desc="Automatic Amplitude Gain Control"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:nzwidth="0x4" edc:desc="Start-Up Time">
              <edc:SFRFieldSemantic edc:cname="CYCLE1" edc:desc="1 cycle" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE2" edc:desc="2 cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE4" edc:desc="4 cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE8" edc:desc="8 cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE16" edc:desc="16 cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE32" edc:desc="32 cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE64" edc:desc="64 cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE128" edc:desc="128 cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE256" edc:desc="256 cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE512" edc:desc="512 cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE1024" edc:desc="1024 cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE2048" edc:desc="2048 cycles" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE4096" edc:desc="4096 cycles" edc:when="(field &amp; 0xF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE8192" edc:desc="8192 cycles" edc:when="(field &amp; 0xF) == 0xD"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE16384" edc:desc="16384 cycles" edc:when="(field &amp; 0xF) == 0xE"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE32768" edc:desc="32768 cycles" edc:when="(field &amp; 0xF) == 0xF"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="CFDPRESC" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x40001012">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="CFDPRESC" edc:nzwidth="0x3" edc:desc="Clock Failure Detector Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc=" OSC48M frequency" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc=" OSC48M frequency / 2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc=" OSC48M frequency / 4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc=" OSC48M frequency / 8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="OSC48M frequency / 16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="OSC48M frequency / 32" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="OSC48M frequency / 64" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="OSC48M frequency / 128" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40001013">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="CFDEO" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="OSC48MCTRL" edc:nzwidth="0x8" edc:access="nn----n-" edc:por="10000010" edc:mclr="10000010" edc:impl="0xC2" edc:_addr="0x40001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Oscillator Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="OSC48MDIV" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00001011" edc:mclr="00001011" edc:impl="0xF" edc:_addr="0x40001015">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x4" edc:desc="OSC48M Division Factor">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="48 MHz" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="24 MHz" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV3" edc:desc="16 MHz" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="12 MHz" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV5" edc:desc="9.6 MHz" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV6" edc:desc="8 MHz" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV7" edc:desc="6.86 MHz" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="6 MHz" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="DIV9" edc:desc="5.33 MHz" edc:when="(field &amp; 0xF) == 8"/>
              <edc:SFRFieldSemantic edc:cname="DIV10" edc:desc="4.8 MHz" edc:when="(field &amp; 0xF) == 9"/>
              <edc:SFRFieldSemantic edc:cname="DIV11" edc:desc="4.36 MHz" edc:when="(field &amp; 0xF) == 10"/>
              <edc:SFRFieldSemantic edc:cname="DIV12" edc:desc="4 MHz" edc:when="(field &amp; 0xF) == 11"/>
              <edc:SFRFieldSemantic edc:cname="DIV13" edc:desc="3.69 MHz" edc:when="(field &amp; 0xF) == 12"/>
              <edc:SFRFieldSemantic edc:cname="DIV14" edc:desc="3.43 MHz" edc:when="(field &amp; 0xF) == 13"/>
              <edc:SFRFieldSemantic edc:cname="DIV15" edc:desc="3.2 MHz" edc:when="(field &amp; 0xF) == 14"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="3 MHz" edc:when="(field &amp; 0xF) == 15"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="OSC48MSTUP" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000111" edc:mclr="00000111" edc:impl="0x7" edc:_addr="0x40001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="STARTUP" edc:nzwidth="0x3" edc:desc="Startup Time">
              <edc:SFRFieldSemantic edc:cname="CYCLE8" edc:desc="166 ns" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE16" edc:desc="333 ns" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE32" edc:desc="667 ns" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE64" edc:desc="1.333 us" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE128" edc:desc="2.667 us" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE256" edc:desc="5.333 us" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE512" edc:desc="10.667 us" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE1024" edc:desc="21.333 us" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40001017"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="OSC48MSYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------r--" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4" edc:_addr="0x40001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OSC48MDIV" edc:nzwidth="0x1" edc:desc="OSC48MDIV Synchronization Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLCTRLA" edc:nzwidth="0x8" edc:access="nn----n-" edc:por="10000000" edc:mclr="10000000" edc:impl="0xC2" edc:_addr="0x4000101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4000101D"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLRATIO" edc:nzwidth="0x20" edc:access="------------nnnn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FFF" edc:_addr="0x40001020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="LDR" edc:nzwidth="0xC" edc:desc="Loop Divider Ratio"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="LDRFRAC" edc:nzwidth="0x4" edc:desc="Loop Divider Ratio Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLCTRLB" edc:nzwidth="0x20" edc:access="-----nnnnnnnnnnn---n-nnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF173F" edc:_addr="0x40001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x2" edc:desc="Proportional Integral Filter Selection">
              <edc:SFRFieldSemantic edc:cname="Default" edc:desc="Default Filter Mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LBFILT" edc:desc="Low Bandwidth Filter" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="HBFILT" edc:desc="High Bandwidth Filter" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HDFILT" edc:desc="High Damping Filter" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LPEN" edc:nzwidth="0x1" edc:desc="Low-Power Enable"/>
            <edc:SFRFieldDef edc:cname="WUF" edc:nzwidth="0x1" edc:desc="Wake Up Fast"/>
            <edc:SFRFieldDef edc:cname="REFCLK" edc:nzwidth="0x2" edc:desc="Reference Clock Selection">
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K Clock Reference" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC Clock Reference" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="GCLK Clock Reference" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LTIME" edc:nzwidth="0x3" edc:desc="Lock Time">
              <edc:SFRFieldSemantic edc:cname="Default" edc:desc="No time-out. Automatic lock" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="8MS" edc:desc="Time-out if no lock within 8 ms" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="9MS" edc:desc="Time-out if no lock within 9 ms" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="10MS" edc:desc="Time-out if no lock within 10 ms" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="11MS" edc:desc="Time-out if no lock within 11 ms" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LBYPASS" edc:nzwidth="0x1" edc:desc="Lock Bypass"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0xB" edc:desc="Clock Divider"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLPRESC" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x2" edc:desc="Output Clock Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="DPLL output is divided by 1" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="DPLL output is divided by 2" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="DPLL output is divided by 4" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40001029"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLSYNCBUSY" edc:nzwidth="0x8" edc:access="----rrr-" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE" edc:_addr="0x4000102C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="DPLL Enable Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="DPLLRATIO" edc:nzwidth="0x1" edc:desc="DPLL Ratio Synchronization Status"/>
            <edc:SFRFieldDef edc:cname="DPLLPRESC" edc:nzwidth="0x1" edc:desc="DPLL Prescaler Synchronization Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4000102D"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="DPLLSTATUS" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x1" edc:desc="DPLL Lock Status"/>
            <edc:SFRFieldDef edc:cname="CLKRDY" edc:nzwidth="0x1" edc:desc="DPLL Clock Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7" edc:_addr="0x40001031"/>
      <edc:SFRDef ltx:memberofperipheral="OSCCTRL" edc:cname="CAL48M" edc:nzwidth="0x20" edc:access="----------nnnnnn------nn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F033F" edc:_addr="0x40001038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSCCTRL">
            <edc:SFRFieldDef edc:cname="FCAL" edc:nzwidth="0x6" edc:desc="Frequency Calibration (48MHz)"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FRANGE" edc:nzwidth="0x2" edc:desc="Frequency Range (48MHz)"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="TCAL" edc:nzwidth="0x6" edc:desc="Temperature Calibration (48MHz)"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C4" edc:_addr="0x4000103C"/>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x40001400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="XOSC32KRDY" edc:nzwidth="0x1" edc:desc="XOSC32K Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OSC32KRDY" edc:nzwidth="0x1" edc:desc="OSC32K Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CLKFAIL" edc:nzwidth="0x1" edc:desc="XOSC32K Clock Failure Detector Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x40001404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="XOSC32KRDY" edc:nzwidth="0x1" edc:desc="XOSC32K Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OSC32KRDY" edc:nzwidth="0x1" edc:desc="OSC32K Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CLKFAIL" edc:nzwidth="0x1" edc:desc="XOSC32K Clock Failure Detector Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x40001408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="XOSC32KRDY" edc:nzwidth="0x1" edc:desc="XOSC32K Ready"/>
            <edc:SFRFieldDef edc:cname="OSC32KRDY" edc:nzwidth="0x1" edc:desc="OSC32K Ready"/>
            <edc:SFRFieldDef edc:cname="CLKFAIL" edc:nzwidth="0x1" edc:desc="XOSC32K Clock Failure Detector"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----------------------------rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x4000140C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="XOSC32KRDY" edc:nzwidth="0x1" edc:desc="XOSC32K Ready"/>
            <edc:SFRFieldDef edc:cname="OSC32KRDY" edc:nzwidth="0x1" edc:desc="OSC32K Ready"/>
            <edc:SFRFieldDef edc:cname="CLKFAIL" edc:nzwidth="0x1" edc:desc="XOSC32K Clock Failure Detector"/>
            <edc:SFRFieldDef edc:cname="CLKSW" edc:nzwidth="0x1" edc:desc="XOSC32K Clock switch"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="RTCCTRL" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x40001410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="RTCSEL" edc:nzwidth="0x3" edc:desc="RTC Clock Selection">
              <edc:SFRFieldSemantic edc:cname="ULP1K" edc:desc="1.024kHz from 32kHz internal ULP oscillator" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ULP32K" edc:desc="32.768kHz from 32kHz internal ULP oscillator" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="OSC1K" edc:desc="1.024kHz from 32.768kHz internal oscillator" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="32.768kHz from 32.768kHz internal oscillator" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="XOSC1K" edc:desc="1.024kHz from 32.768kHz external crystal oscillator" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="32.768kHz from 32.768kHz external crystal oscillator" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="XOSC32K" edc:nzwidth="0x10" edc:access="---n-nnnnn-nnnn-" edc:por="0000000010000000" edc:mclr="0000000010000000" edc:impl="0x17DE" edc:_addr="0x40001414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="XTALEN" edc:nzwidth="0x1" edc:desc="Crystal Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="EN32K" edc:nzwidth="0x1" edc:desc="32kHz Output Enable"/>
            <edc:SFRFieldDef edc:cname="EN1K" edc:nzwidth="0x1" edc:desc="1kHz Output Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:nzwidth="0x3" edc:desc="Oscillator Start-Up Time">
              <edc:SFRFieldSemantic edc:cname="CYCLE1" edc:desc="122 us" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE32" edc:desc="1.06 ms" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE2048" edc:desc="62.6 ms" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE4096" edc:desc="125 ms" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE16384" edc:desc="500 ms" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE32768" edc:desc="1 s" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE65536" edc:desc="2 s" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE131072" edc:desc="4 s" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="CFDCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x40001416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="CFDEN" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Enable"/>
            <edc:SFRFieldDef edc:cname="SWBACK" edc:nzwidth="0x1" edc:desc="Clock Switch Back Enable"/>
            <edc:SFRFieldDef edc:cname="CFDPRESC" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Prescaler"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40001417">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:SFRFieldDef edc:cname="CFDEO" edc:nzwidth="0x1" edc:desc="Clock Failure Detector Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="OSC32K" edc:nzwidth="0x20" edc:access="---------nnnnnnn---n-nnnnn--nnn-" edc:por="00000000001111110000000010000000" edc:mclr="00000000001111110000000010000000" edc:impl="0x7F17CE" edc:_addr="0x40001418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Oscillator Enable"/>
            <edc:SFRFieldDef edc:cname="EN32K" edc:nzwidth="0x1" edc:desc="32kHz Output Enable"/>
            <edc:SFRFieldDef edc:cname="EN1K" edc:nzwidth="0x1" edc:desc="1kHz Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:SFRFieldDef edc:cname="STARTUP" edc:nzwidth="0x3" edc:desc="Oscillator Start-Up Time">
              <edc:SFRFieldSemantic edc:cname="CYCLE3" edc:desc="0.183 ms" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE4" edc:desc="0.214 ms" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE6" edc:desc="0.275 ms" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE10" edc:desc="0.397 ms" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE18" edc:desc="0.641 ms" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE34" edc:desc="1.129 ms" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE66" edc:desc="2.106 ms" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CYCLE130" edc:desc="4.059 ms" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CALIB" edc:nzwidth="0x7" edc:desc="Oscillator Calibration"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="OSC32KCTRL" edc:cname="OSCULP32K" edc:nzwidth="0x20" edc:access="----------------n--nnnnn-----nn-" edc:impl="0x9F06" edc:_addr="0x4000141C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="OSC32KCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EN32K" edc:nzwidth="0x1" edc:desc="Enable Out 32k"/>
            <edc:SFRFieldDef edc:cname="EN1K" edc:nzwidth="0x1" edc:desc="Enable Out 1k"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="CALIB" edc:nzwidth="0x5" edc:desc="Oscillator Calibration"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3E0" edc:_addr="0x40001420"/>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x40001800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="BODVDDRDY" edc:nzwidth="0x1" edc:desc="BODVDD Ready"/>
            <edc:SFRFieldDef edc:cname="BODVDDDET" edc:nzwidth="0x1" edc:desc="BODVDD Detection"/>
            <edc:SFRFieldDef edc:cname="BVDDSRDY" edc:nzwidth="0x1" edc:desc="BODVDD Synchronization Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x40001804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="BODVDDRDY" edc:nzwidth="0x1" edc:desc="BODVDD Ready"/>
            <edc:SFRFieldDef edc:cname="BODVDDDET" edc:nzwidth="0x1" edc:desc="BODVDD Detection"/>
            <edc:SFRFieldDef edc:cname="BVDDSRDY" edc:nzwidth="0x1" edc:desc="BODVDD Synchronization Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x40001808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="BODVDDRDY" edc:nzwidth="0x1" edc:desc="BODVDD Ready"/>
            <edc:SFRFieldDef edc:cname="BODVDDDET" edc:nzwidth="0x1" edc:desc="BODVDD Detection"/>
            <edc:SFRFieldDef edc:cname="BVDDSRDY" edc:nzwidth="0x1" edc:desc="BODVDD Synchronization Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:_addr="0x4000180C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:SFRFieldDef edc:cname="BODVDDRDY" edc:nzwidth="0x1" edc:desc="BODVDD Ready"/>
            <edc:SFRFieldDef edc:cname="BODVDDDET" edc:nzwidth="0x1" edc:desc="BODVDD Detection"/>
            <edc:SFRFieldDef edc:cname="BVDDSRDY" edc:nzwidth="0x1" edc:desc="BODVDD Synchronization Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="BODVDD" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnn---n-nnnnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FF17E" edc:_addr="0x40001810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="HYST" edc:nzwidth="0x1" edc:desc="Hysteresis Enable"/>
            <edc:SFRFieldDef edc:cname="ACTION" edc:nzwidth="0x2" edc:desc="Action when Threshold Crossed">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="RESET" edc:desc="The BODVDD generates a reset" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="INT" edc:desc="The BODVDD generates an interrupt" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="STDBYCFG" edc:nzwidth="0x1" edc:desc="Configuration in Standby mode"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ACTCFG" edc:nzwidth="0x1" edc:desc="Configuration in Active mode"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PSEL" edc:nzwidth="0x4" edc:desc="Prescaler Select">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide clock by 2" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide clock by 4" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide clock by 8" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide clock by 16" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Divide clock by 32" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide clock by 64" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide clock by 128" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide clock by 256" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="Divide clock by 512" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide clock by 1024" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="DIV2048" edc:desc="Divide clock by 2048" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="DIV4096" edc:desc="Divide clock by 4096" edc:when="(field &amp; 0xF) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="DIV8192" edc:desc="Divide clock by 8192" edc:when="(field &amp; 0xF) == 0xC"/>
              <edc:SFRFieldSemantic edc:cname="DIV16384" edc:desc="Divide clock by 16384" edc:when="(field &amp; 0xF) == 0xD"/>
              <edc:SFRFieldSemantic edc:cname="DIV32768" edc:desc="Divide clock by 32768" edc:when="(field &amp; 0xF) == 0xE"/>
              <edc:SFRFieldSemantic edc:cname="DIV65536" edc:desc="Divide clock by 65536" edc:when="(field &amp; 0xF) == 0xF"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LEVEL" edc:nzwidth="0x6" edc:desc="Threshold Level for VDD"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40001814"/>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="VREG" edc:nzwidth="0x20" edc:access="-------------------------n----n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x42" edc:_addr="0x40001818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SUPC" edc:cname="VREF" edc:nzwidth="0x20" edc:access="------------nnnn--------nn---nn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF00C6" edc:_addr="0x4000181C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SUPC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TSEN" edc:nzwidth="0x1" edc:desc="Temperature Sensor Output Enable"/>
            <edc:SFRFieldDef edc:cname="VREFOE" edc:nzwidth="0x1" edc:desc="Voltage Reference Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x4" edc:desc="Voltage Reference Selection">
              <edc:SFRFieldSemantic edc:cname="1V024" edc:desc="1.024V voltage reference typical value" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2V048" edc:desc="2.048V voltage reference typical value" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="4V096" edc:desc="4.096V voltage reference typical value" edc:when="(field &amp; 0xF) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3E0" edc:_addr="0x40001820"/>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40001C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x40001C01"/>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------rrrrrrrrr-r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FD" edc:_addr="0x40001C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy bit"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="GENCTRL0" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 0 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GENCTRL1" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 1 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GENCTRL2" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 2 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GENCTRL3" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 3 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GENCTRL4" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 4 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GENCTRL5" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 5 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GENCTRL6" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 6 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GENCTRL7" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 7 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="GENCTRL8" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Control 8 Synchronization Busy bit">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0x1) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0x1) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0x1) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0x1) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0x1) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0x1) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0x1) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0x1) == 0x80"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0x1) == 0x100"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x18" edc:_addr="0x40001C08"/>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C38">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C3C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="GENCTRL8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn--nnnnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF3F07" edc:_addr="0x40001C40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x3" edc:desc="Source Select">
              <edc:SFRFieldSemantic edc:cname="XOSC" edc:desc="XOSC oscillator output" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="GCLKIN" edc:desc="Generator input pad (GCLK_IO)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="GCLKGEN1" edc:desc="Generic clock generator 1 output" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OSCULP32K" edc:desc="OSCULP32K oscillator output" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OSC32K" edc:desc="OSC32K oscillator output" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="XOSC32K" edc:desc="XOSC32K oscillator output" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="OSC48M" edc:desc="OSC48M oscillator output" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FDPLL96M" edc:desc="FDPLL96M output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="GENEN" edc:nzwidth="0x1" edc:desc="Generic Clock Generator Enable"/>
            <edc:SFRFieldDef edc:cname="IDC" edc:nzwidth="0x1" edc:desc="Improve Duty Cycle"/>
            <edc:SFRFieldDef edc:cname="OOV" edc:nzwidth="0x1" edc:desc="Output Off Value"/>
            <edc:SFRFieldDef edc:cname="OE" edc:nzwidth="0x1" edc:desc="Output Enable"/>
            <edc:SFRFieldDef edc:cname="DIVSEL" edc:nzwidth="0x1" edc:desc="Divide Selection">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Division by GENCTRLn.DIV" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Division by 2^(GENCTRLn.DIV+1)" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIV" edc:nzwidth="0x10" edc:desc="Division Factor"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3C" edc:_addr="0x40001C44"/>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL0" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001C80">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL1" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001C84">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL2" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001C88">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL3" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001C8C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL4" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001C90">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL5" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001C94">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL6" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001C98">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL7" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001C9C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL8" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CA0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL9" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CA4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL10" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CA8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL11" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CAC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL12" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CB0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL13" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CB4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL14" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CB8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL15" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CBC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL16" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CC0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL17" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CC4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL18" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CC8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL19" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL20" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL21" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CD4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL22" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CD8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL23" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CDC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL24" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL25" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CE4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL26" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL27" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL28" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL29" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL30" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL31" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001CFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL32" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001D00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL33" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001D04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="GCLK" edc:cname="PCHCTRL34" edc:nzwidth="0x20" edc:access="------------------------nn--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xCF" edc:_addr="0x40001D08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="GCLK">
            <edc:SFRFieldDef edc:cname="GEN" edc:nzwidth="0x4" edc:desc="Generic Clock Generator">
              <edc:SFRFieldSemantic edc:cname="GCLK0" edc:desc="Generic clock generator 0" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="GCLK1" edc:desc="Generic clock generator 1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="GCLK2" edc:desc="Generic clock generator 2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="GCLK3" edc:desc="Generic clock generator 3" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="GCLK4" edc:desc="Generic clock generator 4" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="GCLK5" edc:desc="Generic clock generator 5" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GCLK6" edc:desc="Generic clock generator 6" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="GCLK7" edc:desc="Generic clock generator 7" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="GCLK8" edc:desc="Generic clock generator 8" edc:when="(field &amp; 0xF) == 0x8"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CHEN" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:SFRFieldDef edc:cname="WRTLOCK" edc:nzwidth="0x1" edc:desc="Write Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2F4" edc:_addr="0x40001D0C"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="n----nn-" edc:por="00000000" edc:mclr="00000000" edc:impl="0x86" edc:_addr="0x40002000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="WEN" edc:nzwidth="0x1" edc:desc="Watchdog Timer Window Mode Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ALWAYSON" edc:nzwidth="0x1" edc:desc="Always-On"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CONFIG" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="10111011" edc:mclr="10111011" edc:_addr="0x40002001">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x4" edc:desc="Time-Out Period">
              <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="16384 clock cycles" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="WINDOW" edc:nzwidth="0x4" edc:desc="Window Mode Time-Out Period">
              <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="16384 clock cycles" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="EWCTRL" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00001011" edc:mclr="00001011" edc:impl="0xF" edc:_addr="0x40002002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="EWOFFSET" edc:nzwidth="0x4" edc:desc="Early Warning Interrupt Time Offset">
              <edc:SFRFieldSemantic edc:cname="CYC8" edc:desc="8 clock cycles" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CYC16" edc:desc="16 clock cycles" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CYC32" edc:desc="32 clock cycles" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CYC64" edc:desc="64 clock cycles" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="CYC128" edc:desc="128 clock cycles" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="CYC256" edc:desc="256 clock cycles" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="CYC512" edc:desc="512 clock cycles" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="CYC1024" edc:desc="1024 clock cycles" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="CYC2048" edc:desc="2048 clock cycles" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="CYC4096" edc:desc="4096 clock cycles" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="CYC8192" edc:desc="8192 clock cycles" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="CYC16384" edc:desc="16384 clock cycles" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40002003"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="EW" edc:nzwidth="0x1" edc:desc="Early Warning Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="EW" edc:nzwidth="0x1" edc:desc="Early Warning Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="EW" edc:nzwidth="0x1" edc:desc="Early Warning"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x40002007"/>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrr-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1E" edc:_addr="0x40002008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WEN" edc:nzwidth="0x1" edc:desc="Window Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ALWAYSON" edc:nzwidth="0x1" edc:desc="Always-On Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x1" edc:desc="Clear Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="WDT" edc:cname="CLEAR" edc:nzwidth="0x8" edc:access="wwwwwwww" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4000200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="WDT">
            <edc:SFRFieldDef edc:cname="CLEAR" edc:nzwidth="0x8" edc:desc="Watchdog Clear">
              <edc:SFRFieldSemantic edc:cname="KEY" edc:desc="Clear Key" edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x401" edc:_addr="0x4000200D"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4000240E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5" edc:_addr="0x4000240F"/>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="FREQCORR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x40002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x7" edc:desc="Correction Value"/>
            <edc:SFRFieldDef edc:cname="SIGN" edc:nzwidth="0x1" edc:desc="Correction Sign"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EB" edc:_addr="0x40002415"/>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x40002800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CKSEL" edc:nzwidth="0x1" edc:desc="Clock Selection">
              <edc:SFRFieldSemantic edc:cname="CLK_GCLK" edc:desc="Clocked by GCLK" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CLK_ULP32K" edc:desc="Clocked by ULP32K" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="NMICTRL" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x40002801">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="NMISENSE" edc:nzwidth="0x3" edc:desc="Non-Maskable Interrupt Sense Configuration">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising-edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling-edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both-edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High-level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low-level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="NMIFILTEN" edc:nzwidth="0x1" edc:desc="Non-Maskable Interrupt Filter Enable"/>
            <edc:SFRFieldDef edc:cname="NMIASYNCH" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="NMIFLAG" edc:nzwidth="0x10" edc:access="---------------n" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1" edc:_addr="0x40002802">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="NMI" edc:nzwidth="0x1" edc:desc="Non-Maskable Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x40002804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINTEO0" edc:nzwidth="0x1" edc:desc="External Interrupt 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO1" edc:nzwidth="0x1" edc:desc="External Interrupt 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO2" edc:nzwidth="0x1" edc:desc="External Interrupt 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO3" edc:nzwidth="0x1" edc:desc="External Interrupt 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO4" edc:nzwidth="0x1" edc:desc="External Interrupt 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO5" edc:nzwidth="0x1" edc:desc="External Interrupt 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO6" edc:nzwidth="0x1" edc:desc="External Interrupt 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO7" edc:nzwidth="0x1" edc:desc="External Interrupt 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO8" edc:nzwidth="0x1" edc:desc="External Interrupt 8 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO9" edc:nzwidth="0x1" edc:desc="External Interrupt 9 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO10" edc:nzwidth="0x1" edc:desc="External Interrupt 10 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO11" edc:nzwidth="0x1" edc:desc="External Interrupt 11 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO12" edc:nzwidth="0x1" edc:desc="External Interrupt 12 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO13" edc:nzwidth="0x1" edc:desc="External Interrupt 13 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO14" edc:nzwidth="0x1" edc:desc="External Interrupt 14 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINTEO15" edc:nzwidth="0x1" edc:desc="External Interrupt 15 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x4000280C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT0" edc:nzwidth="0x1" edc:desc="External Interrupt 0 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT1" edc:nzwidth="0x1" edc:desc="External Interrupt 1 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT2" edc:nzwidth="0x1" edc:desc="External Interrupt 2 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT3" edc:nzwidth="0x1" edc:desc="External Interrupt 3 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT4" edc:nzwidth="0x1" edc:desc="External Interrupt 4 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT5" edc:nzwidth="0x1" edc:desc="External Interrupt 5 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT6" edc:nzwidth="0x1" edc:desc="External Interrupt 6 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT7" edc:nzwidth="0x1" edc:desc="External Interrupt 7 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT8" edc:nzwidth="0x1" edc:desc="External Interrupt 8 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT9" edc:nzwidth="0x1" edc:desc="External Interrupt 9 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT10" edc:nzwidth="0x1" edc:desc="External Interrupt 10 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT11" edc:nzwidth="0x1" edc:desc="External Interrupt 11 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT12" edc:nzwidth="0x1" edc:desc="External Interrupt 12 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT13" edc:nzwidth="0x1" edc:desc="External Interrupt 13 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT14" edc:nzwidth="0x1" edc:desc="External Interrupt 14 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT15" edc:nzwidth="0x1" edc:desc="External Interrupt 15 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT0" edc:nzwidth="0x1" edc:desc="External Interrupt 0 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT1" edc:nzwidth="0x1" edc:desc="External Interrupt 1 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT2" edc:nzwidth="0x1" edc:desc="External Interrupt 2 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT3" edc:nzwidth="0x1" edc:desc="External Interrupt 3 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT4" edc:nzwidth="0x1" edc:desc="External Interrupt 4 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT5" edc:nzwidth="0x1" edc:desc="External Interrupt 5 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT6" edc:nzwidth="0x1" edc:desc="External Interrupt 6 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT7" edc:nzwidth="0x1" edc:desc="External Interrupt 7 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT8" edc:nzwidth="0x1" edc:desc="External Interrupt 8 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT9" edc:nzwidth="0x1" edc:desc="External Interrupt 9 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT10" edc:nzwidth="0x1" edc:desc="External Interrupt 10 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT11" edc:nzwidth="0x1" edc:desc="External Interrupt 11 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT12" edc:nzwidth="0x1" edc:desc="External Interrupt 12 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT13" edc:nzwidth="0x1" edc:desc="External Interrupt 13 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT14" edc:nzwidth="0x1" edc:desc="External Interrupt 14 Enable"/>
            <edc:SFRFieldDef edc:cname="EXTINT15" edc:nzwidth="0x1" edc:desc="External Interrupt 15 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="EXTINT0" edc:nzwidth="0x1" edc:desc="External Interrupt 0"/>
            <edc:SFRFieldDef edc:cname="EXTINT1" edc:nzwidth="0x1" edc:desc="External Interrupt 1"/>
            <edc:SFRFieldDef edc:cname="EXTINT2" edc:nzwidth="0x1" edc:desc="External Interrupt 2"/>
            <edc:SFRFieldDef edc:cname="EXTINT3" edc:nzwidth="0x1" edc:desc="External Interrupt 3"/>
            <edc:SFRFieldDef edc:cname="EXTINT4" edc:nzwidth="0x1" edc:desc="External Interrupt 4"/>
            <edc:SFRFieldDef edc:cname="EXTINT5" edc:nzwidth="0x1" edc:desc="External Interrupt 5"/>
            <edc:SFRFieldDef edc:cname="EXTINT6" edc:nzwidth="0x1" edc:desc="External Interrupt 6"/>
            <edc:SFRFieldDef edc:cname="EXTINT7" edc:nzwidth="0x1" edc:desc="External Interrupt 7"/>
            <edc:SFRFieldDef edc:cname="EXTINT8" edc:nzwidth="0x1" edc:desc="External Interrupt 8"/>
            <edc:SFRFieldDef edc:cname="EXTINT9" edc:nzwidth="0x1" edc:desc="External Interrupt 9"/>
            <edc:SFRFieldDef edc:cname="EXTINT10" edc:nzwidth="0x1" edc:desc="External Interrupt 10"/>
            <edc:SFRFieldDef edc:cname="EXTINT11" edc:nzwidth="0x1" edc:desc="External Interrupt 11"/>
            <edc:SFRFieldDef edc:cname="EXTINT12" edc:nzwidth="0x1" edc:desc="External Interrupt 12"/>
            <edc:SFRFieldDef edc:cname="EXTINT13" edc:nzwidth="0x1" edc:desc="External Interrupt 13"/>
            <edc:SFRFieldDef edc:cname="EXTINT14" edc:nzwidth="0x1" edc:desc="External Interrupt 14"/>
            <edc:SFRFieldDef edc:cname="EXTINT15" edc:nzwidth="0x1" edc:desc="External Interrupt 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="ASYNCH" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x40002818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="ASYNCH0" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT0">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH1" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT1">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH2" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT2">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH3" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT3">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH4" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT4">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH5" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT5">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH6" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT6">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH7" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT7">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH8" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT8">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH9" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT9">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH10" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT10">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH11" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT11">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH12" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT12">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH13" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT13">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH14" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT14">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ASYNCH15" edc:nzwidth="0x1" edc:desc="Asynchronous Edge Detection Mode of EXTINT15">
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Edge detection is clock synchronously operated" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Edge detection is clock asynchronously operated" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="CONFIG0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4000281C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SENSE0" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 0">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN0" edc:nzwidth="0x1" edc:desc="Filter Enable 0"/>
            <edc:SFRFieldDef edc:cname="SENSE1" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 1">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN1" edc:nzwidth="0x1" edc:desc="Filter Enable 1"/>
            <edc:SFRFieldDef edc:cname="SENSE2" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 2">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN2" edc:nzwidth="0x1" edc:desc="Filter Enable 2"/>
            <edc:SFRFieldDef edc:cname="SENSE3" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 3">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN3" edc:nzwidth="0x1" edc:desc="Filter Enable 3"/>
            <edc:SFRFieldDef edc:cname="SENSE4" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 4">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN4" edc:nzwidth="0x1" edc:desc="Filter Enable 4"/>
            <edc:SFRFieldDef edc:cname="SENSE5" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 5">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN5" edc:nzwidth="0x1" edc:desc="Filter Enable 5"/>
            <edc:SFRFieldDef edc:cname="SENSE6" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 6">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN6" edc:nzwidth="0x1" edc:desc="Filter Enable 6"/>
            <edc:SFRFieldDef edc:cname="SENSE7" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 7">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN7" edc:nzwidth="0x1" edc:desc="Filter Enable 7"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EIC" edc:cname="CONFIG1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x40002820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EIC">
            <edc:SFRFieldDef edc:cname="SENSE8" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 8">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN8" edc:nzwidth="0x1" edc:desc="Filter Enable 8"/>
            <edc:SFRFieldDef edc:cname="SENSE9" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 9">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN9" edc:nzwidth="0x1" edc:desc="Filter Enable 9"/>
            <edc:SFRFieldDef edc:cname="SENSE10" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 10">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN10" edc:nzwidth="0x1" edc:desc="Filter Enable 10"/>
            <edc:SFRFieldDef edc:cname="SENSE11" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 11">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN11" edc:nzwidth="0x1" edc:desc="Filter Enable 11"/>
            <edc:SFRFieldDef edc:cname="SENSE12" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 12">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN12" edc:nzwidth="0x1" edc:desc="Filter Enable 12"/>
            <edc:SFRFieldDef edc:cname="SENSE13" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 13">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN13" edc:nzwidth="0x1" edc:desc="Filter Enable 13"/>
            <edc:SFRFieldDef edc:cname="SENSE14" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 14">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN14" edc:nzwidth="0x1" edc:desc="Filter Enable 14"/>
            <edc:SFRFieldDef edc:cname="SENSE15" edc:nzwidth="0x3" edc:desc="Input Sense Configuration 15">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No detection" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Rising edge detection" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Falling edge detection" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Both edges detection" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High level detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low level detection" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FILTEN15" edc:nzwidth="0x1" edc:desc="Filter Enable 15"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3DC" edc:_addr="0x40002824"/>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40002C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-------w" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start Measurement"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="CFGA" edc:nzwidth="0x10" edc:access="--------nnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF" edc:_addr="0x40002C02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="REFNUM" edc:nzwidth="0x8" edc:desc="Number of Reference Clock Cycles"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x40002C04"/>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40002C0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Measurement Done"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x40002C0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="FREQM Status"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Sticky Count Value Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x40002C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="FREQM" edc:cname="VALUE" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40002C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="FREQM">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x18" edc:desc="Measurement Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x40002C14"/>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x43" edc:_addr="0x40003000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-------w" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40003001">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start Measurement"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="---n-nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x17" edc:_addr="0x40003002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="WINMODE" edc:nzwidth="0x3" edc:desc="Window Monitor Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No window mode (default)" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="VALUE greater than WINLT" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="VALUE less than WINUT" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="VALUE greater than WINLT and VALUE less than WINUT" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="VALUE less than WINLT or VALUE greater than WINUT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="HYST_ABOVE" edc:desc="VALUE greater than WINUT with hysteresis to WINLT" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="HYST_BELOW" edc:desc="VALUE less than WINLST with hysteresis to WINUT" edc:when="(field &amp; 0x7) == 6"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="Free Running Measurement"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x40003003">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="STARTEI" edc:nzwidth="0x1" edc:desc="Start Conversion Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="STARTINV" edc:nzwidth="0x1" edc:desc="Start Conversion Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="WINEO" edc:nzwidth="0x1" edc:desc="Window Monitor Event Out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x40003004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x40003005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x40003006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40003007">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Result Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x40003008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="VALUE" edc:nzwidth="0x20" edc:access="--------rrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4000300C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x18" edc:desc="Measurement Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="WINLT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x18" edc:desc="Window Lower Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="WINUT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x18" edc:desc="Window Upper Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="GAIN" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x40003018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="GAIN" edc:nzwidth="0x18" edc:desc="Time Amplifier Gain"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="OFFSET" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4000301C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="OFFSETC" edc:nzwidth="0x18" edc:desc="Offset Correction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="CAL" edc:nzwidth="0x20" edc:access="------------------nnnnnn--nnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3F3F" edc:_addr="0x40003020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="FCAL" edc:nzwidth="0x6" edc:desc="Frequency Calibration"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TCAL" edc:nzwidth="0x6" edc:desc="Temperature Calibration"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TSENS" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x40003024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TSENS">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xFFCFDB" edc:_addr="0x40003025"/>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0DIR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x20" edc:desc="Port Data Direction"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0DIRCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRCLR" edc:nzwidth="0x20" edc:desc="Port Data Direction Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0DIRSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRSET" edc:nzwidth="0x20" edc:desc="Port Data Direction Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0DIRTGL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="DIRTGL" edc:nzwidth="0x20" edc:desc="Port Data Direction Toggle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0OUT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x20" edc:desc="PORT Data Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0OUTCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTCLR" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Clear"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0OUTSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTSET" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Set"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0OUTTGL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="OUTTGL" edc:nzwidth="0x20" edc:desc="PORT Data Output Value Toggle"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0IN" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="IN" edc:nzwidth="0x20" edc:desc="PORT Data Input Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0CTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41000024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="SAMPLING" edc:nzwidth="0x20" edc:desc="Input Sampling Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0WRCONFIG" edc:nzwidth="0x20" edc:access="ww-wwwww-w---wwwwwwwwwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xDF47FFFF" edc:_addr="0x41000028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PINMASK" edc:nzwidth="0x10" edc:desc="Pin Mask for Multiple Pin Configuration"/>
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PMUX" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing"/>
            <edc:SFRFieldDef edc:cname="WRPMUX" edc:nzwidth="0x1" edc:desc="Write PMUX"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WRPINCFG" edc:nzwidth="0x1" edc:desc="Write PINCFG"/>
            <edc:SFRFieldDef edc:cname="HWSEL" edc:nzwidth="0x1" edc:desc="Half-Word Select"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0EVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PID0" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 0"/>
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x2" edc:desc="PORT Event Action 0">
              <edc:SFRFieldSemantic edc:cname="OUT" edc:desc="Event output to pin" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set output register of pin on event" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLR" edc:desc="Clear output register of pin on event" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TGL" edc:desc="Toggle output register of pin on event" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PORTEI0" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 0"/>
            <edc:SFRFieldDef edc:cname="PID1" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 1"/>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x2" edc:desc="PORT Event Action 1"/>
            <edc:SFRFieldDef edc:cname="PORTEI1" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 1"/>
            <edc:SFRFieldDef edc:cname="PID2" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 2"/>
            <edc:SFRFieldDef edc:cname="EVACT2" edc:nzwidth="0x2" edc:desc="PORT Event Action 2"/>
            <edc:SFRFieldDef edc:cname="PORTEI2" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 2"/>
            <edc:SFRFieldDef edc:cname="PID3" edc:nzwidth="0x5" edc:desc="PORT Event Pin Identifier 3"/>
            <edc:SFRFieldDef edc:cname="EVACT3" edc:nzwidth="0x2" edc:desc="PORT Event Action 3"/>
            <edc:SFRFieldDef edc:cname="PORTEI3" edc:nzwidth="0x1" edc:desc="PORT Event Input Enable 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000031">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX2" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000032">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX3" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000033">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX4" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX5" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000035">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX6" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000036">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX7" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000037">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX8" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX9" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x41000039">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX10" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4100003A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX11" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4100003B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX12" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4100003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX13" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4100003D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX14" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4100003E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PMUX15" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x4100003F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXE" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Even-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PMUXO" edc:nzwidth="0x4" edc:desc="Peripheral Multiplexing for Odd-Numbered Pin">
              <edc:SFRFieldSemantic edc:cname="A" edc:desc="Peripheral function A selected" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="B" edc:desc="Peripheral function B selected" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="C" edc:desc="Peripheral function C selected" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="D" edc:desc="Peripheral function D selected" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="E" edc:desc="Peripheral function E selected" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="F" edc:desc="Peripheral function F selected" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="G" edc:desc="Peripheral function G selected" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="H" edc:desc="Peripheral function H selected" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="I" edc:desc="Peripheral function I selected" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="J" edc:desc="Peripheral function J selected" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG0" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG1" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000041">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG2" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000042">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG3" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000043">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG4" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG5" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000045">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG6" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000046">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG7" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000047">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG8" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG9" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000049">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG10" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100004A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG11" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100004B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG12" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG13" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100004D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG14" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100004E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG15" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100004F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG16" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG17" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000051">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG18" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000052">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG19" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000053">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG20" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG21" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000055">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG22" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000056">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG23" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000057">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG24" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG25" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x41000059">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG26" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100005A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG27" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100005B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG28" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100005C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG29" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100005D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG30" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100005E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PORT" edc:cname="GROUP0PINCFG31" edc:nzwidth="0x8" edc:access="-n---nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x47" edc:_addr="0x4100005F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PORT">
            <edc:SFRFieldDef edc:cname="PMUXEN" edc:nzwidth="0x1" edc:desc="Peripheral Multiplexer Enable"/>
            <edc:SFRFieldDef edc:cname="INEN" edc:nzwidth="0x1" edc:desc="Input Enable"/>
            <edc:SFRFieldDef edc:cname="PULLEN" edc:nzwidth="0x1" edc:desc="Pull Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="DRVSTR" edc:nzwidth="0x1" edc:desc="Output Driver Strength Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1FA0" edc:_addr="0x41000060"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CTRL" edc:nzwidth="0x8" edc:access="ww-www-w" edc:por="00000000" edc:mclr="00000000" edc:impl="0xDD" edc:_addr="0x41002000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CRC" edc:nzwidth="0x1" edc:desc="32-bit Cyclic Redundancy Code"/>
            <edc:SFRFieldDef edc:cname="MBIST" edc:nzwidth="0x1" edc:desc="Memory built-in self-test"/>
            <edc:SFRFieldDef edc:cname="CE" edc:nzwidth="0x1" edc:desc="Chip-Erase"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ARR" edc:nzwidth="0x1" edc:desc="Auxiliary Row Read"/>
            <edc:SFRFieldDef edc:cname="SMSA" edc:nzwidth="0x1" edc:desc="Start Memory Stream Access"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSA" edc:nzwidth="0x8" edc:access="---nnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1F" edc:_addr="0x41002001">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DONE" edc:nzwidth="0x1" edc:desc="Done"/>
            <edc:SFRFieldDef edc:cname="CRSTEXT" edc:nzwidth="0x1" edc:desc="CPU Reset Phase Extension"/>
            <edc:SFRFieldDef edc:cname="BERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="FAIL" edc:nzwidth="0x1" edc:desc="Failure"/>
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Protection Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSB" edc:nzwidth="0x8" edc:access="--rrrrrr" edc:por="00010000" edc:mclr="00010000" edc:impl="0x3F" edc:_addr="0x41002002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PROT" edc:nzwidth="0x1" edc:desc="Protected"/>
            <edc:SFRFieldDef edc:cname="DBGPRES" edc:nzwidth="0x1" edc:desc="Debugger Present"/>
            <edc:SFRFieldDef edc:cname="DCCD0" edc:nzwidth="0x1" edc:desc="Debug Communication Channel 0 Dirty"/>
            <edc:SFRFieldDef edc:cname="DCCD1" edc:nzwidth="0x1" edc:desc="Debug Communication Channel 1 Dirty"/>
            <edc:SFRFieldDef edc:cname="HPE" edc:nzwidth="0x1" edc:desc="Hot-Plugging Enable"/>
            <edc:SFRFieldDef edc:cname="CEHL" edc:nzwidth="0x1" edc:desc="Chip Erase Hard Lock"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="STATUSC" edc:nzwidth="0x8" edc:access="-----rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x41002003">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="STATE" edc:nzwidth="0x3" edc:desc="State"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="AMOD" edc:nzwidth="0x2" edc:desc="Access Mode"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x1E" edc:desc="Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="LENGTH" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn--" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFFC" edc:_addr="0x41002008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENGTH" edc:nzwidth="0x1E" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DATA" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100200C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41002014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x20" edc:desc="Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DID" edc:nzwidth="0x20" edc:access="rrrrrrrrr-rrrrrrrrrrrrrrrrrrrrrr" edc:impl="0xFFBFFFFF" edc:_addr="0x41002018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DEVSEL" edc:nzwidth="0x8" edc:desc="Device Select">
              <edc:SFRFieldSemantic edc:cname="128KB_16KB_32PIN" edc:desc="128 KB Flash / 16 KB SRAM / 32-pin" edc:when="(field &amp; 0xFF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="64KB_8KB_32PIN" edc:desc="64 KB Flash / 8 KB SRAM / 32-pin" edc:when="(field &amp; 0xFF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="128KB_16KB_48PIN_CAN" edc:desc="128 KB Flash / 16 KB SRAM / 48-pin" edc:when="(field &amp; 0xFF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="64KB_8KB_48PIN_CAN" edc:desc="64 KB Flash / 8 KB SRAM / 48-pin" edc:when="(field &amp; 0xFF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision Number"/>
            <edc:SFRFieldDef edc:cname="DIE" edc:nzwidth="0x4" edc:desc="Die Number"/>
            <edc:SFRFieldDef edc:cname="SERIES" edc:nzwidth="0x6" edc:desc="Series">
              <edc:SFRFieldSemantic edc:cname="MC00" edc:desc="PIC32CM MC00" edc:when="(field &amp; 0x3F) == 6"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FAMILY" edc:nzwidth="0x5" edc:desc="Family">
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="5V Industrial" edc:when="(field &amp; 0x1F) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PROCESSOR" edc:nzwidth="0x4" edc:desc="Processor">
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="Cortex-M0+" edc:when="(field &amp; 0xF) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xD4" edc:_addr="0x4100201C"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCFG0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x410020F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DCFG" edc:nzwidth="0x20" edc:desc="Device Configuration"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="DCFG1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x410020F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="DCFG" edc:nzwidth="0x20" edc:desc="Device Configuration"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xF08" edc:_addr="0x410020F8"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ENTRY0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrr----------rr" edc:por="10011111000011111100000000000010" edc:mclr="10011111000011111100000000000010" edc:impl="0xFFFFF003" edc:_addr="0x41003000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="EPRES" edc:nzwidth="0x1" edc:desc="Entry Present"/>
            <edc:SFRFieldDef edc:cname="FMT" edc:nzwidth="0x1" edc:desc="Format"/>
            <edc:AdjustPoint edc:offset="0xA"/>
            <edc:SFRFieldDef edc:cname="ADDOFF" edc:nzwidth="0x14" edc:desc="Address Offset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="ENTRY1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000101000000000010" edc:mclr="00000000000000000101000000000010" edc:_addr="0x41003004"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="END" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="END" edc:nzwidth="0x20" edc:desc="End Marker"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xFC0" edc:_addr="0x4100300C"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="MEMTYPE" edc:nzwidth="0x20" edc:access="-------------------------------r" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1" edc:_addr="0x41003FCC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="SMEMP" edc:nzwidth="0x1" edc:desc="System Memory Present"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID4" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41003FD0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="JEPCC" edc:nzwidth="0x4" edc:desc="JEP-106 Continuation Code"/>
            <edc:SFRFieldDef edc:cname="FKBC" edc:nzwidth="0x4" edc:desc="4KB count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003FD4"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003FD8"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41003FDC"/>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000011010000" edc:mclr="00000000000000000000000011010000" edc:impl="0xFF" edc:_addr="0x41003FE0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PARTNBL" edc:nzwidth="0x8" edc:desc="Part Number Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000011111100" edc:mclr="00000000000000000000000011111100" edc:impl="0xFF" edc:_addr="0x41003FE4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PARTNBH" edc:nzwidth="0x4" edc:desc="Part Number High"/>
            <edc:SFRFieldDef edc:cname="JEPIDCL" edc:nzwidth="0x4" edc:desc="Low part of the JEP-106 Identity Code"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001001" edc:mclr="00000000000000000000000000001001" edc:impl="0xFF" edc:_addr="0x41003FE8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="JEPIDCH" edc:nzwidth="0x3" edc:desc="JEP-106 Identity Code High"/>
            <edc:SFRFieldDef edc:cname="JEPU" edc:nzwidth="0x1" edc:desc="JEP-106 Identity Code is used"/>
            <edc:SFRFieldDef edc:cname="REVISION" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="PID3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x41003FEC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="CUSMOD" edc:nzwidth="0x4" edc:desc="ARM CUSMOD"/>
            <edc:SFRFieldDef edc:cname="REVAND" edc:nzwidth="0x4" edc:desc="Revision Number"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID0" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000001101" edc:mclr="00000000000000000000000000001101" edc:impl="0xFF" edc:_addr="0x41003FF0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB0" edc:nzwidth="0x8" edc:desc="Preamble Byte 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID1" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0xFF" edc:_addr="0x41003FF4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLE" edc:nzwidth="0x4" edc:desc="Preamble"/>
            <edc:SFRFieldDef edc:cname="CCLASS" edc:nzwidth="0x4" edc:desc="Component Class"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID2" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000101" edc:mclr="00000000000000000000000000000101" edc:impl="0xFF" edc:_addr="0x41003FF8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB2" edc:nzwidth="0x8" edc:desc="Preamble Byte 2"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DSU" edc:cname="CID3" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000010110001" edc:mclr="00000000000000000000000010110001" edc:impl="0xFF" edc:_addr="0x41003FFC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DSU">
            <edc:SFRFieldDef edc:cname="PREAMBLEB3" edc:nzwidth="0x8" edc:desc="Preamble Byte 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="nnnnnnnn-nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFF7F" edc:_addr="0x41004000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x7" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="ER" edc:desc="Erase Row - Erases the row addressed by the ADDR register." edc:when="(field &amp; 0x7F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="WP" edc:desc="Write Page - Writes the contents of the page buffer to the page addressed by the ADDR register." edc:when="(field &amp; 0x7F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="EAR" edc:desc="Erase Auxiliary Row - Erases the auxiliary row addressed by the ADDR register. This command can be given only when the security bit is not set and only to the user configuration row." edc:when="(field &amp; 0x7F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="WAP" edc:desc="Write Auxiliary Page - Writes the contents of the page buffer to the page addressed by the ADDR register. This command can be given only when the security bit is not set and only to the user configuration row." edc:when="(field &amp; 0x7F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="DFER" edc:desc="Data Flash Erase Row - Erases the row addressed by the ADDR register." edc:when="(field &amp; 0x7F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="DFWP" edc:desc="Data Flash Write Page - Writes the contents of the page buffer to the page addressed by the ADDR register." edc:when="(field &amp; 0x7F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="LR" edc:desc="Lock Region - Locks the region containing the address location in the ADDR register." edc:when="(field &amp; 0x7F) == 0x40"/>
              <edc:SFRFieldSemantic edc:cname="UR" edc:desc="Unlock Region - Unlocks the region containing the address location in the ADDR register." edc:when="(field &amp; 0x7F) == 0x41"/>
              <edc:SFRFieldSemantic edc:cname="SPRM" edc:desc="Sets the power reduction mode." edc:when="(field &amp; 0x7F) == 0x42"/>
              <edc:SFRFieldSemantic edc:cname="CPRM" edc:desc="Clears the power reduction mode." edc:when="(field &amp; 0x7F) == 0x43"/>
              <edc:SFRFieldSemantic edc:cname="PBC" edc:desc="Page Buffer Clear - Clears the page buffer." edc:when="(field &amp; 0x7F) == 0x44"/>
              <edc:SFRFieldSemantic edc:cname="SSB" edc:desc="Set Security Bit - Sets the security bit by writing 0x00 to the first byte in the lockbit row." edc:when="(field &amp; 0x7F) == 0x45"/>
              <edc:SFRFieldSemantic edc:cname="INVALL" edc:desc="Invalidate all cache lines." edc:when="(field &amp; 0x7F) == 0x46"/>
              <edc:SFRFieldSemantic edc:cname="SCEHL" edc:desc="Set Chip Erase Hard Lock (SCEHL) flash controller command" edc:when="(field &amp; 0x7F) == 0x7f"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CMDEX" edc:nzwidth="0x8" edc:desc="Command Execution">
              <edc:SFRFieldSemantic edc:cname="KEY" edc:desc="Execution Key" edc:when="(field &amp; 0xFF) == 0xA5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x41004002"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------------nnnn------nnn--nnnn-" edc:por="00000000000000000000000010000000" edc:mclr="00000000000000000000000010000000" edc:impl="0xF039E" edc:_addr="0x41004004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RWS" edc:nzwidth="0x4" edc:desc="NVM Read Wait States">
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Auto Wait State" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HALF" edc:desc="Half Auto Wait State" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DUAL" edc:desc="Dual Auto Wait State" edc:when="(field &amp; 0xF) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MANW" edc:nzwidth="0x1" edc:desc="Manual Write"/>
            <edc:SFRFieldDef edc:cname="SLEEPPRM" edc:nzwidth="0x2" edc:desc="Power Reduction Mode during Sleep">
              <edc:SFRFieldSemantic edc:cname="WAKEONACCESS" edc:desc="NVM block enters low-power mode when entering sleep.NVM block exits low-power mode upon first access." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="WAKEUPINSTANT" edc:desc="NVM block enters low-power mode when entering sleep.NVM block exits low-power mode when exiting sleep." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DISABLED" edc:desc="Auto power reduction disabled." edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="READMODE" edc:nzwidth="0x2" edc:desc="NVM Read Mode">
              <edc:SFRFieldSemantic edc:cname="NO_MISS_PENALTY" edc:desc="The NVM Controller (cache system) does not insert wait states on a cache miss. Gives the best system performance." edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOW_POWER" edc:desc="Reduces power consumption of the cache system, but inserts a wait state each time there is a cache miss. This mode may not be relevant if CPU performance is required, as the application will be stalled and may lead to increase run time." edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DETERMINISTIC" edc:desc="The cache system ensures that a cache hit or miss takes the same amount of time, determined by the number of programmed flash wait states. This mode can be used for real-time applications that require deterministic execution timings." edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CACHEDIS" edc:nzwidth="0x2" edc:desc="Cache Disable">
              <edc:SFRFieldSemantic edc:cname="CACHE_DF_DIS_MAIN_EN" edc:desc="The Data Flash cache is disabled, the main array cache is enabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CACHE_DF_DIS_MAIN_DIS" edc:desc="The Data Flash cache is disabled, the main array cache is disabled" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CACHE_DF_EN_MAIN_EN" edc:desc="The Data Flash cache is enabled, the main array cache is enabled" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CACHE_DF_EN_MAIN_DIS" edc:desc="The Data Flash cache is enabled, the main array cache is disabled" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="PARAM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnn-nnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF7FFFF" edc:_addr="0x41004008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="NVMP" edc:nzwidth="0x10" edc:desc="NVM Pages"/>
            <edc:SFRFieldDef edc:cname="PSZ" edc:nzwidth="0x3" edc:desc="Page Size">
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8 bytes" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16 bytes" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32 bytes" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="64" edc:desc="64 bytes" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="128" edc:desc="128 bytes" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256 bytes" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="512" edc:desc="512 bytes" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="1024" edc:desc="1024 bytes" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DFP" edc:nzwidth="0xC" edc:desc="Data Flash Pages"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x4100400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="READY" edc:nzwidth="0x1" edc:desc="NVM Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x41004010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="READY" edc:nzwidth="0x1" edc:desc="NVM Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="------------------------------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:_addr="0x41004014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="READY" edc:nzwidth="0x1" edc:desc="NVM Ready">
              <edc:SFRFieldSemantic edc:cname="Val_0" edc:desc="The NVM controller is busy programming or erasing." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="Val_1" edc:desc="The NVM controller is ready to accept a new command" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Error">
              <edc:SFRFieldSemantic edc:cname="Val_0" edc:desc="No errors have been received since the last clear" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="Val_1" edc:desc="At least one error has occurred since the last clear" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------n---nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x11F" edc:_addr="0x41004018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="PRM" edc:nzwidth="0x1" edc:desc="Power Reduction Mode"/>
            <edc:SFRFieldDef edc:cname="LOAD" edc:nzwidth="0x1" edc:desc="NVM Page Buffer Active Loading"/>
            <edc:SFRFieldDef edc:cname="PROGE" edc:nzwidth="0x1" edc:desc="Programming Error Status"/>
            <edc:SFRFieldDef edc:cname="LOCKE" edc:nzwidth="0x1" edc:desc="Lock Error Status"/>
            <edc:SFRFieldDef edc:cname="NVME" edc:nzwidth="0x1" edc:desc="NVM Error"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Security Bit Status"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4100401A"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="----------nnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3FFFFF" edc:_addr="0x4100401C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x16" edc:desc="NVM Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="LOCK" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x41004020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="LOCK" edc:nzwidth="0x10" edc:desc="Region Lock Bits"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x41004022"/>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="PBLDATA0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:_addr="0x41004028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="PBLDATA" edc:nzwidth="0x20" edc:desc="Page Buffer Load Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="NVMCTRL" edc:cname="PBLDATA1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:_addr="0x4100402C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="NVMCTRL">
            <edc:SFRFieldDef edc:cname="PBLDATA" edc:nzwidth="0x20" edc:desc="Page Buffer Load Data"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1FD0" edc:_addr="0x41004030"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CTRL" edc:nzwidth="0x10" edc:access="----nnnn-----nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xF07" edc:_addr="0x41006000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="DMAENABLE" edc:nzwidth="0x1" edc:desc="DMA Enable"/>
            <edc:SFRFieldDef edc:cname="CRCENABLE" edc:nzwidth="0x1" edc:desc="CRC Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="LVLEN0" edc:nzwidth="0x1" edc:desc="Priority Level 0 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN1" edc:nzwidth="0x1" edc:desc="Priority Level 1 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN2" edc:nzwidth="0x1" edc:desc="Priority Level 2 Enable"/>
            <edc:SFRFieldDef edc:cname="LVLEN3" edc:nzwidth="0x1" edc:desc="Priority Level 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCCTRL" edc:nzwidth="0x10" edc:access="--nnnnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3F0F" edc:_addr="0x41006002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCBEATSIZE" edc:nzwidth="0x2" edc:desc="CRC Beat Size">
              <edc:SFRFieldSemantic edc:cname="BYTE" edc:desc="8-bit bus transfer" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="HWORD" edc:desc="16-bit bus transfer" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="WORD" edc:desc="32-bit bus transfer" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CRCPOLY" edc:nzwidth="0x2" edc:desc="CRC Polynomial Type">
              <edc:SFRFieldSemantic edc:cname="CRC16" edc:desc="CRC-16 (CRC-CCITT)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="CRC32" edc:desc="CRC32 (IEEE 802.3)" edc:when="(field &amp; 0x3) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CRCSRC" edc:nzwidth="0x6" edc:desc="CRC Input Source">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O interface" edc:when="(field &amp; 0x3F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="CHN0" edc:desc="DMA Channel 0" edc:when="(field &amp; 0x3F) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="CHN1" edc:desc="DMA Channel 1" edc:when="(field &amp; 0x3F) == 0x21"/>
              <edc:SFRFieldSemantic edc:cname="CHN2" edc:desc="DMA Channel 2" edc:when="(field &amp; 0x3F) == 0x22"/>
              <edc:SFRFieldSemantic edc:cname="CHN3" edc:desc="DMA Channel 3" edc:when="(field &amp; 0x3F) == 0x23"/>
              <edc:SFRFieldSemantic edc:cname="CHN4" edc:desc="DMA Channel 4" edc:when="(field &amp; 0x3F) == 0x24"/>
              <edc:SFRFieldSemantic edc:cname="CHN5" edc:desc="DMA Channel 5" edc:when="(field &amp; 0x3F) == 0x25"/>
              <edc:SFRFieldSemantic edc:cname="CHN6" edc:desc="DMA Channel 6" edc:when="(field &amp; 0x3F) == 0x26"/>
              <edc:SFRFieldSemantic edc:cname="CHN7" edc:desc="DMA Channel 7" edc:when="(field &amp; 0x3F) == 0x27"/>
              <edc:SFRFieldSemantic edc:cname="CHN8" edc:desc="DMA Channel 8" edc:when="(field &amp; 0x3F) == 0x28"/>
              <edc:SFRFieldSemantic edc:cname="CHN9" edc:desc="DMA Channel 9" edc:when="(field &amp; 0x3F) == 0x29"/>
              <edc:SFRFieldSemantic edc:cname="CHN10" edc:desc="DMA Channel 10" edc:when="(field &amp; 0x3F) == 0x2A"/>
              <edc:SFRFieldSemantic edc:cname="CHN11" edc:desc="DMA Channel 11" edc:when="(field &amp; 0x3F) == 0x2B"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCDATAIN" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCDATAIN" edc:nzwidth="0x20" edc:desc="CRC Data Input"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCCHKSUM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCCHKSUM" edc:nzwidth="0x20" edc:desc="CRC Checksum"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CRCSTATUS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4100600C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CRCBUSY" edc:nzwidth="0x1" edc:desc="CRC Module Busy"/>
            <edc:SFRFieldDef edc:cname="CRCZERO" edc:nzwidth="0x1" edc:desc="CRC Zero"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4100600D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="QOSCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00101010" edc:mclr="00101010" edc:impl="0x3F" edc:_addr="0x4100600E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="WRBQOS" edc:nzwidth="0x2" edc:desc="Write-Back Quality of Service">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Background (no sensitive operation)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Sensitive Bandwidth" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Sensitive Latency" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Critical Latency" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FQOS" edc:nzwidth="0x2" edc:desc="Fetch Quality of Service">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Background (no sensitive operation)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Sensitive Bandwidth" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Sensitive Latency" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Critical Latency" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DQOS" edc:nzwidth="0x2" edc:desc="Data Transfer Quality of Service">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Background (no sensitive operation)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Sensitive Bandwidth" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MEDIUM" edc:desc="Sensitive Latency" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="Critical Latency" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4100600F"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="SWTRIGCTRL" edc:nzwidth="0x20" edc:access="--------------------nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x41006010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWTRIG0" edc:nzwidth="0x1" edc:desc="Channel 0 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG1" edc:nzwidth="0x1" edc:desc="Channel 1 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG2" edc:nzwidth="0x1" edc:desc="Channel 2 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG3" edc:nzwidth="0x1" edc:desc="Channel 3 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG4" edc:nzwidth="0x1" edc:desc="Channel 4 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG5" edc:nzwidth="0x1" edc:desc="Channel 5 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG6" edc:nzwidth="0x1" edc:desc="Channel 6 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG7" edc:nzwidth="0x1" edc:desc="Channel 7 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG8" edc:nzwidth="0x1" edc:desc="Channel 8 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG9" edc:nzwidth="0x1" edc:desc="Channel 9 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG10" edc:nzwidth="0x1" edc:desc="Channel 10 Software Trigger"/>
            <edc:SFRFieldDef edc:cname="SWTRIG11" edc:nzwidth="0x1" edc:desc="Channel 11 Software Trigger"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="PRICTRL" edc:nzwidth="0x20" edc:access="n---nnnnn---nnnnn---nnnnn---nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x8F8F8F8F" edc:_addr="0x41006014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="LVLPRI0" edc:nzwidth="0x4" edc:desc="Level 0 Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RRLVLEN0" edc:nzwidth="0x1" edc:desc="Level 0 Round-Robin Scheduling Enable">
              <edc:SFRFieldSemantic edc:cname="STATIC_LVL" edc:desc="Static arbitration scheme for channels with level 0 priority" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN_LVL" edc:desc="Round-robin arbitration scheme for channels with level 0 priority" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LVLPRI1" edc:nzwidth="0x4" edc:desc="Level 1 Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RRLVLEN1" edc:nzwidth="0x1" edc:desc="Level 1 Round-Robin Scheduling Enable">
              <edc:SFRFieldSemantic edc:cname="STATIC_LVL" edc:desc="Static arbitration scheme for channels with level 1 priority" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN_LVL" edc:desc="Round-robin arbitration scheme for channels with level 1 priority" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LVLPRI2" edc:nzwidth="0x4" edc:desc="Level 2 Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RRLVLEN2" edc:nzwidth="0x1" edc:desc="Level 2 Round-Robin Scheduling Enable">
              <edc:SFRFieldSemantic edc:cname="STATIC_LVL" edc:desc="Static arbitration scheme for channels with level 2 priority" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN_LVL" edc:desc="Round-robin arbitration scheme for channels with level 2 priority" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LVLPRI3" edc:nzwidth="0x4" edc:desc="Level 3 Channel Priority Number"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RRLVLEN3" edc:nzwidth="0x1" edc:desc="Level 3 Round-Robin Scheduling Enable">
              <edc:SFRFieldSemantic edc:cname="STATIC_LVL" edc:desc="Static arbitration scheme for channels with level 3 priority" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN_LVL" edc:desc="Round-robin arbitration scheme for channels with level 3 priority" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x41006018"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="INTPEND" edc:nzwidth="0x10" edc:access="nnn--nnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xE70F" edc:_addr="0x41006020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x4" edc:desc="Channel ID"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Fetch Error"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Busy"/>
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Pending"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x41006022"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="INTSTATUS" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x41006024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="CHINT0" edc:nzwidth="0x1" edc:desc="Channel 0 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT1" edc:nzwidth="0x1" edc:desc="Channel 1 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT2" edc:nzwidth="0x1" edc:desc="Channel 2 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT3" edc:nzwidth="0x1" edc:desc="Channel 3 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT4" edc:nzwidth="0x1" edc:desc="Channel 4 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT5" edc:nzwidth="0x1" edc:desc="Channel 5 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT6" edc:nzwidth="0x1" edc:desc="Channel 6 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT7" edc:nzwidth="0x1" edc:desc="Channel 7 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT8" edc:nzwidth="0x1" edc:desc="Channel 8 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT9" edc:nzwidth="0x1" edc:desc="Channel 9 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT10" edc:nzwidth="0x1" edc:desc="Channel 10 Pending Interrupt"/>
            <edc:SFRFieldDef edc:cname="CHINT11" edc:nzwidth="0x1" edc:desc="Channel 11 Pending Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="BUSYCH" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x41006028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="BUSYCH0" edc:nzwidth="0x1" edc:desc="Busy Channel 0"/>
            <edc:SFRFieldDef edc:cname="BUSYCH1" edc:nzwidth="0x1" edc:desc="Busy Channel 1"/>
            <edc:SFRFieldDef edc:cname="BUSYCH2" edc:nzwidth="0x1" edc:desc="Busy Channel 2"/>
            <edc:SFRFieldDef edc:cname="BUSYCH3" edc:nzwidth="0x1" edc:desc="Busy Channel 3"/>
            <edc:SFRFieldDef edc:cname="BUSYCH4" edc:nzwidth="0x1" edc:desc="Busy Channel 4"/>
            <edc:SFRFieldDef edc:cname="BUSYCH5" edc:nzwidth="0x1" edc:desc="Busy Channel 5"/>
            <edc:SFRFieldDef edc:cname="BUSYCH6" edc:nzwidth="0x1" edc:desc="Busy Channel 6"/>
            <edc:SFRFieldDef edc:cname="BUSYCH7" edc:nzwidth="0x1" edc:desc="Busy Channel 7"/>
            <edc:SFRFieldDef edc:cname="BUSYCH8" edc:nzwidth="0x1" edc:desc="Busy Channel 8"/>
            <edc:SFRFieldDef edc:cname="BUSYCH9" edc:nzwidth="0x1" edc:desc="Busy Channel 9"/>
            <edc:SFRFieldDef edc:cname="BUSYCH10" edc:nzwidth="0x1" edc:desc="Busy Channel 10"/>
            <edc:SFRFieldDef edc:cname="BUSYCH11" edc:nzwidth="0x1" edc:desc="Busy Channel 11"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="PENDCH" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x4100602C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PENDCH0" edc:nzwidth="0x1" edc:desc="Pending Channel 0"/>
            <edc:SFRFieldDef edc:cname="PENDCH1" edc:nzwidth="0x1" edc:desc="Pending Channel 1"/>
            <edc:SFRFieldDef edc:cname="PENDCH2" edc:nzwidth="0x1" edc:desc="Pending Channel 2"/>
            <edc:SFRFieldDef edc:cname="PENDCH3" edc:nzwidth="0x1" edc:desc="Pending Channel 3"/>
            <edc:SFRFieldDef edc:cname="PENDCH4" edc:nzwidth="0x1" edc:desc="Pending Channel 4"/>
            <edc:SFRFieldDef edc:cname="PENDCH5" edc:nzwidth="0x1" edc:desc="Pending Channel 5"/>
            <edc:SFRFieldDef edc:cname="PENDCH6" edc:nzwidth="0x1" edc:desc="Pending Channel 6"/>
            <edc:SFRFieldDef edc:cname="PENDCH7" edc:nzwidth="0x1" edc:desc="Pending Channel 7"/>
            <edc:SFRFieldDef edc:cname="PENDCH8" edc:nzwidth="0x1" edc:desc="Pending Channel 8"/>
            <edc:SFRFieldDef edc:cname="PENDCH9" edc:nzwidth="0x1" edc:desc="Pending Channel 9"/>
            <edc:SFRFieldDef edc:cname="PENDCH10" edc:nzwidth="0x1" edc:desc="Pending Channel 10"/>
            <edc:SFRFieldDef edc:cname="PENDCH11" edc:nzwidth="0x1" edc:desc="Pending Channel 11"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="ACTIVE" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrr--rrrrr----rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF9F0F" edc:_addr="0x41006030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="LVLEX0" edc:nzwidth="0x1" edc:desc="Level 0 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX1" edc:nzwidth="0x1" edc:desc="Level 1 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX2" edc:nzwidth="0x1" edc:desc="Level 2 Channel Trigger Request Executing"/>
            <edc:SFRFieldDef edc:cname="LVLEX3" edc:nzwidth="0x1" edc:desc="Level 3 Channel Trigger Request Executing"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x5" edc:desc="Active Channel ID"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ABUSY" edc:nzwidth="0x1" edc:desc="Active Channel Busy"/>
            <edc:SFRFieldDef edc:cname="BTCNT" edc:nzwidth="0x10" edc:desc="Active Channel Block Transfer Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="BASEADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="BASEADDR" edc:nzwidth="0x20" edc:desc="Descriptor Memory Base Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="WRBADDR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x41006038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="WRBADDR" edc:nzwidth="0x20" edc:desc="Write-Back Memory Base Address"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4100603C"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHID" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x4100603F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="ID" edc:nzwidth="0x4" edc:desc="Channel ID"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHCTRLA" edc:nzwidth="0x8" edc:access="-n----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x43" edc:_addr="0x41006040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Channel Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Channel Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Channel run in standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x41006041"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHCTRLB" edc:nzwidth="0x20" edc:access="------nnnn--------nnnnnn-nnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3C03F7F" edc:_addr="0x41006044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Input Action">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRIG" edc:desc="Transfer and periodic transfer trigger" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CTRIG" edc:desc="Conditional transfer trigger" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="CBLOCK" edc:desc="Conditional block transfer" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="SSKIP" edc:desc="Skip next block suspend action" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVIE" edc:nzwidth="0x1" edc:desc="Channel Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVOE" edc:nzwidth="0x1" edc:desc="Channel Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="LVL" edc:nzwidth="0x2" edc:desc="Channel Arbitration Level">
              <edc:SFRFieldSemantic edc:cname="LVL0" edc:desc="Channel Priority Level 0" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LVL1" edc:desc="Channel Priority Level 1" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LVL2" edc:desc="Channel Priority Level 2" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="LVL3" edc:desc="Channel Priority Level 3" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRIGSRC" edc:nzwidth="0x6" edc:desc="Trigger Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Only software/event triggers" edc:when="(field &amp; 0x3F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="TSENS" edc:desc="TSENS Result Ready Trigger" edc:when="(field &amp; 0x3F) == 0x01"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM0_RX" edc:desc="SERCOM0 RX Trigger" edc:when="(field &amp; 0x3F) == 0x02"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM0_TX" edc:desc="SERCOM0 TX Trigger" edc:when="(field &amp; 0x3F) == 0x03"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM1_RX" edc:desc="SERCOM1 RX Trigger" edc:when="(field &amp; 0x3F) == 0x04"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM1_TX" edc:desc="SERCOM1 TX Trigger" edc:when="(field &amp; 0x3F) == 0x05"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM2_RX" edc:desc="SERCOM2 RX Trigger" edc:when="(field &amp; 0x3F) == 0x06"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM2_TX" edc:desc="SERCOM2 TX Trigger" edc:when="(field &amp; 0x3F) == 0x07"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM3_RX" edc:desc="SERCOM3 RX Trigger" edc:when="(field &amp; 0x3F) == 0x08"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM3_TX" edc:desc="SERCOM3 TX Trigger" edc:when="(field &amp; 0x3F) == 0x09"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM4_RX" edc:desc="SERCOM4 RX Trigger" edc:when="(field &amp; 0x3F) == 0x0A"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM4_TX" edc:desc="SERCOM4 TX Trigger" edc:when="(field &amp; 0x3F) == 0x0B"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM5_RX" edc:desc="SERCOM5 RX Trigger" edc:when="(field &amp; 0x3F) == 0x0C"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM5_TX" edc:desc="SERCOM5 TX Trigger" edc:when="(field &amp; 0x3F) == 0x0D"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_OVF" edc:desc="TCC0 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x10"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_MC0" edc:desc="TCC0 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x11"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_MC1" edc:desc="TCC0 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x12"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_MC2" edc:desc="TCC0 Match/Compare 2 Trigger" edc:when="(field &amp; 0x3F) == 0x13"/>
              <edc:SFRFieldSemantic edc:cname="TCC0_MC3" edc:desc="TCC0 Match/Compare 3 Trigger" edc:when="(field &amp; 0x3F) == 0x14"/>
              <edc:SFRFieldSemantic edc:cname="TCC1_OVF" edc:desc="TCC1 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x15"/>
              <edc:SFRFieldSemantic edc:cname="TCC1_MC0" edc:desc="TCC1 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x16"/>
              <edc:SFRFieldSemantic edc:cname="TCC1_MC1" edc:desc="TCC1 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x17"/>
              <edc:SFRFieldSemantic edc:cname="TCC2_OVF" edc:desc="TCC2 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x18"/>
              <edc:SFRFieldSemantic edc:cname="TCC2_MC0" edc:desc="TCC2 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="TCC2_MC1" edc:desc="TCC2 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="TC0_OVF" edc:desc="TC0 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x1B"/>
              <edc:SFRFieldSemantic edc:cname="TC0_MC0" edc:desc="TC0 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x1C"/>
              <edc:SFRFieldSemantic edc:cname="TC0_MC1" edc:desc="TC0 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x1D"/>
              <edc:SFRFieldSemantic edc:cname="TC1_OVF" edc:desc="TC1 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x1E"/>
              <edc:SFRFieldSemantic edc:cname="TC1_MC0" edc:desc="TC1 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x1F"/>
              <edc:SFRFieldSemantic edc:cname="TC1_MC1" edc:desc="TC1 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x20"/>
              <edc:SFRFieldSemantic edc:cname="TC2_OVF" edc:desc="TC2 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x21"/>
              <edc:SFRFieldSemantic edc:cname="TC2_MC0" edc:desc="TC2 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x22"/>
              <edc:SFRFieldSemantic edc:cname="TC2_MC1" edc:desc="TC2 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x23"/>
              <edc:SFRFieldSemantic edc:cname="TC3_OVF" edc:desc="TC3 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x24"/>
              <edc:SFRFieldSemantic edc:cname="TC3_MC0" edc:desc="TC3 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x25"/>
              <edc:SFRFieldSemantic edc:cname="TC3_MC1" edc:desc="TC3 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x26"/>
              <edc:SFRFieldSemantic edc:cname="TC4_OVF" edc:desc="TC4 Overflow Trigger" edc:when="(field &amp; 0x3F) == 0x27"/>
              <edc:SFRFieldSemantic edc:cname="TC4_MC0" edc:desc="TC4 Match/Compare 0 Trigger" edc:when="(field &amp; 0x3F) == 0x28"/>
              <edc:SFRFieldSemantic edc:cname="TC4_MC1" edc:desc="TC4 Match/Compare 1 Trigger" edc:when="(field &amp; 0x3F) == 0x29"/>
              <edc:SFRFieldSemantic edc:cname="ADC0_RESRDY" edc:desc="ADC0 Result Ready Trigger" edc:when="(field &amp; 0x3F) == 0x2A"/>
              <edc:SFRFieldSemantic edc:cname="ADC1_RESRDY" edc:desc="ADC1 Result Ready Trigger" edc:when="(field &amp; 0x3F) == 0x2B"/>
              <edc:SFRFieldSemantic edc:cname="SDADC_RESRDY" edc:desc="SDADC Result Ready Trigger" edc:when="(field &amp; 0x3F) == 0x2C"/>
              <edc:SFRFieldSemantic edc:cname="DAC_EMPTY" edc:desc="DAC Empty Trigger" edc:when="(field &amp; 0x3F) == 0x2D"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="TRIGACT" edc:nzwidth="0x2" edc:desc="Trigger Action">
              <edc:SFRFieldSemantic edc:cname="BLOCK" edc:desc="One trigger required for each block transfer" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="BEAT" edc:desc="One trigger required for each beat transfer" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="TRANSACTION" edc:desc="One trigger required for each transaction" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Software Command">
              <edc:SFRFieldSemantic edc:cname="NOACT" edc:desc="No action" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SUSPEND" edc:desc="Channel suspend operation" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RESUME" edc:desc="Channel resume operation" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x4" edc:_addr="0x41006048"/>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHINTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100604C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHINTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100604D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHINTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100604E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="TERR" edc:nzwidth="0x1" edc:desc="Channel Transfer Error"/>
            <edc:SFRFieldDef edc:cname="TCMPL" edc:nzwidth="0x1" edc:desc="Channel Transfer Complete"/>
            <edc:SFRFieldDef edc:cname="SUSP" edc:nzwidth="0x1" edc:desc="Channel Suspend"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DMAC" edc:cname="CHSTATUS" edc:nzwidth="0x8" edc:access="-----rrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4100604F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DMAC">
            <edc:SFRFieldDef edc:cname="PEND" edc:nzwidth="0x1" edc:desc="Channel Pending"/>
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="Channel Busy"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Channel Fetch Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1FB0" edc:_addr="0x41006050"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="POSITION" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnn--" edc:impl="0xFFFFFFFC" edc:_addr="0x41008000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MTB">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WRAP" edc:nzwidth="0x1" edc:desc="Pointer Value Wraps"/>
            <edc:SFRFieldDef edc:cname="POINTER" edc:nzwidth="0x1D" edc:desc="Trace Packet Location Pointer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="MASTER" edc:nzwidth="0x20" edc:access="n---------------------nnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x800003FF" edc:_addr="0x41008004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MTB">
            <edc:SFRFieldDef edc:cname="MASK" edc:nzwidth="0x5" edc:desc="Maximum Value of the Trace Buffer in SRAM"/>
            <edc:SFRFieldDef edc:cname="TSTARTEN" edc:nzwidth="0x1" edc:desc="Trace Start Input Enable"/>
            <edc:SFRFieldDef edc:cname="TSTOPEN" edc:nzwidth="0x1" edc:desc="Trace Stop Input Enable"/>
            <edc:SFRFieldDef edc:cname="SFRWPRIV" edc:nzwidth="0x1" edc:desc="Special Function Register Write Privilege"/>
            <edc:SFRFieldDef edc:cname="RAMPRIV" edc:nzwidth="0x1" edc:desc="SRAM Privilege"/>
            <edc:SFRFieldDef edc:cname="HALTREQ" edc:nzwidth="0x1" edc:desc="Halt Request"/>
            <edc:AdjustPoint edc:offset="0x15"/>
            <edc:SFRFieldDef edc:cname="EN" edc:nzwidth="0x1" edc:desc="Main Trace Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="FLOW" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFFB" edc:_addr="0x41008008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="MTB">
            <edc:SFRFieldDef edc:cname="AUTOSTOP" edc:nzwidth="0x1" edc:desc="Auto Stop Tracing"/>
            <edc:SFRFieldDef edc:cname="AUTOHALT" edc:nzwidth="0x1" edc:desc="Auto Halt Request"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WATERMARK" edc:nzwidth="0x1D" edc:desc="Watermark value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="BASE" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x4100800C"/>
      <edc:AdjustPoint edc:offset="0xEF0" edc:_addr="0x41008010"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="ITCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x41008F00"/>
      <edc:AdjustPoint edc:offset="0x9C" edc:_addr="0x41008F04"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="CLAIMSET" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x41008FA0"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="CLAIMCLR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x41008FA4"/>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x41008FA8"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="LOCKACCESS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:_addr="0x41008FB0"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="LOCKSTATUS" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FB4"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="AUTHSTATUS" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FB8"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="DEVARCH" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FBC"/>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x41008FC0"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="DEVID" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FC8"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="DEVTYPE" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FCC"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="PID4" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FD0"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="PID5" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FD4"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="PID6" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FD8"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="PID7" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FDC"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="PID0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FE0"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="PID1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FE4"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="PID2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FE8"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="PID3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FEC"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="CID0" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FF0"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="CID1" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FF4"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="CID2" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FF8"/>
      <edc:SFRDef ltx:memberofperipheral="MTB" edc:cname="CID3" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:_addr="0x41008FFC"/>
      <edc:AdjustPoint edc:offset="0x1000" edc:_addr="0x41009000"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG0" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG1" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG2" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG3" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A00C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG4" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG5" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG6" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG7" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A01C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG8" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG9" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG10" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG11" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A02C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG12" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG13" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG14" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MCFG15" edc:nzwidth="0x20" edc:access="-----------------------------nnn" edc:por="00000000000000000000000000000010" edc:mclr="00000000000000000000000000000010" edc:impl="0x7" edc:_addr="0x4100A03C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="ULBT" edc:nzwidth="0x3" edc:desc="Undefined Length Burst Type">
              <edc:SFRFieldSemantic edc:cname="INFINITE" edc:desc="Infinite Length" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SINGLE" edc:desc="Single Access" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FOUR_BEAT" edc:desc="Four Beat Burst" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EIGHT_BEAT" edc:desc="Eight Beat Burst" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="SIXTEEN_BEAT" edc:desc="Sixteen Beat Burst" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG0" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG1" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG2" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG3" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A04C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG4" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A050">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG5" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A054">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG6" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A058">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG7" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A05C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG8" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A060">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG9" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A064">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG10" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A068">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG11" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A06C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG12" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A070">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG13" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A074">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG14" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A078">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SCFG15" edc:nzwidth="0x20" edc:access="-------n--nnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000010000" edc:mclr="00000000000000000000000000010000" edc:impl="0x13F00FF" edc:_addr="0x4100A07C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SLOT_CYCLE" edc:nzwidth="0x8" edc:desc="Maximum Number of Allowed Cycles for a Burst"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="DEFMSTR_TYPE" edc:nzwidth="0x2" edc:desc="Default Master Type">
              <edc:SFRFieldSemantic edc:cname="NO_DEFAULT" edc:desc="No Default Master. At the end of current slave access, if no other master request is pending, the slave is deconnected from all masters. This resusts in having a one cycle latency for the first transfer of a burst." edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="LAST_DEFAULT" edc:desc="Last Default Master At the end of current slave access, if no other master request is pending, the slave stay connected with the last master havingaccessed it.This resusts in not having the one cycle latency when the last master re-trying access on the slave." edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_DEFAULT" edc:desc="Fixed Default Master At the end of current slave access, if no other master request is pending, the slave connects with fixed master which numberis in FIXED_DEFMSTR register.This resusts in not having the one cycle latency when the fixed master re-trying access on the slave." edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FIXED_DEFMSTR" edc:nzwidth="0x4" edc:desc="Fixed Index of Default Master"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="ARBT" edc:nzwidth="0x1" edc:desc="Arbitration Type">
              <edc:SFRFieldSemantic edc:cname="ROUND_ROBIN" edc:desc="Round-Robin Arbitration" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="FIXED_PRIORITY" edc:desc="Fixed Priority Arbitration" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="PRS0PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x4" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x4" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x4" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x4" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x4" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x4" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x4" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x4" edc:desc="Master 7 Priority"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="PRS0PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x4" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x4" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x4" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x4" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x4" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x4" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x4" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x4" edc:desc="Master 15 Priority"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="PRS1PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x4" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x4" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x4" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x4" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x4" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x4" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x4" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x4" edc:desc="Master 7 Priority"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="PRS1PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A08C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x4" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x4" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x4" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x4" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x4" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x4" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x4" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x4" edc:desc="Master 15 Priority"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="PRS2PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x4" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x4" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x4" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x4" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x4" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x4" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x4" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x4" edc:desc="Master 7 Priority"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="PRS2PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x4" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x4" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x4" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x4" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x4" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x4" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x4" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x4" edc:desc="Master 15 Priority"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="PRS3PRAS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="M0PR" edc:nzwidth="0x4" edc:desc="Master 0 Priority"/>
            <edc:SFRFieldDef edc:cname="M1PR" edc:nzwidth="0x4" edc:desc="Master 1 Priority"/>
            <edc:SFRFieldDef edc:cname="M2PR" edc:nzwidth="0x4" edc:desc="Master 2 Priority"/>
            <edc:SFRFieldDef edc:cname="M3PR" edc:nzwidth="0x4" edc:desc="Master 3 Priority"/>
            <edc:SFRFieldDef edc:cname="M4PR" edc:nzwidth="0x4" edc:desc="Master 4 Priority"/>
            <edc:SFRFieldDef edc:cname="M5PR" edc:nzwidth="0x4" edc:desc="Master 5 Priority"/>
            <edc:SFRFieldDef edc:cname="M6PR" edc:nzwidth="0x4" edc:desc="Master 6 Priority"/>
            <edc:SFRFieldDef edc:cname="M7PR" edc:nzwidth="0x4" edc:desc="Master 7 Priority"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="PRS3PRBS" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A09C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="M8PR" edc:nzwidth="0x4" edc:desc="Master 8 Priority"/>
            <edc:SFRFieldDef edc:cname="M9PR" edc:nzwidth="0x4" edc:desc="Master 9 Priority"/>
            <edc:SFRFieldDef edc:cname="M10PR" edc:nzwidth="0x4" edc:desc="Master 10 Priority"/>
            <edc:SFRFieldDef edc:cname="M11PR" edc:nzwidth="0x4" edc:desc="Master 11 Priority"/>
            <edc:SFRFieldDef edc:cname="M12PR" edc:nzwidth="0x4" edc:desc="Master 12 Priority"/>
            <edc:SFRFieldDef edc:cname="M13PR" edc:nzwidth="0x4" edc:desc="Master 13 Priority"/>
            <edc:SFRFieldDef edc:cname="M14PR" edc:nzwidth="0x4" edc:desc="Master 14 Priority"/>
            <edc:SFRFieldDef edc:cname="M15PR" edc:nzwidth="0x4" edc:desc="Master 15 Priority"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x60" edc:_addr="0x4100A0A0"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="MRCR" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x4100A100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="RCB0" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 0">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB1" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 1">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB2" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 2">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB3" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 3">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB4" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 4">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB5" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 5">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB6" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 6">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB7" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 7">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB8" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 8">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB9" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 9">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB10" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 10">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB11" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 11">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB12" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 12">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB13" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 13">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB14" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 14">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RCB15" edc:nzwidth="0x1" edc:desc="Remap Command Bit for Master 15">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable remapped address decoding for master" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENA" edc:desc="Enable remapped address decoding for master" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xC" edc:_addr="0x4100A104"/>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR2" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR3" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A11C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR4" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR5" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR6" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR7" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A12C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR8" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR9" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR10" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR11" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A13C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR12" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A140">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR13" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A144">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR14" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A148">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="HMATRIXHS" edc:cname="SFR15" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4100A14C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="HMATRIXHS">
            <edc:SFRFieldDef edc:cname="SFR" edc:nzwidth="0x20" edc:desc="Special Function Register"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xFF5EB0" edc:_addr="0x4100A150"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xB" edc:_addr="0x42000001"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHSTATUS" edc:nzwidth="0x20" edc:access="----rrrrrrrrrrrr----rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF0FFF" edc:_addr="0x4200000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="USRRDY0" edc:nzwidth="0x1" edc:desc="Channel 0 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY1" edc:nzwidth="0x1" edc:desc="Channel 1 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY2" edc:nzwidth="0x1" edc:desc="Channel 2 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY3" edc:nzwidth="0x1" edc:desc="Channel 3 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY4" edc:nzwidth="0x1" edc:desc="Channel 4 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY5" edc:nzwidth="0x1" edc:desc="Channel 5 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY6" edc:nzwidth="0x1" edc:desc="Channel 6 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY7" edc:nzwidth="0x1" edc:desc="Channel 7 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY8" edc:nzwidth="0x1" edc:desc="Channel 8 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY9" edc:nzwidth="0x1" edc:desc="Channel 9 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY10" edc:nzwidth="0x1" edc:desc="Channel 10 User Ready"/>
            <edc:SFRFieldDef edc:cname="USRRDY11" edc:nzwidth="0x1" edc:desc="Channel 11 User Ready"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CHBUSY0" edc:nzwidth="0x1" edc:desc="Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY1" edc:nzwidth="0x1" edc:desc="Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY2" edc:nzwidth="0x1" edc:desc="Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY3" edc:nzwidth="0x1" edc:desc="Channel 3 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY4" edc:nzwidth="0x1" edc:desc="Channel 4 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY5" edc:nzwidth="0x1" edc:desc="Channel 5 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY6" edc:nzwidth="0x1" edc:desc="Channel 6 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY7" edc:nzwidth="0x1" edc:desc="Channel 7 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY8" edc:nzwidth="0x1" edc:desc="Channel 8 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY9" edc:nzwidth="0x1" edc:desc="Channel 9 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY10" edc:nzwidth="0x1" edc:desc="Channel 10 Busy"/>
            <edc:SFRFieldDef edc:cname="CHBUSY11" edc:nzwidth="0x1" edc:desc="Channel 11 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF0FFF" edc:_addr="0x42000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR0" edc:nzwidth="0x1" edc:desc="Channel 0 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR1" edc:nzwidth="0x1" edc:desc="Channel 1 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR2" edc:nzwidth="0x1" edc:desc="Channel 2 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR3" edc:nzwidth="0x1" edc:desc="Channel 3 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR4" edc:nzwidth="0x1" edc:desc="Channel 4 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR5" edc:nzwidth="0x1" edc:desc="Channel 5 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR6" edc:nzwidth="0x1" edc:desc="Channel 6 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR7" edc:nzwidth="0x1" edc:desc="Channel 7 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR8" edc:nzwidth="0x1" edc:desc="Channel 8 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR9" edc:nzwidth="0x1" edc:desc="Channel 9 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR10" edc:nzwidth="0x1" edc:desc="Channel 10 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR11" edc:nzwidth="0x1" edc:desc="Channel 11 Overrun Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="EVD0" edc:nzwidth="0x1" edc:desc="Channel 0 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD1" edc:nzwidth="0x1" edc:desc="Channel 1 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD2" edc:nzwidth="0x1" edc:desc="Channel 2 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD3" edc:nzwidth="0x1" edc:desc="Channel 3 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD4" edc:nzwidth="0x1" edc:desc="Channel 4 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD5" edc:nzwidth="0x1" edc:desc="Channel 5 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD6" edc:nzwidth="0x1" edc:desc="Channel 6 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD7" edc:nzwidth="0x1" edc:desc="Channel 7 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD8" edc:nzwidth="0x1" edc:desc="Channel 8 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD9" edc:nzwidth="0x1" edc:desc="Channel 9 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD10" edc:nzwidth="0x1" edc:desc="Channel 10 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD11" edc:nzwidth="0x1" edc:desc="Channel 11 Event Detection Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF0FFF" edc:_addr="0x42000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR0" edc:nzwidth="0x1" edc:desc="Channel 0 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR1" edc:nzwidth="0x1" edc:desc="Channel 1 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR2" edc:nzwidth="0x1" edc:desc="Channel 2 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR3" edc:nzwidth="0x1" edc:desc="Channel 3 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR4" edc:nzwidth="0x1" edc:desc="Channel 4 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR5" edc:nzwidth="0x1" edc:desc="Channel 5 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR6" edc:nzwidth="0x1" edc:desc="Channel 6 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR7" edc:nzwidth="0x1" edc:desc="Channel 7 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR8" edc:nzwidth="0x1" edc:desc="Channel 8 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR9" edc:nzwidth="0x1" edc:desc="Channel 9 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR10" edc:nzwidth="0x1" edc:desc="Channel 10 Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVR11" edc:nzwidth="0x1" edc:desc="Channel 11 Overrun Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="EVD0" edc:nzwidth="0x1" edc:desc="Channel 0 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD1" edc:nzwidth="0x1" edc:desc="Channel 1 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD2" edc:nzwidth="0x1" edc:desc="Channel 2 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD3" edc:nzwidth="0x1" edc:desc="Channel 3 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD4" edc:nzwidth="0x1" edc:desc="Channel 4 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD5" edc:nzwidth="0x1" edc:desc="Channel 5 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD6" edc:nzwidth="0x1" edc:desc="Channel 6 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD7" edc:nzwidth="0x1" edc:desc="Channel 7 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD8" edc:nzwidth="0x1" edc:desc="Channel 8 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD9" edc:nzwidth="0x1" edc:desc="Channel 9 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD10" edc:nzwidth="0x1" edc:desc="Channel 10 Event Detection Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EVD11" edc:nzwidth="0x1" edc:desc="Channel 11 Event Detection Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF0FFF" edc:_addr="0x42000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="OVR0" edc:nzwidth="0x1" edc:desc="Channel 0 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR1" edc:nzwidth="0x1" edc:desc="Channel 1 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR2" edc:nzwidth="0x1" edc:desc="Channel 2 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR3" edc:nzwidth="0x1" edc:desc="Channel 3 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR4" edc:nzwidth="0x1" edc:desc="Channel 4 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR5" edc:nzwidth="0x1" edc:desc="Channel 5 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR6" edc:nzwidth="0x1" edc:desc="Channel 6 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR7" edc:nzwidth="0x1" edc:desc="Channel 7 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR8" edc:nzwidth="0x1" edc:desc="Channel 8 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR9" edc:nzwidth="0x1" edc:desc="Channel 9 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR10" edc:nzwidth="0x1" edc:desc="Channel 10 Overrun"/>
            <edc:SFRFieldDef edc:cname="OVR11" edc:nzwidth="0x1" edc:desc="Channel 11 Overrun"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="EVD0" edc:nzwidth="0x1" edc:desc="Channel 0 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD1" edc:nzwidth="0x1" edc:desc="Channel 1 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD2" edc:nzwidth="0x1" edc:desc="Channel 2 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD3" edc:nzwidth="0x1" edc:desc="Channel 3 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD4" edc:nzwidth="0x1" edc:desc="Channel 4 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD5" edc:nzwidth="0x1" edc:desc="Channel 5 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD6" edc:nzwidth="0x1" edc:desc="Channel 6 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD7" edc:nzwidth="0x1" edc:desc="Channel 7 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD8" edc:nzwidth="0x1" edc:desc="Channel 8 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD9" edc:nzwidth="0x1" edc:desc="Channel 9 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD10" edc:nzwidth="0x1" edc:desc="Channel 10 Event Detection"/>
            <edc:SFRFieldDef edc:cname="EVD11" edc:nzwidth="0x1" edc:desc="Channel 11 Event Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="SWEVT" edc:nzwidth="0x20" edc:access="--------------------wwwwwwwwwwww" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x4200001C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL0" edc:nzwidth="0x1" edc:desc="Channel 0 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL1" edc:nzwidth="0x1" edc:desc="Channel 1 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL2" edc:nzwidth="0x1" edc:desc="Channel 2 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL3" edc:nzwidth="0x1" edc:desc="Channel 3 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL4" edc:nzwidth="0x1" edc:desc="Channel 4 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL5" edc:nzwidth="0x1" edc:desc="Channel 5 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL6" edc:nzwidth="0x1" edc:desc="Channel 6 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL7" edc:nzwidth="0x1" edc:desc="Channel 7 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL8" edc:nzwidth="0x1" edc:desc="Channel 8 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL9" edc:nzwidth="0x1" edc:desc="Channel 9 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL10" edc:nzwidth="0x1" edc:desc="Channel 10 Software Selection"/>
            <edc:SFRFieldDef edc:cname="CHANNEL11" edc:nzwidth="0x1" edc:desc="Channel 11 Software Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL0" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL1" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL2" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL3" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x4200002C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL4" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL5" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL6" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000038">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL7" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x4200003C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL8" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000040">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL9" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000044">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL10" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x42000048">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="CHANNEL11" edc:nzwidth="0x20" edc:access="----------------nn--nnnn-nnnnnnn" edc:por="00000000000000001000000000000000" edc:mclr="00000000000000001000000000000000" edc:impl="0xCF7F" edc:_addr="0x4200004C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="EVGEN" edc:nzwidth="0x7" edc:desc="Event Generator Selection"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PATH" edc:nzwidth="0x2" edc:desc="Path Selection">
              <edc:SFRFieldSemantic edc:cname="SYNCHRONOUS" edc:desc="Synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RESYNCHRONIZED" edc:desc="Resynchronized path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="ASYNCHRONOUS" edc:desc="Asynchronous path" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EDGSEL" edc:nzwidth="0x2" edc:desc="Edge Detection Selection">
              <edc:SFRFieldSemantic edc:cname="NO_EVT_OUTPUT" edc:desc="No event output when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING_EDGE" edc:desc="Event detection only on the rising edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING_EDGE" edc:desc="Event detection only on the falling edge of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH_EDGES" edc:desc="Event detection on rising and falling edges of the signal from the event generator when using the resynchronized or synchronous path" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Generic Clock On Demand"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x30" edc:_addr="0x42000050"/>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER0" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000080">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER1" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000084">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER2" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000088">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER3" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4200008C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER4" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000090">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER5" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000094">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER6" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000098">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER7" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4200009C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER8" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000A0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER9" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000A4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER10" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000A8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER11" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000AC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER12" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000B0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER13" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000B4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER14" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000B8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER15" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000BC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER16" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000C0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER17" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000C4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER18" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000C8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER19" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000CC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER20" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000D0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER21" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000D4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER22" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000D8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER23" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000DC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER24" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000E0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER25" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000E4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER26" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000E8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER27" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000EC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER28" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000F0">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER29" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000F4">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER30" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000F8">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER31" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x420000FC">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER32" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000100">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER33" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000104">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER34" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000108">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER35" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4200010C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER36" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000110">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER37" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000114">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER38" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000118">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER39" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4200011C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER40" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000120">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER41" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000124">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER42" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000128">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER43" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x4200012C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER44" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000130">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER45" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000134">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="EVSYS" edc:cname="USER46" edc:nzwidth="0x20" edc:access="---------------------------nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42000138">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="EVSYS">
            <edc:SFRFieldDef edc:cname="CHANNEL" edc:nzwidth="0x5" edc:desc="Channel Event Selection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x22C4" edc:_addr="0x4200013C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----nnnnn-------n-nnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF80BF63" edc:_addr="0x42002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002406"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x4200240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x42002414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Value"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN6" edc:nzwidth="0x1" edc:desc="Output Waveform 6 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN7" edc:nzwidth="0x1" edc:desc="Output Waveform 7 Inversion"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200241C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x4200241E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200241F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FF7FF" edc:_addr="0x42002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period capture value in CC0 register, pulse width capture value in CC1 register" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BETWEEN" edc:desc="An interrupt/event is generated when a counter cycle ends, except for the first and last cycles" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x4200242C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0xF0FFFBF" edc:_addr="0x42002430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PATT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002438">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200243A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn----nnnn----nnnnn-nn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0FB7" edc:_addr="0x4200243C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x2" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42002440">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002444">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002448">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200244C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002450">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x42002454"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002464">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Value Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x42002466"/>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x4200246C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002470">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002474">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002478">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC0" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200247C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x380" edc:_addr="0x42002480"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----nnnnn-------n-nnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF80BF63" edc:_addr="0x42002800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002806"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42002808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x4200280C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42002810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x42002814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Value"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN6" edc:nzwidth="0x1" edc:desc="Output Waveform 6 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN7" edc:nzwidth="0x1" edc:desc="Output Waveform 7 Inversion"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200281C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x4200281E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200281F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FF7FF" edc:_addr="0x42002820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period capture value in CC0 register, pulse width capture value in CC1 register" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BETWEEN" edc:desc="An interrupt/event is generated when a counter cycle ends, except for the first and last cycles" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x4200282C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0xF0FFFBF" edc:_addr="0x42002830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PATT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002838">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200283A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn----nnnn----nnnnn-nn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0FB7" edc:_addr="0x4200283C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x2" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42002840">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002844">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002848">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200284C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002850">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x42002854"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002864">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Value Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x42002866"/>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x4200286C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002870">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002874">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002878">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC1" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x4200287C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x380" edc:_addr="0x42002880"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----nnnnn-------n-nnnnnn-nn---nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF80BF63" edc:_addr="0x42002C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="RESOLUTION" edc:nzwidth="0x2" edc:desc="Enhanced Resolution">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Dithering is disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DITH4" edc:desc="Dithering is done every 16 PWM frames" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DITH5" edc:desc="Dithering is done every 32 PWM frames" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DITH6" edc:desc="Dithering is done every 64 PWM frames" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization Selection">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset counter on next GCLK" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset counter on next GCLK and reset prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MSYNC" edc:nzwidth="0x1" edc:desc="Master Synchronization (only for TCC Slave Instance)"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DMAOS" edc:nzwidth="0x1" edc:desc="DMA One-shot Trigger Mode"/>
            <edc:SFRFieldDef edc:cname="CPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN2" edc:nzwidth="0x1" edc:desc="Capture Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CPTEN3" edc:nzwidth="0x1" edc:desc="Capture Channel 3 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42002C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot"/>
            <edc:SFRFieldDef edc:cname="IDXCMD" edc:nzwidth="0x2" edc:desc="Ramp Index Command">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Command disabled: Index toggles between cycles A and B" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SET" edc:desc="Set index: cycle B will be forced in the next cycle" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLEAR" edc:desc="Clear index: cycle A will be forced in the next cycle" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="HOLD" edc:desc="Hold index: the next cycle will be the same as the current cycle" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="TCC Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Clear start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update or double buffered registers" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force COUNT read synchronization" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002C06"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42002C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Swrst Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Ctrlb Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Busy"/>
            <edc:SFRFieldDef edc:cname="PATT" edc:nzwidth="0x1" edc:desc="Pattern Busy"/>
            <edc:SFRFieldDef edc:cname="WAVE" edc:nzwidth="0x1" edc:desc="Wave Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Busy"/>
            <edc:SFRFieldDef edc:cname="CC2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Busy"/>
            <edc:SFRFieldDef edc:cname="CC3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="FCTRLA" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42002C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault A Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault A Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault A Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault A Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault A Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault A Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault A Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault A Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault A Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault A Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault A Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="FCTRLB" edc:nzwidth="0x20" edc:access="----nnnnnnnnnnnnnnnnnnnnnnnnn-nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFFB" edc:_addr="0x42002C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="SRC" edc:nzwidth="0x2" edc:desc="Fault B Source">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Fault input disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="INVERT" edc:desc="Inverted MCEx (x=0,1) event input" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="ALTFAULT" edc:desc="Alternate fault (A or B) state at the end of the previous period" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="KEEP" edc:nzwidth="0x1" edc:desc="Fault B Keeper"/>
            <edc:SFRFieldDef edc:cname="QUAL" edc:nzwidth="0x1" edc:desc="Fault B Qualification"/>
            <edc:SFRFieldDef edc:cname="BLANK" edc:nzwidth="0x2" edc:desc="Fault B Blanking Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Blanking applied from start of the ramp" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISE" edc:desc="Blanking applied from rising edge of the output waveform" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALL" edc:desc="Blanking applied from falling edge of the output waveform" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Blanking applied from each toggle of the output waveform" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RESTART" edc:nzwidth="0x1" edc:desc="Fault B Restart"/>
            <edc:SFRFieldDef edc:cname="HALT" edc:nzwidth="0x2" edc:desc="Fault B Halt Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Halt action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HW" edc:desc="Hardware halt action" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SW" edc:desc="Software halt action" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="NR" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CHSEL" edc:nzwidth="0x2" edc:desc="Fault B Capture Channel">
              <edc:SFRFieldSemantic edc:cname="CC0" edc:desc="Capture value stored in channel 0" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CC1" edc:desc="Capture value stored in channel 1" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CC2" edc:desc="Capture value stored in channel 2" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CC3" edc:desc="Capture value stored in channel 3" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CAPTURE" edc:nzwidth="0x3" edc:desc="Fault B Capture Action">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No capture" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="CAPT" edc:desc="Capture on fault" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMIN" edc:desc="Minimum capture" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMAX" edc:desc="Maximum capture" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="LOCMIN" edc:desc="Minimum local detection" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="LOCMAX" edc:desc="Maximum local detection" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DERIV0" edc:desc="Minimum and maximum local detection" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="CAPTMARK" edc:desc="Capture with ramp index as MSB value" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="BLANKPRESC" edc:nzwidth="0x1" edc:desc="Fault B Blanking Prescaler"/>
            <edc:SFRFieldDef edc:cname="BLANKVAL" edc:nzwidth="0x8" edc:desc="Fault B Blanking Time"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL" edc:nzwidth="0x4" edc:desc="Fault B Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="WEXCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnn----nnnn------nn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF0F03" edc:_addr="0x42002C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OTMX" edc:nzwidth="0x2" edc:desc="Output Matrix"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="DTIEN0" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 0 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN1" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 1 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN2" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 2 Enable"/>
            <edc:SFRFieldDef edc:cname="DTIEN3" edc:nzwidth="0x1" edc:desc="Dead-time Insertion Generator 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="DTLS" edc:nzwidth="0x8" edc:desc="Dead-time Low Side Outputs Value"/>
            <edc:SFRFieldDef edc:cname="DTHS" edc:nzwidth="0x8" edc:desc="Dead-time High Side Outputs Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="DRVCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42002C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="NRE0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRE7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="NRV0" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV1" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV2" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV3" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV4" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV5" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV6" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="NRV7" edc:nzwidth="0x1" edc:desc="Non-Recoverable State 7 Output Value"/>
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform 0 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform 1 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN2" edc:nzwidth="0x1" edc:desc="Output Waveform 2 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN3" edc:nzwidth="0x1" edc:desc="Output Waveform 3 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN4" edc:nzwidth="0x1" edc:desc="Output Waveform 4 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN5" edc:nzwidth="0x1" edc:desc="Output Waveform 5 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN6" edc:nzwidth="0x1" edc:desc="Output Waveform 6 Inversion"/>
            <edc:SFRFieldDef edc:cname="INVEN7" edc:nzwidth="0x1" edc:desc="Output Waveform 7 Inversion"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL0" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 0 Filter Value"/>
            <edc:SFRFieldDef edc:cname="FILTERVAL1" edc:nzwidth="0x4" edc:desc="Non-Recoverable Fault Input 1 Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002C1C"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-----n-n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x5" edc:_addr="0x42002C1E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Running Mode"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="FDDBD" edc:nzwidth="0x1" edc:desc="Fault Detection on Debug Break Detection"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42002C1F"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnn-nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0FF7FF" edc:_addr="0x42002C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="EVACT0" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event0 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNTEV" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="INC" edc:desc="Increment counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on active state of asynchronous event" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Stamp capture" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVACT1" edc:nzwidth="0x3" edc:desc="Timer/counter Input Event1 Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Re-trigger counter on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIR" edc:desc="Direction control" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop counter on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DEC" edc:desc="Decrement counter on event" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period capture value in CC0 register, pulse width capture value in CC1 register" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period capture value in CC1 register, pulse width capture value in CC0 register" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="FAULT" edc:desc="Non-recoverable fault" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CNTSEL" edc:nzwidth="0x2" edc:desc="Timer/counter Output Event Mode">
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="An interrupt/event is generated when a new counter cycle starts" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="END" edc:desc="An interrupt/event is generated when a counter cycle ends" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BETWEEN" edc:desc="An interrupt/event is generated when a counter cycle ends, except for the first and last cycles" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="BOUNDARY" edc:desc="An interrupt/event is generated when a new counter cycle starts or a counter cycle ends" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="TRGEO" edc:nzwidth="0x1" edc:desc="Retrigger Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="CNTEO" edc:nzwidth="0x1" edc:desc="Timer/counter Output Event Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV0" edc:nzwidth="0x1" edc:desc="Inverted Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCINV1" edc:nzwidth="0x1" edc:desc="Inverted Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI0" edc:nzwidth="0x1" edc:desc="Timer/counter Event 0 Input Enable"/>
            <edc:SFRFieldDef edc:cname="TCEI1" edc:nzwidth="0x1" edc:desc="Timer/counter Event 1 Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="MCEI3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTENCLR" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTENSET" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture Channel 3 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="INTFLAG" edc:nzwidth="0x20" edc:access="------------nnnnnnnnnn------nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFC0F" edc:_addr="0x42002C2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
            <edc:SFRFieldDef edc:cname="TRG" edc:nzwidth="0x1" edc:desc="Retrigger"/>
            <edc:SFRFieldDef edc:cname="CNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Update Fault"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Match or Capture 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Match or Capture 1"/>
            <edc:SFRFieldDef edc:cname="MC2" edc:nzwidth="0x1" edc:desc="Match or Capture 2"/>
            <edc:SFRFieldDef edc:cname="MC3" edc:nzwidth="0x1" edc:desc="Match or Capture 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="STATUS" edc:nzwidth="0x20" edc:access="----nnnn----nnnnnnnnnnnnn-nnnnnn" edc:por="00000000000000000000000000000001" edc:mclr="00000000000000000000000000000001" edc:impl="0xF0FFFBF" edc:_addr="0x42002C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="IDX" edc:nzwidth="0x1" edc:desc="Ramp"/>
            <edc:SFRFieldDef edc:cname="UFS" edc:nzwidth="0x1" edc:desc="Non-recoverable Update Fault State"/>
            <edc:SFRFieldDef edc:cname="DFS" edc:nzwidth="0x1" edc:desc="Non-Recoverable Debug Fault State"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave"/>
            <edc:SFRFieldDef edc:cname="PATTBUFV" edc:nzwidth="0x1" edc:desc="Pattern Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Period Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FAULTAIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault A Input"/>
            <edc:SFRFieldDef edc:cname="FAULTBIN" edc:nzwidth="0x1" edc:desc="Recoverable Fault B Input"/>
            <edc:SFRFieldDef edc:cname="FAULT0IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault0 Input"/>
            <edc:SFRFieldDef edc:cname="FAULT1IN" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault1 Input"/>
            <edc:SFRFieldDef edc:cname="FAULTA" edc:nzwidth="0x1" edc:desc="Recoverable Fault A State"/>
            <edc:SFRFieldDef edc:cname="FAULTB" edc:nzwidth="0x1" edc:desc="Recoverable Fault B State"/>
            <edc:SFRFieldDef edc:cname="FAULT0" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 0 State"/>
            <edc:SFRFieldDef edc:cname="FAULT1" edc:nzwidth="0x1" edc:desc="Non-Recoverable Fault 1 State"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Value"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Value"/>
            <edc:SFRFieldDef edc:cname="CMP2" edc:nzwidth="0x1" edc:desc="Compare Channel 2 Value"/>
            <edc:SFRFieldDef edc:cname="CMP3" edc:nzwidth="0x1" edc:desc="Compare Channel 3 Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x18" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x14" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x13" edc:desc="Counter Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x12" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PATT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002C38">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PGE0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGE7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Enable"/>
            <edc:SFRFieldDef edc:cname="PGV0" edc:nzwidth="0x1" edc:desc="Pattern Generator 0 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV1" edc:nzwidth="0x1" edc:desc="Pattern Generator 1 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV2" edc:nzwidth="0x1" edc:desc="Pattern Generator 2 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV3" edc:nzwidth="0x1" edc:desc="Pattern Generator 3 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV4" edc:nzwidth="0x1" edc:desc="Pattern Generator 4 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV5" edc:nzwidth="0x1" edc:desc="Pattern Generator 5 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV6" edc:nzwidth="0x1" edc:desc="Pattern Generator 6 Output Value"/>
            <edc:SFRFieldDef edc:cname="PGV7" edc:nzwidth="0x1" edc:desc="Pattern Generator 7 Output Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42002C3A"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="WAVE" edc:nzwidth="0x20" edc:access="----nnnn----nnnn----nnnnn-nn-nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF0F0FB7" edc:_addr="0x42002C3C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x3" edc:desc="Waveform Generation">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DSCRITICAL" edc:desc="Dual-slope critical" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTTOM" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DSBOTH" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches ZERO or TOP" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DSTOP" edc:desc="Dual-slope with interrupt/event condition when COUNT reaches TOP" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RAMP" edc:nzwidth="0x2" edc:desc="Ramp Mode">
              <edc:SFRFieldSemantic edc:cname="RAMP1" edc:desc="RAMP1 operation" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2A" edc:desc="Alternative RAMP2 operation" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2" edc:desc="RAMP2 operation" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="RAMP2C" edc:desc="Critical RAMP2 operation" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CIPEREN" edc:nzwidth="0x1" edc:desc="Circular period Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN0" edc:nzwidth="0x1" edc:desc="Circular Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN1" edc:nzwidth="0x1" edc:desc="Circular Channel 1 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN2" edc:nzwidth="0x1" edc:desc="Circular Channel 2 Enable"/>
            <edc:SFRFieldDef edc:cname="CICCEN3" edc:nzwidth="0x1" edc:desc="Circular Channel 3 Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="POL0" edc:nzwidth="0x1" edc:desc="Channel 0 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL1" edc:nzwidth="0x1" edc:desc="Channel 1 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL2" edc:nzwidth="0x1" edc:desc="Channel 2 Polarity"/>
            <edc:SFRFieldDef edc:cname="POL3" edc:nzwidth="0x1" edc:desc="Channel 3 Polarity"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SWAP0" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 0"/>
            <edc:SFRFieldDef edc:cname="SWAP1" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 1"/>
            <edc:SFRFieldDef edc:cname="SWAP2" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 2"/>
            <edc:SFRFieldDef edc:cname="SWAP3" edc:nzwidth="0x1" edc:desc="Swap DTI Output Pair 3"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PER" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42002C40">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x18" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x14" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x13" edc:desc="Period Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x12" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C44">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C48">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C4C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CC3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C50">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x14" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x10" edc:_addr="0x42002C54"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PATTBUF" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42002C64">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PGEB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGEB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Enable Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB0" edc:nzwidth="0x1" edc:desc="Pattern Generation 0 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB1" edc:nzwidth="0x1" edc:desc="Pattern Generation 1 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB2" edc:nzwidth="0x1" edc:desc="Pattern Generation 2 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB3" edc:nzwidth="0x1" edc:desc="Pattern Generation 3 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB4" edc:nzwidth="0x1" edc:desc="Pattern Generation 4 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB5" edc:nzwidth="0x1" edc:desc="Pattern Generation 5 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB6" edc:nzwidth="0x1" edc:desc="Pattern Generation 6 Output Value Buffer"/>
            <edc:SFRFieldDef edc:cname="PGVB7" edc:nzwidth="0x1" edc:desc="Pattern Generation 7 Output Value Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x6" edc:_addr="0x42002C66"/>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="PERBUF" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="11111111111111111111111111111111" edc:mclr="11111111111111111111111111111111" edc:impl="0xFFFFFF" edc:_addr="0x42002C6C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x18" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x14" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x13" edc:desc="Period Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x12" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C70">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C74">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF2" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C78">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TCC2" edc:cname="CCBUF3" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42002C7C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TCC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x18" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-20"/>
            <edc:SFRFieldDef edc:cname="DITHERBUF" edc:nzwidth="0x14" edc:desc="Dithering Buffer Cycle Number"/>
            <edc:AdjustPoint edc:offset="-19"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x13" edc:desc="Channel Compare/Capture Buffer Value"/>
            <edc:AdjustPoint edc:offset="-18"/>
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x12" edc:desc="Channel Compare/Capture Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x380" edc:_addr="0x42002C80"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----------nn--nn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x330FFF" edc:_addr="0x42003000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42003004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42003005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x42003006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4200300A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4200300B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200300C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200300D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200300E"/>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200300F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42003010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x42003014"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----------nn--nn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x330FFF" edc:_addr="0x42003400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42003404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42003405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x42003406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003409">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4200340A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4200340B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200340C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200340D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200340E"/>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200340F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42003410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x42003414"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----------nn--nn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x330FFF" edc:_addr="0x42003800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42003804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42003805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x42003806">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003809">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4200380A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4200380B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200380C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200380D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200380E"/>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200380F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42003810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x42003814"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----------nn--nn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x330FFF" edc:_addr="0x42003C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42003C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42003C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x42003C06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003C09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42003C0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x42003C0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42003C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42003C0D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42003C0E"/>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42003C0F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42003C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x42003C14"/>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="----------nn--nn----nnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x330FFF" edc:_addr="0x42004000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Timer Counter Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Counter in 16-bit mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT8" edc:desc="Counter in 8-bit mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Counter in 32-bit mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="PRESCSYNC" edc:nzwidth="0x2" edc:desc="Prescaler and Counter Synchronization">
              <edc:SFRFieldSemantic edc:cname="GCLK" edc:desc="Reload or reset the counter on next generic clock" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="PRESC" edc:desc="Reload or reset the counter on next prescaler clock" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="RESYNC" edc:desc="Reload or reset the counter on next generic clock and reset the prescaler counter" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="Clock On Demand"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="Prescaler: GCLK_TC" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Prescaler: GCLK_TC/2" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Prescaler: GCLK_TC/4" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Prescaler: GCLK_TC/8" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Prescaler: GCLK_TC/16" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Prescaler: GCLK_TC/64" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Prescaler: GCLK_TC/256" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Prescaler: GCLK_TC/1024" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="CAPTEN0" edc:nzwidth="0x1" edc:desc="Capture Channel 0 Enable"/>
            <edc:SFRFieldDef edc:cname="CAPTEN1" edc:nzwidth="0x1" edc:desc="Capture Channel 1 Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="COPEN0" edc:nzwidth="0x1" edc:desc="Capture On Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="COPEN1" edc:nzwidth="0x1" edc:desc="Capture On Pin 1 Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42004004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn--nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE7" edc:_addr="0x42004005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Counter Direction"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:SFRFieldDef edc:cname="ONESHOT" edc:nzwidth="0x1" edc:desc="One-Shot on Counter"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a start, restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Force a stop" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double-buffered register" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DMAOS" edc:desc="One-shot DMA trigger" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn---n--nn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3137" edc:_addr="0x42004006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x3" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger TC on event" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNT" edc:desc="Count on event" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start TC on event" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="STAMP" edc:desc="Time stamp capture" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="PPW" edc:desc="Period catured in CC0, pulse width in CC1" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="PWP" edc:desc="Period catured in CC1, pulse width in CC0" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="PW" edc:desc="Pulse width capture" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TCINV" edc:nzwidth="0x1" edc:desc="TC Event Input Polarity"/>
            <edc:SFRFieldDef edc:cname="TCEI" edc:nzwidth="0x1" edc:desc="TC Event Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 0"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="MC Event Output Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42004008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Disable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42004009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nn--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x4200400A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="OVF Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="ERR Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 0"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="MC Interrupt Flag 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="--nnn-nn" edc:por="00000001" edc:mclr="00000001" edc:impl="0x3B" edc:_addr="0x4200400B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop Status Flag"/>
            <edc:SFRFieldDef edc:cname="SLAVE" edc:nzwidth="0x1" edc:desc="Slave Status Flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PERBUFV" edc:nzwidth="0x1" edc:desc="Synchronization Busy Status"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare channel buffer 0 valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare channel buffer 1 valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="WAVE" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200400C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="WAVEGEN" edc:nzwidth="0x2" edc:desc="Waveform Generation Mode">
              <edc:SFRFieldSemantic edc:cname="NFRQ" edc:desc="Normal frequency" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MFRQ" edc:desc="Match frequency" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="NPWM" edc:desc="Normal PWM" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MPWM" edc:desc="Match PWM" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="DRVCTRL" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x4200400D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="INVEN0" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 0"/>
            <edc:SFRFieldDef edc:cname="INVEN1" edc:nzwidth="0x1" edc:desc="Output Waveform Invert Enable 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200400E"/>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200400F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Run During Debug"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------rrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF" edc:_addr="0x42004010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="swrst"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="enable"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="STATUS"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Counter"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="Period"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3EC" edc:_addr="0x42004014"/>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnn---nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE3" edc:_addr="0x42004400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SLAVEEN" edc:nzwidth="0x1" edc:desc="Slave Enable"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run During Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004401">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler Configuration">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Peripheral clock divided by 2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Peripheral clock divided by 4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Peripheral clock divided by 8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Peripheral clock divided by 16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Peripheral clock divided by 32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Peripheral clock divided by 64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Peripheral clock divided by 128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Peripheral clock divided by 256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="REFCTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x42004402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x4" edc:desc="Reference Selection">
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC0" edc:desc="1/1.6 VDDANA" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC1" edc:desc="1/2 VDDANA" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External Voltage Reference A (shared with DAC)" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC Internal Output" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC2" edc:desc="VDDANA" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="REFCOMP" edc:nzwidth="0x1" edc:desc="Reference Buffer Offset Compensation Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42004403">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="FLUSHEI" edc:nzwidth="0x1" edc:desc="Flush Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="STARTEI" edc:nzwidth="0x1" edc:desc="Start Conversion Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="FLUSHINV" edc:nzwidth="0x1" edc:desc="Flush Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="STARTINV" edc:nzwidth="0x1" edc:desc="Start Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="RESRDYEO" edc:nzwidth="0x1" edc:desc="Result Ready Event Out"/>
            <edc:SFRFieldDef edc:cname="WINMONEO" edc:nzwidth="0x1" edc:desc="Window Monitor Event Out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SEQSTATUS" edc:nzwidth="0x8" edc:access="r--rrrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:_addr="0x42004407">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="SEQSTATE" edc:nzwidth="0x5" edc:desc="Sequence State"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SEQBUSY" edc:nzwidth="0x1" edc:desc="Sequence Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="INPUTCTRL" edc:nzwidth="0x10" edc:access="---nnnnn---nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:_addr="0x42004408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x5" edc:desc="Positive Mux Input Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC AIN0 Pin" edc:when="(field &amp; 0x1F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC AIN1 Pin" edc:when="(field &amp; 0x1F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC AIN2 Pin" edc:when="(field &amp; 0x1F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC AIN3 Pin" edc:when="(field &amp; 0x1F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC AIN4 Pin" edc:when="(field &amp; 0x1F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC AIN5 Pin" edc:when="(field &amp; 0x1F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC AIN6 Pin" edc:when="(field &amp; 0x1F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC AIN7 Pin" edc:when="(field &amp; 0x1F) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC AIN8 Pin" edc:when="(field &amp; 0x1F) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC AIN9 Pin" edc:when="(field &amp; 0x1F) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC AIN10 Pin" edc:when="(field &amp; 0x1F) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC AIN11 Pin" edc:when="(field &amp; 0x1F) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="SCALEDVDDCORE" edc:desc="1/4 Scaled VDDCORE Supply" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="SCALEDVDDANA" edc:desc="1/4 Scaled VDDANA Supply" edc:when="(field &amp; 0x1F) == 0x1B"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x5" edc:desc="Negative Mux Input Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC AIN0 Pin" edc:when="(field &amp; 0x1F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC AIN1 Pin" edc:when="(field &amp; 0x1F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC AIN2 Pin" edc:when="(field &amp; 0x1F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC AIN3 Pin" edc:when="(field &amp; 0x1F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC AIN4 Pin" edc:when="(field &amp; 0x1F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC AIN5 Pin" edc:when="(field &amp; 0x1F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Internal Ground" edc:when="(field &amp; 0x1F) == 0x18"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CTRLC" edc:nzwidth="0x10" edc:access="--nn-nnnn-nnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x37BF" edc:_addr="0x4200440A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="DIFFMODE" edc:nzwidth="0x1" edc:desc="Differential Mode"/>
            <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left-Adjusted Result"/>
            <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="Free Running Mode"/>
            <edc:SFRFieldDef edc:cname="CORREN" edc:nzwidth="0x1" edc:desc="Digital Correction Logic Enable"/>
            <edc:SFRFieldDef edc:cname="RESSEL" edc:nzwidth="0x2" edc:desc="Conversion Result Resolution">
              <edc:SFRFieldSemantic edc:cname="12BIT" edc:desc="12-bit result" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16BIT" edc:desc="Accumulation or Oversampling and Decimation modes" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10BIT" edc:desc="10-bit result" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="8-bit result" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="R2R" edc:nzwidth="0x1" edc:desc="Rail-to-Rail mode enable"/>
            <edc:SFRFieldDef edc:cname="WINMODE" edc:nzwidth="0x3" edc:desc="Window Monitor Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No window mode (default)" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="RESULT &gt; WINLT" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="RESULT &lt; WINUT" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="WINLT &lt; RESULT &lt; WINUT" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="MODE4" edc:desc="!(WINLT &lt; RESULT &lt; WINUT)" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DUALSEL" edc:nzwidth="0x2" edc:desc="Dual Mode Trigger Selection">
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Start event or software trigger will start a conversion on both ADCs" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INTERLEAVE" edc:desc="START event or software trigger will alternatively start a conversion on ADC0 and ADC1" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="AVGCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x4200440C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="SAMPLENUM" edc:nzwidth="0x4" edc:desc="Number of Samples to be Collected">
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1 sample" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2 samples" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="4 samples" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8 samples" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16 samples" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32 samples" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="64" edc:desc="64 samples" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="128" edc:desc="128 samples" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256 samples" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="512" edc:desc="512 samples" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="1024" edc:desc="1024 samples" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ADJRES" edc:nzwidth="0x3" edc:desc="Adjusting Result / Division Coefficient"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SAMPCTRL" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:_addr="0x4200440D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="SAMPLEN" edc:nzwidth="0x6" edc:desc="Sampling Time Length"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFCOMP" edc:nzwidth="0x1" edc:desc="Comparator Offset Compensation Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINLT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x4200440E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x10" edc:desc="Window Lower Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="WINUT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42004410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x10" edc:desc="Window Upper Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="GAINCORR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0x42004412">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0xC" edc:desc="Gain Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="OFFSETCORR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0x42004414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0xC" edc:desc="Offset Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004416"/>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SWTRIG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42004418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="ADC Flush"/>
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start ADC Conversion"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42004419"/>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200441C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4200441D"/>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SYNCBUSY" edc:nzwidth="0x10" edc:access="-----rrrrrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7FF" edc:_addr="0x42004420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SWRST Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ENABLE Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="INPUTCTRL" edc:nzwidth="0x1" edc:desc="INPUTCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLC" edc:nzwidth="0x1" edc:desc="CTRLC Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="AVGCTRL" edc:nzwidth="0x1" edc:desc="AVGCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SAMPCTRL" edc:nzwidth="0x1" edc:desc="SAMPCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x1" edc:desc="WINLT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x1" edc:desc="WINUT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0x1" edc:desc="GAINCORR Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0x1" edc:desc="OFFSETCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SWTRIG" edc:nzwidth="0x1" edc:desc="SWTRG Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004422"/>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="RESULT" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42004424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="RESULT" edc:nzwidth="0x10" edc:desc="Result Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004426"/>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="SEQCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42004428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="SEQEN" edc:nzwidth="0x20" edc:desc="Enable Positive Input in the Sequence"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC0" edc:cname="CALIB" edc:nzwidth="0x10" edc:access="-----nnn-----nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x707" edc:_addr="0x4200442C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC0">
            <edc:SFRFieldDef edc:cname="BIASCOMP" edc:nzwidth="0x3" edc:desc="Bias Comparator Scaling"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BIASREFBUF" edc:nzwidth="0x3" edc:desc="Bias Reference Buffer Scaling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3D2" edc:_addr="0x4200442E"/>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nnn---nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE3" edc:_addr="0x42004800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SLAVEEN" edc:nzwidth="0x1" edc:desc="Slave Enable"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run During Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004801">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x3" edc:desc="Prescaler Configuration">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Peripheral clock divided by 2" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Peripheral clock divided by 4" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Peripheral clock divided by 8" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Peripheral clock divided by 16" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Peripheral clock divided by 32" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Peripheral clock divided by 64" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Peripheral clock divided by 128" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Peripheral clock divided by 256" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="REFCTRL" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x42004802">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x4" edc:desc="Reference Selection">
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC0" edc:desc="1/1.6 VDDANA" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC1" edc:desc="1/2 VDDANA" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External Voltage Reference A (shared with DAC)" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC Internal Output" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC2" edc:desc="VDDANA" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="REFCOMP" edc:nzwidth="0x1" edc:desc="Reference Buffer Offset Compensation Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42004803">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="FLUSHEI" edc:nzwidth="0x1" edc:desc="Flush Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="STARTEI" edc:nzwidth="0x1" edc:desc="Start Conversion Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="FLUSHINV" edc:nzwidth="0x1" edc:desc="Flush Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="STARTINV" edc:nzwidth="0x1" edc:desc="Start Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="RESRDYEO" edc:nzwidth="0x1" edc:desc="Result Ready Event Out"/>
            <edc:SFRFieldDef edc:cname="WINMONEO" edc:nzwidth="0x1" edc:desc="Window Monitor Event Out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004806">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="SEQSTATUS" edc:nzwidth="0x8" edc:access="r--rrrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x9F" edc:_addr="0x42004807">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="SEQSTATE" edc:nzwidth="0x5" edc:desc="Sequence State"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SEQBUSY" edc:nzwidth="0x1" edc:desc="Sequence Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="INPUTCTRL" edc:nzwidth="0x10" edc:access="---nnnnn---nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1F1F" edc:_addr="0x42004808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x5" edc:desc="Positive Mux Input Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC AIN0 Pin" edc:when="(field &amp; 0x1F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC AIN1 Pin" edc:when="(field &amp; 0x1F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC AIN2 Pin" edc:when="(field &amp; 0x1F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC AIN3 Pin" edc:when="(field &amp; 0x1F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC AIN4 Pin" edc:when="(field &amp; 0x1F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC AIN5 Pin" edc:when="(field &amp; 0x1F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="AIN6" edc:desc="ADC AIN6 Pin" edc:when="(field &amp; 0x1F) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="AIN7" edc:desc="ADC AIN7 Pin" edc:when="(field &amp; 0x1F) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="AIN8" edc:desc="ADC AIN8 Pin" edc:when="(field &amp; 0x1F) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="AIN9" edc:desc="ADC AIN9 Pin" edc:when="(field &amp; 0x1F) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="AIN10" edc:desc="ADC AIN10 Pin" edc:when="(field &amp; 0x1F) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="AIN11" edc:desc="ADC AIN11 Pin" edc:when="(field &amp; 0x1F) == 0xB"/>
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0x1F) == 0x19"/>
              <edc:SFRFieldSemantic edc:cname="SCALEDVDDCORE" edc:desc="1/4 Scaled VDDCORE Supply" edc:when="(field &amp; 0x1F) == 0x1A"/>
              <edc:SFRFieldSemantic edc:cname="SCALEDVDDANA" edc:desc="1/4 Scaled VDDANA Supply" edc:when="(field &amp; 0x1F) == 0x1B"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x5" edc:desc="Negative Mux Input Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="ADC AIN0 Pin" edc:when="(field &amp; 0x1F) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="ADC AIN1 Pin" edc:when="(field &amp; 0x1F) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="ADC AIN2 Pin" edc:when="(field &amp; 0x1F) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="ADC AIN3 Pin" edc:when="(field &amp; 0x1F) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="AIN4" edc:desc="ADC AIN4 Pin" edc:when="(field &amp; 0x1F) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AIN5" edc:desc="ADC AIN5 Pin" edc:when="(field &amp; 0x1F) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Internal Ground" edc:when="(field &amp; 0x1F) == 0x18"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="CTRLC" edc:nzwidth="0x10" edc:access="--nn-nnnn-nnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x37BF" edc:_addr="0x4200480A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="DIFFMODE" edc:nzwidth="0x1" edc:desc="Differential Mode"/>
            <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left-Adjusted Result"/>
            <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="Free Running Mode"/>
            <edc:SFRFieldDef edc:cname="CORREN" edc:nzwidth="0x1" edc:desc="Digital Correction Logic Enable"/>
            <edc:SFRFieldDef edc:cname="RESSEL" edc:nzwidth="0x2" edc:desc="Conversion Result Resolution">
              <edc:SFRFieldSemantic edc:cname="12BIT" edc:desc="12-bit result" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16BIT" edc:desc="Accumulation or Oversampling and Decimation modes" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="10BIT" edc:desc="10-bit result" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8BIT" edc:desc="8-bit result" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="R2R" edc:nzwidth="0x1" edc:desc="Rail-to-Rail mode enable"/>
            <edc:SFRFieldDef edc:cname="WINMODE" edc:nzwidth="0x3" edc:desc="Window Monitor Mode">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="No window mode (default)" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MODE1" edc:desc="RESULT &gt; WINLT" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MODE2" edc:desc="RESULT &lt; WINUT" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="MODE3" edc:desc="WINLT &lt; RESULT &lt; WINUT" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="MODE4" edc:desc="!(WINLT &lt; RESULT &lt; WINUT)" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DUALSEL" edc:nzwidth="0x2" edc:desc="Dual Mode Trigger Selection">
              <edc:SFRFieldSemantic edc:cname="BOTH" edc:desc="Start event or software trigger will start a conversion on both ADCs" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INTERLEAVE" edc:desc="START event or software trigger will alternatively start a conversion on ADC0 and ADC1" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="AVGCTRL" edc:nzwidth="0x8" edc:access="-nnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7F" edc:_addr="0x4200480C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="SAMPLENUM" edc:nzwidth="0x4" edc:desc="Number of Samples to be Collected">
              <edc:SFRFieldSemantic edc:cname="1" edc:desc="1 sample" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2" edc:desc="2 samples" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="4" edc:desc="4 samples" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8" edc:desc="8 samples" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="16" edc:desc="16 samples" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="32" edc:desc="32 samples" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="64" edc:desc="64 samples" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="128" edc:desc="128 samples" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="256" edc:desc="256 samples" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="512" edc:desc="512 samples" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="1024" edc:desc="1024 samples" edc:when="(field &amp; 0xF) == 0xA"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ADJRES" edc:nzwidth="0x3" edc:desc="Adjusting Result / Division Coefficient"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="SAMPCTRL" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:_addr="0x4200480D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="SAMPLEN" edc:nzwidth="0x6" edc:desc="Sampling Time Length"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OFFCOMP" edc:nzwidth="0x1" edc:desc="Comparator Offset Compensation Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="WINLT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x4200480E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x10" edc:desc="Window Lower Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="WINUT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42004810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x10" edc:desc="Window Upper Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="GAINCORR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0x42004812">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0xC" edc:desc="Gain Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="OFFSETCORR" edc:nzwidth="0x10" edc:access="----nnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0xFFF" edc:_addr="0x42004814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0xC" edc:desc="Offset Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004816"/>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="SWTRIG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42004818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="ADC Flush"/>
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start ADC Conversion"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42004819"/>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200481C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x4200481D"/>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="SYNCBUSY" edc:nzwidth="0x10" edc:access="-----rrrrrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7FF" edc:_addr="0x42004820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SWRST Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ENABLE Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="INPUTCTRL" edc:nzwidth="0x1" edc:desc="INPUTCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLC" edc:nzwidth="0x1" edc:desc="CTRLC Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="AVGCTRL" edc:nzwidth="0x1" edc:desc="AVGCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SAMPCTRL" edc:nzwidth="0x1" edc:desc="SAMPCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x1" edc:desc="WINLT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x1" edc:desc="WINUT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0x1" edc:desc="GAINCORR Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0x1" edc:desc="OFFSETCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SWTRIG" edc:nzwidth="0x1" edc:desc="SWTRG Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004822"/>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="RESULT" edc:nzwidth="0x10" edc:access="rrrrrrrrrrrrrrrr" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42004824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="RESULT" edc:nzwidth="0x10" edc:desc="Result Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42004826"/>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="SEQCTRL" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42004828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="SEQEN" edc:nzwidth="0x20" edc:desc="Enable Positive Input in the Sequence"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="ADC1" edc:cname="CALIB" edc:nzwidth="0x10" edc:access="-----nnn-----nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x707" edc:_addr="0x4200482C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="ADC1">
            <edc:SFRFieldDef edc:cname="BIASCOMP" edc:nzwidth="0x3" edc:desc="Bias Comparator Scaling"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BIASREFBUF" edc:nzwidth="0x3" edc:desc="Bias Reference Buffer Scaling"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3D2" edc:_addr="0x4200482E"/>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="nn----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xC3" edc:_addr="0x42004C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="ONDEMAND" edc:nzwidth="0x1" edc:desc="On Demand Control"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="REFCTRL" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:_addr="0x42004C01">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x2" edc:desc="Reference Selection">
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Bandgap Reference" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AREFB" edc:desc="External Reference" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="Internal DAC Output" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="INTVCC" edc:desc="VDDANA" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ONREFBUF" edc:nzwidth="0x1" edc:desc="Reference Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="CTRLB" edc:nzwidth="0x10" edc:access="nnnn-nnnnnnnnnnn" edc:por="0010000000000000" edc:mclr="0010000000000000" edc:impl="0xF7FF" edc:_addr="0x42004C02">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x8" edc:desc="Prescaler Configuration">
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Peripheral clock divided by 2" edc:when="(field &amp; 0xFF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Peripheral clock divided by 4" edc:when="(field &amp; 0xFF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Peripheral clock divided by 8" edc:when="(field &amp; 0xFF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Peripheral clock divided by 16" edc:when="(field &amp; 0xFF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Peripheral clock divided by 32" edc:when="(field &amp; 0xFF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Peripheral clock divided by 64" edc:when="(field &amp; 0xFF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Peripheral clock divided by 128" edc:when="(field &amp; 0xFF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Peripheral clock divided by 256" edc:when="(field &amp; 0xFF) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="OSR" edc:nzwidth="0x3" edc:desc="Over Sampling Ratio">
              <edc:SFRFieldSemantic edc:cname="OSR64" edc:desc="Over Sampling Ratio is 64" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="OSR128" edc:desc="Over Sampling Ratio is 128" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OSR256" edc:desc="Over Sampling Ratio is 256" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="OSR512" edc:desc="Over Sampling Ratio is 512" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="OSR1024" edc:desc="Over Sampling Ratio is 1024" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SKPCNT" edc:nzwidth="0x4" edc:desc="Skip Sample Count"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42004C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="FLUSHEI" edc:nzwidth="0x1" edc:desc="Flush Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="STARTEI" edc:nzwidth="0x1" edc:desc="Start Conversion Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="FLUSHINV" edc:nzwidth="0x1" edc:desc="Flush Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="STARTINV" edc:nzwidth="0x1" edc:desc="Satrt Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="RESRDYEO" edc:nzwidth="0x1" edc:desc="Result Ready Event Out"/>
            <edc:SFRFieldDef edc:cname="WINMONEO" edc:nzwidth="0x1" edc:desc="Window Monitor Event Out"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004C06">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004C07">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="RESRDY" edc:nzwidth="0x1" edc:desc="Result Ready Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="OVERRUN" edc:nzwidth="0x1" edc:desc="Overrun Interrupt Flag"/>
            <edc:SFRFieldDef edc:cname="WINMON" edc:nzwidth="0x1" edc:desc="Window Monitor Interrupt Flag"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="SEQSTATUS" edc:nzwidth="0x8" edc:access="r---rrrr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:_addr="0x42004C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="SEQSTATE" edc:nzwidth="0x4" edc:desc="Sequence State"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SEQBUSY" edc:nzwidth="0x1" edc:desc="Sequence Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="INPUTCTRL" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42004C09">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="MUXSEL" edc:nzwidth="0x4" edc:desc="SDADC Input Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="SDADC AIN0 Pin" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="SDADC AIN1 Pin" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="SDADC AIN2 Pin" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="CTRLC" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42004C0A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="FREERUN" edc:nzwidth="0x1" edc:desc="Free Running Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="WINCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004C0B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="WINMODE" edc:nzwidth="0x3" edc:desc="Window Monitor Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="WINLT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42004C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x18" edc:desc="Window Lower Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="WINUT" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42004C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x18" edc:desc="Window Upper Threshold"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="OFFSETCORR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFFFF" edc:_addr="0x42004C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0x18" edc:desc="Offset Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="GAINCORR" edc:nzwidth="0x10" edc:access="--nnnnnnnnnnnnnn" edc:por="0000000000000001" edc:mclr="0000000000000001" edc:impl="0x3FFF" edc:_addr="0x42004C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0xE" edc:desc="Gain Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="SHIFTCORR" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42004C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="SHIFTCORR" edc:nzwidth="0x4" edc:desc="Shift Correction Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42004C1B"/>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="SWTRIG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42004C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="FLUSH" edc:nzwidth="0x1" edc:desc="SDADC Flush"/>
            <edc:SFRFieldDef edc:cname="START" edc:nzwidth="0x1" edc:desc="Start SDADC Conversion"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42004C1D"/>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="--------------------rrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFF" edc:_addr="0x42004C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="SWRST Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="ENABLE Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLC" edc:nzwidth="0x1" edc:desc="CTRLC Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="INPUTCTRL" edc:nzwidth="0x1" edc:desc="INPUTCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINCTRL" edc:nzwidth="0x1" edc:desc="WINCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINLT" edc:nzwidth="0x1" edc:desc="WINLT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINUT" edc:nzwidth="0x1" edc:desc="WINUT Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="OFFSETCORR" edc:nzwidth="0x1" edc:desc="OFFSETCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="GAINCORR" edc:nzwidth="0x1" edc:desc="GAINCORR Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SHIFTCORR" edc:nzwidth="0x1" edc:desc="SHIFTCORR Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SWTRIG" edc:nzwidth="0x1" edc:desc="SWTRG Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ANACTRL" edc:nzwidth="0x1" edc:desc="ANACTRL Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="RESULT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x42004C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="RESULT" edc:nzwidth="0x18" edc:desc="Result Value"/>
            <edc:SFRFieldDef edc:cname="RESERVED" edc:nzwidth="0x8" edc:desc="Reserved"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="SEQCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42004C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="SEQEN" edc:nzwidth="0x3" edc:desc="Enable Positive Input in the Sequence"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42004C29"/>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="ANACTRL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42004C2C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="CTRSDADC" edc:nzwidth="0x6" edc:desc="SDADC Control"/>
            <edc:SFRFieldDef edc:cname="ONCHOP" edc:nzwidth="0x1" edc:desc="Chopper"/>
            <edc:SFRFieldDef edc:cname="BUFTEST" edc:nzwidth="0x1" edc:desc="BUFTEST"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42004C2D"/>
      <edc:SFRDef ltx:memberofperipheral="SDADC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42004C2E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SDADC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3D1" edc:_addr="0x42004C2F"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005001">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="START0" edc:nzwidth="0x1" edc:desc="Comparator 0 Start Comparison"/>
            <edc:SFRFieldDef edc:cname="START1" edc:nzwidth="0x1" edc:desc="Comparator 1 Start Comparison"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nn--nn---n--nn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3313" edc:_addr="0x42005002">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMPEO0" edc:nzwidth="0x1" edc:desc="Comparator 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEO1" edc:nzwidth="0x1" edc:desc="Comparator 1 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WINEO0" edc:nzwidth="0x1" edc:desc="Window 0 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="COMPEI0" edc:nzwidth="0x1" edc:desc="Comparator 0 Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="COMPEI1" edc:nzwidth="0x1" edc:desc="Comparator 1 Event Input Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="INVEI0" edc:nzwidth="0x1" edc:desc="Comparator 0 Input Event Invert Enable"/>
            <edc:SFRFieldDef edc:cname="INVEI1" edc:nzwidth="0x1" edc:desc="Comparator 1 Input Event Invert Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x42005004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x42005005">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0 Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="---n--nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x13" edc:_addr="0x42005006">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="Comparator 0"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="Comparator 1"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WIN0" edc:nzwidth="0x1" edc:desc="Window 0"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="STATUSA" edc:nzwidth="0x8" edc:access="--rr--rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x33" edc:_addr="0x42005007">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="STATE0" edc:nzwidth="0x1" edc:desc="Comparator 0 Current State"/>
            <edc:SFRFieldDef edc:cname="STATE1" edc:nzwidth="0x1" edc:desc="Comparator 1 Current State"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="WSTATE0" edc:nzwidth="0x2" edc:desc="Window 0 Current State">
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Signal is above window" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Signal is inside window" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Signal is below window" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="STATUSB" edc:nzwidth="0x8" edc:access="------rr" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="READY0" edc:nzwidth="0x1" edc:desc="Comparator 0 Ready"/>
            <edc:SFRFieldDef edc:cname="READY1" edc:nzwidth="0x1" edc:desc="Comparator 1 Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42005009">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="WINCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x4200500A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="WEN0" edc:nzwidth="0x1" edc:desc="Window 0 Mode Enable"/>
            <edc:SFRFieldDef edc:cname="WINTSEL0" edc:nzwidth="0x2" edc:desc="Window 0 Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="ABOVE" edc:desc="Interrupt on signal above window" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INSIDE" edc:desc="Interrupt on signal inside window" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="BELOW" edc:desc="Interrupt on signal below window" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="OUTSIDE" edc:desc="Interrupt on signal outside window" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200500B"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SCALER0" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x4200500C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x6" edc:desc="Scaler Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SCALER1" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x4200500D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="VALUE" edc:nzwidth="0x6" edc:desc="Scaler Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200500E"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="COMPCTRL0" edc:nzwidth="0x20" edc:access="--nn-nnn----n-nnnnnn-nnn-n-nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x370BF75E" edc:_addr="0x42005010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SINGLE" edc:nzwidth="0x1" edc:desc="Single-Shot Mode"/>
            <edc:SFRFieldDef edc:cname="INTSEL" edc:nzwidth="0x2" edc:desc="Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Interrupt on comparator output toggle" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on comparator output rising" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on comparator output falling" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EOC" edc:desc="Interrupt on end of comparison (single-shot mode only)" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="VDD Scaler" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC Voltage Output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="VDD Scaler" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap Inputs and Invert"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Speed Selection">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low speed" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High speed" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HYSTEN" edc:nzwidth="0x1" edc:desc="Hysteresis Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FLEN" edc:nzwidth="0x3" edc:desc="Filter Length">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No filtering" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MAJ3" edc:desc="3-bit majority function (2 of 3)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MAJ5" edc:desc="5-bit majority function (3 of 5)" edc:when="(field &amp; 0x7) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x2" edc:desc="Output">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="The output of COMPn is not routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="The asynchronous output of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="The synchronous output (including filtering) of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="COMPCTRL1" edc:nzwidth="0x20" edc:access="--nn-nnn----n-nnnnnn-nnn-n-nnnn-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x370BF75E" edc:_addr="0x42005014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="SINGLE" edc:nzwidth="0x1" edc:desc="Single-Shot Mode"/>
            <edc:SFRFieldDef edc:cname="INTSEL" edc:nzwidth="0x2" edc:desc="Interrupt Selection">
              <edc:SFRFieldSemantic edc:cname="TOGGLE" edc:desc="Interrupt on comparator output toggle" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RISING" edc:desc="Interrupt on comparator output rising" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FALLING" edc:desc="Interrupt on comparator output falling" edc:when="(field &amp; 0x3) == 2"/>
              <edc:SFRFieldSemantic edc:cname="EOC" edc:desc="Interrupt on end of comparison (single-shot mode only)" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXNEG" edc:nzwidth="0x3" edc:desc="Negative Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="GND" edc:desc="Ground" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="VDD Scaler" edc:when="(field &amp; 0x7) == 5"/>
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0x7) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DAC" edc:desc="DAC Voltage Output" edc:when="(field &amp; 0x7) == 7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MUXPOS" edc:nzwidth="0x3" edc:desc="Positive Input Mux Selection">
              <edc:SFRFieldSemantic edc:cname="AIN0" edc:desc="I/O pin 0 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="AIN1" edc:desc="I/O pin 1 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="AIN2" edc:desc="I/O pin 2 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="AIN3" edc:desc="I/O pin 3 for COMPCTRL0/1" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="VSCALE" edc:desc="VDD Scaler" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="Swap Inputs and Invert"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Speed Selection">
              <edc:SFRFieldSemantic edc:cname="LOW" edc:desc="Low speed" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HIGH" edc:desc="High speed" edc:when="(field &amp; 0x3) == 3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="HYSTEN" edc:nzwidth="0x1" edc:desc="Hysteresis Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="FLEN" edc:nzwidth="0x3" edc:desc="Filter Length">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="No filtering" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="MAJ3" edc:desc="3-bit majority function (2 of 3)" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="MAJ5" edc:desc="5-bit majority function (3 of 5)" edc:when="(field &amp; 0x7) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="OUT" edc:nzwidth="0x2" edc:desc="Output">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="The output of COMPn is not routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="The asynchronous output of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="The synchronous output (including filtering) of COMPn is routed to the COMPn I/O port" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x42005018"/>
      <edc:SFRDef ltx:memberofperipheral="AC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="---------------------------rrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1F" edc:_addr="0x42005020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="AC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="WINCTRL" edc:nzwidth="0x1" edc:desc="WINCTRL Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COMPCTRL0" edc:nzwidth="0x1" edc:desc="COMPCTRL 0 Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COMPCTRL1" edc:nzwidth="0x1" edc:desc="COMPCTRL 1 Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3DC" edc:_addr="0x42005024"/>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="-n----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x43" edc:_addr="0x42005400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="CTRLB" edc:nzwidth="0x8" edc:access="nnn-nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xEF" edc:_addr="0x42005401">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="EOEN" edc:nzwidth="0x1" edc:desc="External Output Enable"/>
            <edc:SFRFieldDef edc:cname="IOEN" edc:nzwidth="0x1" edc:desc="Internal Output Enable"/>
            <edc:SFRFieldDef edc:cname="LEFTADJ" edc:nzwidth="0x1" edc:desc="Left Adjusted Data"/>
            <edc:SFRFieldDef edc:cname="VPD" edc:nzwidth="0x1" edc:desc="Voltage Pump Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="DITHER" edc:nzwidth="0x1" edc:desc="Dither Enable"/>
            <edc:SFRFieldDef edc:cname="REFSEL" edc:nzwidth="0x2" edc:desc="Reference Selection">
              <edc:SFRFieldSemantic edc:cname="INTREF" edc:desc="Internal Voltage Reference" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="VDDANA" edc:desc="Analog Voltage Supply" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="VREFA" edc:desc="External Voltage Reference A (shared with ADC)" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="EVCTRL" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:_addr="0x42005402">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="STARTEI" edc:nzwidth="0x1" edc:desc="Start Conversion Event Input"/>
            <edc:SFRFieldDef edc:cname="EMPTYEO" edc:nzwidth="0x1" edc:desc="Data Buffer Empty Event Output"/>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Invert Event Input"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x42005403"/>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="UNDERRUN" edc:nzwidth="0x1" edc:desc="Underrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EMPTY" edc:nzwidth="0x1" edc:desc="Data Buffer Empty Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005405">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="UNDERRUN" edc:nzwidth="0x1" edc:desc="Underrun Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="EMPTY" edc:nzwidth="0x1" edc:desc="Data Buffer Empty Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x42005406">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="UNDERRUN" edc:nzwidth="0x1" edc:desc="Underrun"/>
            <edc:SFRFieldDef edc:cname="EMPTY" edc:nzwidth="0x1" edc:desc="Data Buffer Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="-------r" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42005407">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="READY" edc:nzwidth="0x1" edc:desc="DAC Ready"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DATA" edc:nzwidth="0x10" edc:access="wwwwwwwwwwwwwwww" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x42005408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x10" edc:desc="Data value to be converted"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200540A"/>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DATABUF" edc:nzwidth="0x10" edc:access="wwwwwwwwwwwwwwww" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:_addr="0x4200540C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DATABUF" edc:nzwidth="0x10" edc:desc="Data Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200540E"/>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="----------------------------rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF" edc:_addr="0x42005410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="DAC Enable Status"/>
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x1" edc:desc="Data"/>
            <edc:SFRFieldDef edc:cname="DATABUF" edc:nzwidth="0x1" edc:desc="Data Buffer"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DAC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x42005414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DAC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x7EB" edc:_addr="0x42005415"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="CTRL" edc:nzwidth="0x8" edc:access="-n----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x43" edc:_addr="0x42005C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The peripheral is not reset" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The peripheral is reset" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="The peripheral is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="The peripheral is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Generic clock is not required in standby sleep mode" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Generic clock is  required in standby sleep mode" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x42005C01"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL0" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42005C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x4" edc:desc="Sequential Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic is disabled" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D flip flop" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK flip flop" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D latch" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS latch" edc:when="(field &amp; 0xF) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="SEQCTRL1" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42005C05">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:SFRFieldDef edc:cname="SEQSEL" edc:nzwidth="0x4" edc:desc="Sequential Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Sequential logic is disabled" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DFF" edc:desc="D flip flop" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="JK" edc:desc="JK flip flop" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="LATCH" edc:desc="D latch" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="RS" edc:desc="RS latch" edc:when="(field &amp; 0xF) == 4"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42005C06"/>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL0" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x42005C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL1" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x42005C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL2" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x42005C10">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="CCL" edc:cname="LUTCTRL3" edc:nzwidth="0x20" edc:access="nnnnnnnn-nnnnnnnnnnnnnnnn-nn--n-" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF7FFFB2" edc:_addr="0x42005C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="CCL">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="LUT Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT block is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT block is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FILTSEL" edc:nzwidth="0x2" edc:desc="Filter Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Filter disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="SYNCH" edc:desc="Synchronizer enabled" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="FILTER" edc:desc="Filter enabled" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="EDGESEL" edc:nzwidth="0x1" edc:desc="Edge Selection">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Edge detector is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Edge detector is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL0" edc:nzwidth="0x4" edc:desc="Input Selection 0">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL1" edc:nzwidth="0x4" edc:desc="Input Selection 1">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INSEL2" edc:nzwidth="0x4" edc:desc="Input Selection 2">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="Masked input" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FEEDBACK" edc:desc="Feedback input source" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="LINK" edc:desc="Linked LUT input source" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="EVENT" edc:desc="Event input source" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="IO" edc:desc="I/O pin input source" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="AC" edc:desc="AC input source" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="TC" edc:desc="TC input source" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="ALTTC" edc:desc="Alternate TC input source" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="TCC" edc:desc="TCC input source" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="SERCOM" edc:desc="SERCOM input source" edc:when="(field &amp; 0xF) == 0x9"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="INVEI" edc:nzwidth="0x1" edc:desc="Inverted Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="NORMAL" edc:desc="Incoming event is not inverted" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="INVERTED" edc:desc="Incoming event is inverted" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEI" edc:nzwidth="0x1" edc:desc="LUT Event Input Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT incoming event is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT incoming event is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LUTEO" edc:nzwidth="0x1" edc:desc="LUT Event Output Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="LUT event output is disabled" edc:when="(field &amp; 0x1) == 0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="LUT event output is enabled" edc:when="(field &amp; 0x1) == 1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="TRUTH" edc:nzwidth="0x8" edc:desc="Truth Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0xBE8" edc:_addr="0x42005C18"/>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="nnnn-nnn-nnn-nnnnn--nnnn-n--nnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF777CF4F" edc:_addr="0x42006800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operation Mode">
              <edc:SFRFieldSemantic edc:cname="QDEC" edc:desc="QDEC operating mode" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="HALL" edc:desc="HALL operating mode" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="COUNTER" edc:desc="COUNTER operating mode" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="CONF" edc:nzwidth="0x3" edc:desc="PDEC Configuration">
              <edc:SFRFieldSemantic edc:cname="X4" edc:desc="Quadrature decoder direction" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="X4S" edc:desc="Secure Quadrature decoder direction" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="X2" edc:desc="Decoder direction" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="X2S" edc:desc="Secure decoder direction" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="AUTOC" edc:desc="Auto correction mode" edc:when="(field &amp; 0x7) == 4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="ALOCK" edc:nzwidth="0x1" edc:desc="Auto Lock"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SWAP" edc:nzwidth="0x1" edc:desc="PDEC Phase A and B Swap"/>
            <edc:SFRFieldDef edc:cname="PEREN" edc:nzwidth="0x1" edc:desc="Period Enable"/>
            <edc:SFRFieldDef edc:cname="PINEN0" edc:nzwidth="0x1" edc:desc="PDEC Input From Pin 0 Enable"/>
            <edc:SFRFieldDef edc:cname="PINEN1" edc:nzwidth="0x1" edc:desc="PDEC Input From Pin 1 Enable"/>
            <edc:SFRFieldDef edc:cname="PINEN2" edc:nzwidth="0x1" edc:desc="PDEC Input From Pin 2 Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="PINVEN0" edc:nzwidth="0x1" edc:desc="IO Pin 0 Invert Enable"/>
            <edc:SFRFieldDef edc:cname="PINVEN1" edc:nzwidth="0x1" edc:desc="IO Pin 1 Invert Enable"/>
            <edc:SFRFieldDef edc:cname="PINVEN2" edc:nzwidth="0x1" edc:desc="IO Pin 2 Invert Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ANGULAR" edc:nzwidth="0x3" edc:desc="Angular Counter Length"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="MAXCMP" edc:nzwidth="0x4" edc:desc="Maximum Consecutive Missing Pulses"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="CTRLBCLR" edc:nzwidth="0x8" edc:access="nnn---n-" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE2" edc:_addr="0x42006804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a counter restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double buffered registers" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start QDEC/HALL" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop QDEC/HALL" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="CTRLBSET" edc:nzwidth="0x8" edc:access="nnn---n-" edc:por="00000000" edc:mclr="00000000" edc:impl="0xE2" edc:_addr="0x42006805">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LUPD" edc:nzwidth="0x1" edc:desc="Lock Update"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x3" edc:desc="Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="No action" edc:when="(field &amp; 0x7) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Force a counter restart or retrigger" edc:when="(field &amp; 0x7) == 1"/>
              <edc:SFRFieldSemantic edc:cname="UPDATE" edc:desc="Force update of double buffered registers" edc:when="(field &amp; 0x7) == 2"/>
              <edc:SFRFieldSemantic edc:cname="READSYNC" edc:desc="Force a read synchronization of COUNT" edc:when="(field &amp; 0x7) == 3"/>
              <edc:SFRFieldSemantic edc:cname="START" edc:desc="Start QDEC/HALL" edc:when="(field &amp; 0x7) == 4"/>
              <edc:SFRFieldSemantic edc:cname="STOP" edc:desc="Stop QDEC/HALL" edc:when="(field &amp; 0x7) == 5"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="EVCTRL" edc:nzwidth="0x10" edc:access="--nnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x3FFF" edc:_addr="0x42006806">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="EVACT" edc:nzwidth="0x2" edc:desc="Event Action">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Event action disabled" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="RETRIGGER" edc:desc="Start, restart or retrigger on event" edc:when="(field &amp; 0x3) == 1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="EVINV" edc:nzwidth="0x3" edc:desc="Inverted Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="EVEI" edc:nzwidth="0x3" edc:desc="Event Input Enable"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="ERREO" edc:nzwidth="0x1" edc:desc="Error  Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="DIREO" edc:nzwidth="0x1" edc:desc="Direction Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="VLCEO" edc:nzwidth="0x1" edc:desc="Velocity Output Event Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO0" edc:nzwidth="0x1" edc:desc="Match Channel 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="MCEO1" edc:nzwidth="0x1" edc:desc="Match Channel 1 Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42006808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="VLC" edc:nzwidth="0x1" edc:desc="Velocity Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Channel 0 Compare Match Disable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Channel 1 Compare Match Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x42006809">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow/Underflow Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="VLC" edc:nzwidth="0x1" edc:desc="Velocity Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Channel 0 Compare Match Enable"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Channel 1 Compare Match Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="--nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3F" edc:_addr="0x4200680A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow/Underflow"/>
            <edc:SFRFieldDef edc:cname="ERR" edc:nzwidth="0x1" edc:desc="Error"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction Change"/>
            <edc:SFRFieldDef edc:cname="VLC" edc:nzwidth="0x1" edc:desc="Velocity"/>
            <edc:SFRFieldDef edc:cname="MC0" edc:nzwidth="0x1" edc:desc="Channel 0 Compare Match"/>
            <edc:SFRFieldDef edc:cname="MC1" edc:nzwidth="0x1" edc:desc="Channel 1 Compare Match"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200680B"/>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="--nn--nnnnnn-nnn" edc:por="0000000001000000" edc:mclr="0000000001000000" edc:impl="0x33F7" edc:_addr="0x4200680C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="QERR" edc:nzwidth="0x1" edc:desc="Quadrature Error Flag"/>
            <edc:SFRFieldDef edc:cname="IDXERR" edc:nzwidth="0x1" edc:desc="Index Error Flag"/>
            <edc:SFRFieldDef edc:cname="MPERR" edc:nzwidth="0x1" edc:desc="Missing Pulse Error flag"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="WINERR" edc:nzwidth="0x1" edc:desc="Window Error Flag"/>
            <edc:SFRFieldDef edc:cname="HERR" edc:nzwidth="0x1" edc:desc="Hall Error Flag"/>
            <edc:SFRFieldDef edc:cname="STOP" edc:nzwidth="0x1" edc:desc="Stop"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Direction Status Flag"/>
            <edc:SFRFieldDef edc:cname="PRESCBUFV" edc:nzwidth="0x1" edc:desc="Prescaler Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="FILTERBUFV" edc:nzwidth="0x1" edc:desc="Filter Buffer Valid"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CCBUFV0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Buffer Valid"/>
            <edc:SFRFieldDef edc:cname="CCBUFV1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Buffer Valid"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x1" edc:_addr="0x4200680E"/>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:_addr="0x4200680F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="DBGRUN" edc:nzwidth="0x1" edc:desc="Debug Run Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------rrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:_addr="0x42006810">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="Control B Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="STATUS" edc:nzwidth="0x1" edc:desc="Status Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x1" edc:desc="Prescaler Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x1" edc:desc="Filter Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="Count Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CC0" edc:nzwidth="0x1" edc:desc="Compare Channel 0 Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CC1" edc:nzwidth="0x1" edc:desc="Compare Channel 1 Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="PRESC" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42006814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="PRESC" edc:nzwidth="0x4" edc:desc="Prescaler Value">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Divide by 32" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide by 128" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0xF) == 8"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="Divide by 512" edc:when="(field &amp; 0xF) == 9"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0xF) == 10"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="FILTER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42006815">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="FILTER" edc:nzwidth="0x8" edc:desc="Filter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x42006816"/>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="PRESCBUF" edc:nzwidth="0x8" edc:access="----nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xF" edc:_addr="0x42006818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="PRESCBUF" edc:nzwidth="0x4" edc:desc="Prescaler Buffer Value">
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="No division" edc:when="(field &amp; 0xF) == 0"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="Divide by 2" edc:when="(field &amp; 0xF) == 1"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="Divide by 4" edc:when="(field &amp; 0xF) == 2"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="Divide by 8" edc:when="(field &amp; 0xF) == 3"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="Divide by 16" edc:when="(field &amp; 0xF) == 4"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="Divide by 32" edc:when="(field &amp; 0xF) == 5"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="Divide by 64" edc:when="(field &amp; 0xF) == 6"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="Divide by 128" edc:when="(field &amp; 0xF) == 7"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="Divide by 256" edc:when="(field &amp; 0xF) == 8"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="Divide by 512" edc:when="(field &amp; 0xF) == 9"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="Divide by 1024" edc:when="(field &amp; 0xF) == 10"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="FILTERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:_addr="0x42006819">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="FILTERBUF" edc:nzwidth="0x8" edc:desc="Filter Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x2" edc:_addr="0x4200681A"/>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x4200681C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="CC0" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x42006820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Channel Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="CC1" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x42006824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Channel Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x8" edc:_addr="0x42006828"/>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x42006830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Channel Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="PDEC" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="----------------nnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFFF" edc:_addr="0x42006834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="PDEC">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Channel Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x5FF97C8" edc:_addr="0x42006838"/>
      <edc:SFRDef ltx:memberofperipheral="DIVAS" edc:cname="CTRLA" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x48000000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIVAS">
            <edc:SFRFieldDef edc:cname="SIGNED" edc:nzwidth="0x1" edc:desc="Signed"/>
            <edc:SFRFieldDef edc:cname="DLZ" edc:nzwidth="0x1" edc:desc="Disable Leading Zero Optimization"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x48000001"/>
      <edc:SFRDef ltx:memberofperipheral="DIVAS" edc:cname="STATUS" edc:nzwidth="0x8" edc:access="------nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x3" edc:_addr="0x48000004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIVAS">
            <edc:SFRFieldDef edc:cname="BUSY" edc:nzwidth="0x1" edc:desc="DIVAS Accelerator Busy"/>
            <edc:SFRFieldDef edc:cname="DBZ" edc:nzwidth="0x1" edc:desc="Writing a one to this bit clears DBZ to zero"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:AdjustPoint edc:offset="0x3" edc:_addr="0x48000005"/>
      <edc:SFRDef ltx:memberofperipheral="DIVAS" edc:cname="DIVIDEND" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x48000008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIVAS">
            <edc:SFRFieldDef edc:cname="DIVIDEND" edc:nzwidth="0x20" edc:desc="DIVIDEND"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIVAS" edc:cname="DIVISOR" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x4800000C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIVAS">
            <edc:SFRFieldDef edc:cname="DIVISOR" edc:nzwidth="0x20" edc:desc="DIVISOR"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIVAS" edc:cname="RESULT" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x48000010">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIVAS">
            <edc:SFRFieldDef edc:cname="RESULT" edc:nzwidth="0x20" edc:desc="RESULT"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIVAS" edc:cname="REM" edc:nzwidth="0x20" edc:access="rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x48000014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIVAS">
            <edc:SFRFieldDef edc:cname="REM" edc:nzwidth="0x20" edc:desc="REM"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="DIVAS" edc:cname="SQRNUM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:_addr="0x48000018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="DIVAS">
            <edc:SFRFieldDef edc:cname="SQRNUM" edc:nzwidth="0x20" edc:desc="Square Root Input"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:SFRDataSector>
    <edc:DeviceIDSector edc:regionid="devid" edc:beginaddr="0x41002018" edc:endaddr="0x4100201C" edc:value="0x11070101" edc:mask="0xFFFFF0FF"/>
    <edc:RegisterMap edc:id="RTC/MODE0">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="n---nnnnn---nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x8F8F" edc:addr="0x40002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MATCHCLR" edc:nzwidth="0x1" edc:desc="Clear on Match"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----------------n------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x81FF" edc:addr="0x40002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO0" edc:nzwidth="0x1" edc:desc="Compare 0 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="n------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x81FF" edc:addr="0x40002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="n------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x81FF" edc:addr="0x4000240A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="n------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x81FF" edc:addr="0x4000240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="----------------r---------r-rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x802F" edc:addr="0x40002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="COUNT Register Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="COMP 0 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Read Synchronization Enable Bit Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x20" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="RTC/MODE1">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="n---nnnn----nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x8F0F" edc:addr="0x40002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----------------n-----nnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x83FF" edc:addr="0x40002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO0" edc:nzwidth="0x1" edc:desc="Compare 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="CMPEO1" edc:nzwidth="0x1" edc:desc="Compare 1 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="n-----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x83FF" edc:addr="0x40002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="n-----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x83FF" edc:addr="0x4000240A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="n-----nnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x83FF" edc:addr="0x4000240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="CMP0" edc:nzwidth="0x1" edc:desc="Compare 0"/>
            <edc:SFRFieldDef edc:cname="CMP1" edc:nzwidth="0x1" edc:desc="Compare 1"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="----------------r--------rrrrrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x807F" edc:addr="0x40002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Bit Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x1" edc:desc="COUNT Register Busy"/>
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x1" edc:desc="PER Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP0" edc:nzwidth="0x1" edc:desc="COMP 0 Register Busy"/>
            <edc:SFRFieldDef edc:cname="COMP1" edc:nzwidth="0x1" edc:desc="COMP 1 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="COUNTSYNC" edc:nzwidth="0x1" edc:desc="Count Read Synchronization Enable Bit Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="PER" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4000241C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x10" edc:desc="Counter Period"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x10" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="COMP1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x40002422">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="COMP" edc:nzwidth="0x10" edc:desc="Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="RTC/MODE2">
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CTRLA" edc:nzwidth="0x10" edc:access="n---nnnnnn--nnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x8FCF" edc:addr="0x40002400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x2" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="COUNT32" edc:desc="Mode 0: 32-bit Counter" edc:when="(field &amp; 0x3) == 0"/>
              <edc:SFRFieldSemantic edc:cname="COUNT16" edc:desc="Mode 1: 16-bit Counter" edc:when="(field &amp; 0x3) == 1"/>
              <edc:SFRFieldSemantic edc:cname="CLOCK" edc:desc="Mode 2: Clock/Calendar" edc:when="(field &amp; 0x3) == 2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="CLKREP" edc:nzwidth="0x1" edc:desc="Clock Representation"/>
            <edc:SFRFieldDef edc:cname="MATCHCLR" edc:nzwidth="0x1" edc:desc="Clear on Match"/>
            <edc:SFRFieldDef edc:cname="PRESCALER" edc:nzwidth="0x4" edc:desc="Prescaler">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DIV1" edc:desc="CLK_RTC_CNT = GCLK_RTC/1" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DIV2" edc:desc="CLK_RTC_CNT = GCLK_RTC/2" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DIV4" edc:desc="CLK_RTC_CNT = GCLK_RTC/4" edc:when="(field &amp; 0xF) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DIV8" edc:desc="CLK_RTC_CNT = GCLK_RTC/8" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="DIV16" edc:desc="CLK_RTC_CNT = GCLK_RTC/16" edc:when="(field &amp; 0xF) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="DIV32" edc:desc="CLK_RTC_CNT = GCLK_RTC/32" edc:when="(field &amp; 0xF) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="DIV64" edc:desc="CLK_RTC_CNT = GCLK_RTC/64" edc:when="(field &amp; 0xF) == 0x7"/>
              <edc:SFRFieldSemantic edc:cname="DIV128" edc:desc="CLK_RTC_CNT = GCLK_RTC/128" edc:when="(field &amp; 0xF) == 0x8"/>
              <edc:SFRFieldSemantic edc:cname="DIV256" edc:desc="CLK_RTC_CNT = GCLK_RTC/256" edc:when="(field &amp; 0xF) == 0x9"/>
              <edc:SFRFieldSemantic edc:cname="DIV512" edc:desc="CLK_RTC_CNT = GCLK_RTC/512" edc:when="(field &amp; 0xF) == 0xA"/>
              <edc:SFRFieldSemantic edc:cname="DIV1024" edc:desc="CLK_RTC_CNT = GCLK_RTC/1024" edc:when="(field &amp; 0xF) == 0xB"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CLOCKSYNC" edc:nzwidth="0x1" edc:desc="Clock Read Synchronization Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="EVCTRL" edc:nzwidth="0x20" edc:access="----------------n------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x81FF" edc:addr="0x40002404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PEREO0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="PEREO7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Event Output Enable"/>
            <edc:SFRFieldDef edc:cname="ALARMEO0" edc:nzwidth="0x1" edc:desc="Alarm 0 Event Output Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="OVFEO" edc:nzwidth="0x1" edc:desc="Overflow Event Output Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENCLR" edc:nzwidth="0x10" edc:access="n------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x81FF" edc:addr="0x40002408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTENSET" edc:nzwidth="0x10" edc:access="n------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x81FF" edc:addr="0x4000240A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0 Enable"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1 Enable"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2 Enable"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3 Enable"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4 Enable"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5 Enable"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6 Enable"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7 Enable"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0 Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="INTFLAG" edc:nzwidth="0x10" edc:access="n------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x81FF" edc:addr="0x4000240C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="PER0" edc:nzwidth="0x1" edc:desc="Periodic Interval 0"/>
            <edc:SFRFieldDef edc:cname="PER1" edc:nzwidth="0x1" edc:desc="Periodic Interval 1"/>
            <edc:SFRFieldDef edc:cname="PER2" edc:nzwidth="0x1" edc:desc="Periodic Interval 2"/>
            <edc:SFRFieldDef edc:cname="PER3" edc:nzwidth="0x1" edc:desc="Periodic Interval 3"/>
            <edc:SFRFieldDef edc:cname="PER4" edc:nzwidth="0x1" edc:desc="Periodic Interval 4"/>
            <edc:SFRFieldDef edc:cname="PER5" edc:nzwidth="0x1" edc:desc="Periodic Interval 5"/>
            <edc:SFRFieldDef edc:cname="PER6" edc:nzwidth="0x1" edc:desc="Periodic Interval 6"/>
            <edc:SFRFieldDef edc:cname="PER7" edc:nzwidth="0x1" edc:desc="Periodic Interval 7"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="Alarm 0"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="OVF" edc:nzwidth="0x1" edc:desc="Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="----------------r---r-----r-rrrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x882F" edc:addr="0x40002410">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Bit Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable Bit Busy"/>
            <edc:SFRFieldDef edc:cname="FREQCORR" edc:nzwidth="0x1" edc:desc="FREQCORR Register Busy"/>
            <edc:SFRFieldDef edc:cname="CLOCK" edc:nzwidth="0x1" edc:desc="CLOCK Register Busy"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ALARM0" edc:nzwidth="0x1" edc:desc="ALARM 0 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="MASK0" edc:nzwidth="0x1" edc:desc="MASK 0 Register Busy"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="CLOCKSYNC" edc:nzwidth="0x1" edc:desc="Clock Read Synchronization Enable Bit Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="CLOCK" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="AM when CLKREP in 12-hour" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="PM when CLKREP in 12-hour" edc:when="(field &amp; 0x1F) == 0x10"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="ALARM" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x40002420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SECOND" edc:nzwidth="0x6" edc:desc="Second"/>
            <edc:SFRFieldDef edc:cname="MINUTE" edc:nzwidth="0x6" edc:desc="Minute"/>
            <edc:SFRFieldDef edc:cname="HOUR" edc:nzwidth="0x5" edc:desc="Hour">
              <edc:SFRFieldSemantic edc:cname="AM" edc:desc="Morning hour" edc:when="(field &amp; 0x1F) == 0x00"/>
              <edc:SFRFieldSemantic edc:cname="PM" edc:desc="Afternoon hour" edc:when="(field &amp; 0x1F) == 0x10"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DAY" edc:nzwidth="0x5" edc:desc="Day"/>
            <edc:SFRFieldDef edc:cname="MONTH" edc:nzwidth="0x4" edc:desc="Month"/>
            <edc:SFRFieldDef edc:cname="YEAR" edc:nzwidth="0x6" edc:desc="Year"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="RTC" edc:cname="MASK" edc:nzwidth="0x8" edc:access="-----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x7" edc:addr="0x40002424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="RTC">
            <edc:SFRFieldDef edc:cname="SEL" edc:nzwidth="0x3" edc:desc="Alarm Mask Selection">
              <edc:SFRFieldSemantic edc:cname="OFF" edc:desc="Alarm Disabled" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SS" edc:desc="Match seconds only" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="MMSS" edc:desc="Match seconds and minutes only" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="HHMMSS" edc:desc="Match seconds, minutes, and hours only" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="DDHHMMSS" edc:desc="Match seconds, minutes, hours, and days only" edc:when="(field &amp; 0x7) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="MMDDHHMMSS" edc:desc="Match seconds, minutes, hours, days, and months only" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="YYMMDDHHMMSS" edc:desc="Match seconds, minutes, hours, days, months, and years" edc:when="(field &amp; 0x7) == 0x6"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70300" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C700" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x6DF" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnn---------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFE00FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x7" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="PAD[0]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="PAD[2]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="PAD[3]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="PAD[0]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x4" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="-----------------------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="PAD[0]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="PAD[2]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="PAD[3]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="PAD[0]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x4" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000424">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x20" edc:access="-----------------------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn----nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E19F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0]=TxD, PAD[1]=XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="PAD[2]=TxD, PAD[3]=XCK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0]=TxD, PAD[2]=RTS/TE, PAD[3]=CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0]=TxD, PAD[1]=XCK, PAD[2]=RTS/TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="--------------------nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF07" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="---------nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM0/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn----nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E19F" edc:addr="0x42000400">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0]=TxD, PAD[1]=XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="PAD[2]=TxD, PAD[3]=XCK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0]=TxD, PAD[2]=RTS/TE, PAD[3]=CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0]=TxD, PAD[1]=XCK, PAD[2]=RTS/TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42000404">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="--------------------nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF07" edc:addr="0x42000408">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200040C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200040E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000416">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000418">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="---------nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F" edc:addr="0x4200041A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200041C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM0" edc:cname="DATA" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000428">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM0">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70300" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42000824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C700" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x6DF" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnn---------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFE00FF" edc:addr="0x42000824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x7" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="PAD[0]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="PAD[2]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="PAD[3]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="PAD[0]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x4" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="-----------------------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="PAD[0]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="PAD[2]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="PAD[3]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="PAD[0]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x4" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000824">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x20" edc:access="-----------------------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn----nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E19F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0]=TxD, PAD[1]=XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="PAD[2]=TxD, PAD[3]=XCK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0]=TxD, PAD[2]=RTS/TE, PAD[3]=CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0]=TxD, PAD[1]=XCK, PAD[2]=RTS/TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="--------------------nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF07" edc:addr="0x42000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200080E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="---------nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM1/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn----nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E19F" edc:addr="0x42000800">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0]=TxD, PAD[1]=XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="PAD[2]=TxD, PAD[3]=XCK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0]=TxD, PAD[2]=RTS/TE, PAD[3]=CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0]=TxD, PAD[1]=XCK, PAD[2]=RTS/TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42000804">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="--------------------nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF07" edc:addr="0x42000808">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200080C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200080E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000816">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000818">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="---------nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F" edc:addr="0x4200081A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200081C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM1" edc:cname="DATA" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000828">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM1">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70300" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C700" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x6DF" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnn---------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFE00FF" edc:addr="0x42000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x7" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="PAD[0]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="PAD[2]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="PAD[3]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="PAD[0]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x4" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="-----------------------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="PAD[0]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="PAD[2]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="PAD[3]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="PAD[0]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x4" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42000C24">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x20" edc:access="-----------------------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42000C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn----nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E19F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0]=TxD, PAD[1]=XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="PAD[2]=TxD, PAD[3]=XCK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0]=TxD, PAD[2]=RTS/TE, PAD[3]=CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0]=TxD, PAD[1]=XCK, PAD[2]=RTS/TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="--------------------nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF07" edc:addr="0x42000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="---------nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM2/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn----nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E19F" edc:addr="0x42000C00">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0]=TxD, PAD[1]=XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="PAD[2]=TxD, PAD[3]=XCK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0]=TxD, PAD[2]=RTS/TE, PAD[3]=CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0]=TxD, PAD[1]=XCK, PAD[2]=RTS/TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42000C04">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="--------------------nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF07" edc:addr="0x42000C08">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42000C0C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42000C0E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C16">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42000C18">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="---------nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F" edc:addr="0x42000C1A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x42000C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM2" edc:cname="DATA" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42000C28">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM2">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/I2CM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnn-nnnnnn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7BF1009F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_MASTER" edc:desc="I2C master operation" edc:when="(field &amp; 0x7) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run in Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="MEXTTOEN" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:SFRFieldDef edc:cname="INACTOUT" edc:nzwidth="0x2" edc:desc="Inactive Time-Out">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disable" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="55US" edc:desc="5-6 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="105US" edc:desc="10-11 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="205US" edc:desc="20-21 SCL cycle time-out" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnn------nn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x70300" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="QCEN" edc:nzwidth="0x1" edc:desc="Quick Command Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="BAUDLOW" edc:nzwidth="0x8" edc:desc="Baud Rate Value Low"/>
            <edc:SFRFieldDef edc:cname="HSBAUD" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value"/>
            <edc:SFRFieldDef edc:cname="HSBAUDLOW" edc:nzwidth="0x8" edc:desc="High Speed Baud Rate Value Low"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-----nn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x83" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="MB" edc:nzwidth="0x1" edc:desc="Master On Bus Interrupt"/>
            <edc:SFRFieldDef edc:cname="SB" edc:nzwidth="0x1" edc:desc="Slave On Bus Interrupt"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nnnnnnn-nnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F7" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="ARBLOST" edc:nzwidth="0x1" edc:desc="Arbitration Lost"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="BUSSTATE" edc:nzwidth="0x2" edc:desc="Bus State">
              <edc:SFRFieldSemantic edc:cname="UNKNOWN" edc:desc="Wait for stop or idle" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE" edc:desc="Wait for transaction initialization" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="OWNER" edc:desc="I2C master is the current owner of the bus" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="BUSY" edc:desc="Some other I2C master owns the bus" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:SFRFieldDef edc:cname="MEXTTOUT" edc:nzwidth="0x1" edc:desc="Master SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="LENERR" edc:nzwidth="0x1" edc:desc="Length Error"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="SYSOP" edc:nzwidth="0x1" edc:desc="System Operation Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnnnnn--nnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFFE7FF" edc:addr="0x42001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0xB" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LENEN" edc:nzwidth="0x1" edc:desc="Length Enable"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed Mode"/>
            <edc:SFRFieldDef edc:cname="TENBITEN" edc:nzwidth="0x1" edc:desc="Ten Bit Addressing Enable"/>
            <edc:SFRFieldDef edc:cname="LEN" edc:nzwidth="0x8" edc:desc="Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/I2CS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-n--n-nnn-nn---n--------n--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x4BB1009F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="I2C_SLAVE" edc:desc="I2C slave operation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="PINOUT" edc:nzwidth="0x1" edc:desc="Pin Usage"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SDAHOLD" edc:nzwidth="0x2" edc:desc="SDA Hold Time">
              <edc:SFRFieldSemantic edc:cname="DIS" edc:desc="Disabled" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="75NS" edc:desc="50-100ns hold time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="450NS" edc:desc="300-600ns hold time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="600NS" edc:desc="400-800ns hold time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOEN" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="SPEED" edc:nzwidth="0x2" edc:desc="Transfer Speed">
              <edc:SFRFieldSemantic edc:cname="SM" edc:desc="Standard-Mode (SM) and Fast-Mode (FM)" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="FMP" edc:desc="Fast-Mode Plus (FM+)" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="HS" edc:desc="High-Speed Mode" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SCLSM" edc:nzwidth="0x1" edc:desc="SCL Clock Stretch Mode"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="LOWTOUTEN" edc:nzwidth="0x1" edc:desc="SCL Low Timeout Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="-------------nnnnn---nnn--------" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7C700" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="SMEN" edc:nzwidth="0x1" edc:desc="Smart Mode Enable"/>
            <edc:SFRFieldDef edc:cname="GCMD" edc:nzwidth="0x1" edc:desc="PMBus Group Command"/>
            <edc:SFRFieldDef edc:cname="AACKEN" edc:nzwidth="0x1" edc:desc="Automatic Address Acknowledge"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="The slave responds to the address written in ADDR.ADDR masked by the value in ADDR.ADDRMASK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMD" edc:nzwidth="0x2" edc:desc="Command"/>
            <edc:SFRFieldDef edc:cname="ACKACT" edc:nzwidth="0x1" edc:desc="Acknowledge Action"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n----nnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x87" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PREC" edc:nzwidth="0x1" edc:desc="Stop Received Interrupt"/>
            <edc:SFRFieldDef edc:cname="AMATCH" edc:nzwidth="0x1" edc:desc="Address Match Interrupt"/>
            <edc:SFRFieldDef edc:cname="DRDY" edc:nzwidth="0x1" edc:desc="Data Interrupt"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-----nn-nn-nnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x6DF" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BUSERR" edc:nzwidth="0x1" edc:desc="Bus Error"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Transmit Collision"/>
            <edc:SFRFieldDef edc:cname="RXNACK" edc:nzwidth="0x1" edc:desc="Received Not Acknowledge"/>
            <edc:SFRFieldDef edc:cname="DIR" edc:nzwidth="0x1" edc:desc="Read/Write Direction"/>
            <edc:SFRFieldDef edc:cname="SR" edc:nzwidth="0x1" edc:desc="Repeated Start"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="LOWTOUT" edc:nzwidth="0x1" edc:desc="SCL Low Timeout"/>
            <edc:SFRFieldDef edc:cname="CLKHOLD" edc:nzwidth="0x1" edc:desc="Clock Hold"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="SEXTTOUT" edc:nzwidth="0x1" edc:desc="Slave SCL Low Extend Timeout"/>
            <edc:SFRFieldDef edc:cname="HS" edc:nzwidth="0x1" edc:desc="High Speed"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="------------------------------rr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnn---------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFE00FF" edc:addr="0x42001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="GENCEN" edc:nzwidth="0x1" edc:desc="General Call Address Enable"/>
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x7" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x9"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x7" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x8" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/SPIM">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="PAD[0]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="PAD[2]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="PAD[3]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="PAD[0]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x4" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x20" edc:access="-----------------------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/SPIS">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnn--nn--nn-------nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7F33019F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="SPI_SLAVE" edc:desc="SPI in slave operation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="SPI_MASTER" edc:desc="SPI in master operation" edc:when="(field &amp; 0x7) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="STATUS.BUFOVF is set when it occurs in the data stream" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="STATUS.BUFOVF is set immediately upon buffer overflow" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x7"/>
            <edc:SFRFieldDef edc:cname="DOPO" edc:nzwidth="0x2" edc:desc="Data Out Pinout">
              <edc:SFRFieldSemantic edc:cname="0x0" edc:desc="PAD[0]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="0x1" edc:desc="PAD[2]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="0x2" edc:desc="PAD[3]=DO, PAD[1]=SCK, PAD[2]=SlaveSS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="0x3" edc:desc="PAD[0]=DO, PAD[3]=SCK, PAD[1]=SlaveSS" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="DIPO" edc:nzwidth="0x2" edc:desc="Data In Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used as data input" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used as data input" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used as data input" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used as data input" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME" edc:desc="SPI Frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SPI_FRAME_WITH_ADDR" edc:desc="SPI Frame with Addr" edc:when="(field &amp; 0xF) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPHA" edc:nzwidth="0x1" edc:desc="Clock Phase">
              <edc:SFRFieldSemantic edc:cname="LEADING_EDGE" edc:desc="The data is sampled on a leading SCK edge and changed on a trailing SCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="TRAILING_EDGE" edc:desc="The data is sampled on a trailing SCK edge and changed on a leading SCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="SCK is low when idle" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="SCK is high when idle" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="--------------n-nnn---n--n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x2E247" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 bits" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="PLOADEN" edc:nzwidth="0x1" edc:desc="Data Preload Enable"/>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="SSDE" edc:nzwidth="0x1" edc:desc="Slave Select Low Detect Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="SS low detector is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="SS low detector is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="MSSEN" edc:nzwidth="0x1" edc:desc="Master Slave Select Enable">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Hardware SS control is disabled" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ENABLE" edc:desc="Hardware SS control is enabled" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="AMODE" edc:nzwidth="0x2" edc:desc="Address Mode">
              <edc:SFRFieldSemantic edc:cname="MASK" edc:desc="ADDRMASK is used as a mask to the AADR register" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2ADDRS" edc:desc="The slave responds to the two unique addresses in ADDR and ADDRMASK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="RANGE" edc:desc="The slave responds to the range of addresses between and including ADDR and ADDRMASK. ADDR is the upper limit" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x8" edc:desc="Baud Rate Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n---nnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0x8F" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="SSL" edc:nzwidth="0x1" edc:desc="Slave Select Low Interrupt Flag"/>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="-------------n--" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x4" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="ADDR" edc:nzwidth="0x20" edc:access="--------nnnnnnnn--------nnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xFF00FF" edc:addr="0x42001024">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="ADDR" edc:nzwidth="0x8" edc:desc="Address Value"/>
            <edc:AdjustPoint edc:offset="0x8"/>
            <edc:SFRFieldDef edc:cname="ADDRMASK" edc:nzwidth="0x8" edc:desc="Address Mask"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x20" edc:access="-----------------------nnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x1FF" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DBGCTRL" edc:nzwidth="0x8" edc:access="-------n" edc:por="00000000" edc:mclr="00000000" edc:impl="0x1" edc:addr="0x42001030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DBGSTOP" edc:nzwidth="0x1" edc:desc="Debug Mode"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/USART_EXT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn----nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E19F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0]=TxD, PAD[1]=XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="PAD[2]=TxD, PAD[3]=XCK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0]=TxD, PAD[2]=RTS/TE, PAD[3]=CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0]=TxD, PAD[1]=XCK, PAD[2]=RTS/TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="--------------------nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF07" edc:addr="0x42001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200100E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="---------nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="SERCOM3/USART_INT">
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLA" edc:nzwidth="0x20" edc:access="-nnnnnnnnnnn--nnnnn----nn--nnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7FF3E19F" edc:addr="0x42001000">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="Enable"/>
            <edc:SFRFieldDef edc:cname="MODE" edc:nzwidth="0x3" edc:desc="Operating Mode">
              <edc:SFRFieldSemantic edc:cname="USART_EXT_CLK" edc:desc="USART with external clock" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_INT_CLK" edc:desc="USART with internal clock" edc:when="(field &amp; 0x7) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RUNSTDBY" edc:nzwidth="0x1" edc:desc="Run during Standby"/>
            <edc:SFRFieldDef edc:cname="IBON" edc:nzwidth="0x1" edc:desc="Immediate Buffer Overflow Notification"/>
            <edc:AdjustPoint edc:offset="0x4"/>
            <edc:SFRFieldDef edc:cname="SAMPR" edc:nzwidth="0x3" edc:desc="Sample">
              <edc:SFRFieldSemantic edc:cname="16X_ARITHMETIC" edc:desc="16x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="16X_FRACTIONAL" edc:desc="16x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="8X_ARITHMETIC" edc:desc="8x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="8X_FRACTIONAL" edc:desc="8x over-sampling using fractional baudrate generation" edc:when="(field &amp; 0x7) == 0x3"/>
              <edc:SFRFieldSemantic edc:cname="3X_ARITHMETIC" edc:desc="3x over-sampling using arithmetic baudrate generation" edc:when="(field &amp; 0x7) == 0x4"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="TXPO" edc:nzwidth="0x2" edc:desc="Transmit Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="PAD[0]=TxD, PAD[1]=XCK" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="PAD[2]=TxD, PAD[3]=XCK" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="PAD[0]=TxD, PAD[2]=RTS/TE, PAD[3]=CTS" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="PAD[0]=TxD, PAD[1]=XCK, PAD[2]=RTS/TE" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="RXPO" edc:nzwidth="0x2" edc:desc="Receive Data Pinout">
              <edc:SFRFieldSemantic edc:cname="PAD0" edc:desc="SERCOM PAD[0] is used for data reception" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="PAD1" edc:desc="SERCOM PAD[1] is used for data reception" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="PAD2" edc:desc="SERCOM PAD[2] is used for data reception" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="PAD3" edc:desc="SERCOM PAD[3] is used for data reception" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="SAMPA" edc:nzwidth="0x2" edc:desc="Sample Adjustment">
              <edc:SFRFieldSemantic edc:cname="ADJ0" edc:desc="16x Over-sampling = 7-8-9; 8x Over-sampling = 3-4-5" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ADJ1" edc:desc="16x Over-sampling = 9-10-11; 8x Over-sampling = 4-5-6" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="ADJ2" edc:desc="16x Over-sampling = 11-12-13; 8x Over-sampling = 5-6-7" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="ADJ3" edc:desc="16x Over-sampling = 13-14-15; 8x Over-sampling = 6-7-8" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="FORM" edc:nzwidth="0x4" edc:desc="Frame Format">
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_NO_PARITY" edc:desc="USART frame" edc:when="(field &amp; 0xF) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_WITH_PARITY" edc:desc="USART frame with parity" edc:when="(field &amp; 0xF) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_LINBRKGEN" edc:desc="LIN Master Break and Sync generation" edc:when="(field &amp; 0xF) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_NO_PARITY" edc:desc="Auto-baud (LIN Slave) - break detection and auto-baud" edc:when="(field &amp; 0xF) == 0x4"/>
              <edc:SFRFieldSemantic edc:cname="USART_FRAME_AUTO_BAUD_WITH_PARITY" edc:desc="Auto-baud - break detection and auto-baud with parity" edc:when="(field &amp; 0xF) == 0x5"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CMODE" edc:nzwidth="0x1" edc:desc="Communication Mode">
              <edc:SFRFieldSemantic edc:cname="ASYNC" edc:desc="Asynchronous communication." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SYNC" edc:desc="Synchronous communication." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="CPOL" edc:nzwidth="0x1" edc:desc="Clock Polarity">
              <edc:SFRFieldSemantic edc:cname="IDLE_LOW" edc:desc="TxD Change:- Rising XCK edge, RxD Sample:- Falling XCK edge" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IDLE_HIGH" edc:desc="TxD Change:- Falling XCK edge, RxD Sample:- Rising XCK edge" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="DORD" edc:nzwidth="0x1" edc:desc="Data Order">
              <edc:SFRFieldSemantic edc:cname="MSB" edc:desc="MSB is transmitted first." edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="LSB" edc:desc="LSB is transmitted first." edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLB" edc:nzwidth="0x20" edc:access="------nn------nn--n--nnn-n---nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x3032747" edc:addr="0x42001004">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="CHSIZE" edc:nzwidth="0x3" edc:desc="Character Size">
              <edc:SFRFieldSemantic edc:cname="8_BIT" edc:desc="8 Bits" edc:when="(field &amp; 0x7) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="9_BIT" edc:desc="9 Bits" edc:when="(field &amp; 0x7) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="5_BIT" edc:desc="5 Bits" edc:when="(field &amp; 0x7) == 0x5"/>
              <edc:SFRFieldSemantic edc:cname="6_BIT" edc:desc="6 Bits" edc:when="(field &amp; 0x7) == 0x6"/>
              <edc:SFRFieldSemantic edc:cname="7_BIT" edc:desc="7 Bits" edc:when="(field &amp; 0x7) == 0x7"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x3"/>
            <edc:SFRFieldDef edc:cname="SBMODE" edc:nzwidth="0x1" edc:desc="Stop Bit Mode">
              <edc:SFRFieldSemantic edc:cname="1_BIT" edc:desc="One Stop Bit" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="2_BIT" edc:desc="Two Stop Bits" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="COLDEN" edc:nzwidth="0x1" edc:desc="Collision Detection Enable"/>
            <edc:SFRFieldDef edc:cname="SFDE" edc:nzwidth="0x1" edc:desc="Start of Frame Detection Enable"/>
            <edc:SFRFieldDef edc:cname="ENC" edc:nzwidth="0x1" edc:desc="Encoding Format">
              <edc:SFRFieldSemantic edc:cname="DISABLE" edc:desc="Data is not encoded" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="IRDA" edc:desc="Data is IrDA encoded" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="PMODE" edc:nzwidth="0x1" edc:desc="Parity Mode">
              <edc:SFRFieldSemantic edc:cname="EVEN" edc:desc="Even Parity" edc:when="(field &amp; 0x1) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="ODD" edc:desc="Odd Parity" edc:when="(field &amp; 0x1) == 0x1"/>
            </edc:SFRFieldDef>
            <edc:AdjustPoint edc:offset="0x2"/>
            <edc:SFRFieldDef edc:cname="TXEN" edc:nzwidth="0x1" edc:desc="Transmitter Enable"/>
            <edc:SFRFieldDef edc:cname="RXEN" edc:nzwidth="0x1" edc:desc="Receiver Enable"/>
            <edc:AdjustPoint edc:offset="0x6"/>
            <edc:SFRFieldDef edc:cname="LINCMD" edc:nzwidth="0x2" edc:desc="LIN Command">
              <edc:SFRFieldSemantic edc:cname="NONE" edc:desc="Normal USART transmission" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="SOFTWARE_CONTROL_TRANSMIT_CMD" edc:desc="Break field is transmitted when DATA is written" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="AUTO_TRANSMIT_CMD" edc:desc="Break, sync and identifier are automatically transmitted when DATA is written with the identifier" edc:when="(field &amp; 0x3) == 0x2"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="CTRLC" edc:nzwidth="0x20" edc:access="--------------------nnnn-----nnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0xF07" edc:addr="0x42001008">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="GTIME" edc:nzwidth="0x3" edc:desc="Guard Time"/>
            <edc:AdjustPoint edc:offset="0x5"/>
            <edc:SFRFieldDef edc:cname="BRKLEN" edc:nzwidth="0x2" edc:desc="LIN Master Break Length">
              <edc:SFRFieldSemantic edc:cname="13_BIT" edc:desc="Break field transmission is 13 bit times" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="17_BIT" edc:desc="Break field transmission is 17 bit times" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="21_BIT" edc:desc="Break field transmission is 21 bit times" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="26_BIT" edc:desc="Break field transmission is 26 bit times" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
            <edc:SFRFieldDef edc:cname="HDRDLY" edc:nzwidth="0x2" edc:desc="LIN Master Header Delay">
              <edc:SFRFieldSemantic edc:cname="DELAY0" edc:desc="Delay between break and sync transmission is 1 bit time; Delay between sync and ID transmission is 1 bit time" edc:when="(field &amp; 0x3) == 0x0"/>
              <edc:SFRFieldSemantic edc:cname="DELAY1" edc:desc="Delay between break and sync transmission is 4 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x1"/>
              <edc:SFRFieldSemantic edc:cname="DELAY2" edc:desc="Delay between break and sync transmission is 8 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x2"/>
              <edc:SFRFieldSemantic edc:cname="DELAY3" edc:desc="Delay between break and sync transmission is 14 bit time; Delay between sync and ID transmission is 4 bit time" edc:when="(field &amp; 0x3) == 0x3"/>
            </edc:SFRFieldDef>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="BAUD" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200100C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="BAUD" edc:nzwidth="0x10" edc:desc="Baud Rate Value"/>
            <edc:AdjustPoint edc:offset="-3"/>
            <edc:SFRFieldDef edc:cname="FP" edc:nzwidth="0x3" edc:desc="Fractional Part"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="RXPL" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200100E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="RXPL" edc:nzwidth="0x8" edc:desc="Receive Pulse Length"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENCLR" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Disable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Disable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Disable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTENSET" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001016">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt Enable"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt Enable"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt Enable"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="INTFLAG" edc:nzwidth="0x8" edc:access="n-nnnnnn" edc:por="00000000" edc:mclr="00000000" edc:impl="0xBF" edc:addr="0x42001018">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DRE" edc:nzwidth="0x1" edc:desc="Data Register Empty Interrupt"/>
            <edc:SFRFieldDef edc:cname="TXC" edc:nzwidth="0x1" edc:desc="Transmit Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXC" edc:nzwidth="0x1" edc:desc="Receive Complete Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXS" edc:nzwidth="0x1" edc:desc="Receive Start Interrupt"/>
            <edc:SFRFieldDef edc:cname="CTSIC" edc:nzwidth="0x1" edc:desc="Clear To Send Input Change Interrupt"/>
            <edc:SFRFieldDef edc:cname="RXBRK" edc:nzwidth="0x1" edc:desc="Break Received Interrupt"/>
            <edc:AdjustPoint edc:offset="0x1"/>
            <edc:SFRFieldDef edc:cname="ERROR" edc:nzwidth="0x1" edc:desc="Combined Error Interrupt"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="STATUS" edc:nzwidth="0x10" edc:access="---------nnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x7F" edc:addr="0x4200101A">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="PERR" edc:nzwidth="0x1" edc:desc="Parity Error"/>
            <edc:SFRFieldDef edc:cname="FERR" edc:nzwidth="0x1" edc:desc="Frame Error"/>
            <edc:SFRFieldDef edc:cname="BUFOVF" edc:nzwidth="0x1" edc:desc="Buffer Overflow"/>
            <edc:SFRFieldDef edc:cname="CTS" edc:nzwidth="0x1" edc:desc="Clear To Send"/>
            <edc:SFRFieldDef edc:cname="ISF" edc:nzwidth="0x1" edc:desc="Inconsistent Sync Field"/>
            <edc:SFRFieldDef edc:cname="COLL" edc:nzwidth="0x1" edc:desc="Collision Detected"/>
            <edc:SFRFieldDef edc:cname="TXE" edc:nzwidth="0x1" edc:desc="Transmitter Empty"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="SYNCBUSY" edc:nzwidth="0x20" edc:access="-----------------------------rrr" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:impl="0x7" edc:addr="0x4200101C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="SWRST" edc:nzwidth="0x1" edc:desc="Software Reset Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="ENABLE" edc:nzwidth="0x1" edc:desc="SERCOM Enable Synchronization Busy"/>
            <edc:SFRFieldDef edc:cname="CTRLB" edc:nzwidth="0x1" edc:desc="CTRLB Synchronization Busy"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="SERCOM3" edc:cname="DATA" edc:nzwidth="0x10" edc:access="-------nnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:impl="0x1FF" edc:addr="0x42001028">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="SERCOM3">
            <edc:SFRFieldDef edc:cname="DATA" edc:nzwidth="0x9" edc:desc="Data Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200301B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200301C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200301D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200302F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003031">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200301C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200301E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003032">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC0/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200301C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC0" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC0">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200341B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200341C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200341D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200342F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003431">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200341C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200341E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003432">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC1/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003414">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200341C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003420">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003430">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC1" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003434">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC1">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200381B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200381C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200381D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200382F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003831">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200381C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200381E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003832">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC2/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003814">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200381C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003820">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003830">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC2" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003834">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC2">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC3/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x42003C1B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003C1D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x42003C2F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42003C31">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC3/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003C1E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42003C32">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC3/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003C14">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003C1C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003C20">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003C30">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC3" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42003C34">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC3">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC4/COUNT8">
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="COUNT" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42004014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x8" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="PER" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200401B">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="PER" edc:nzwidth="0x8" edc:desc="Period Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200401C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x4200401D">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x8" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="PERBUF" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="11111111" edc:mclr="11111111" edc:addr="0x4200402F">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="PERBUF" edc:nzwidth="0x8" edc:desc="Period Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF0" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42004030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF1" edc:nzwidth="0x8" edc:access="nnnnnnnn" edc:por="00000000" edc:mclr="00000000" edc:addr="0x42004031">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x8" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC4/COUNT16">
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="COUNT" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42004014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x10" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200401C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x4200401E">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x10" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF0" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42004030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF1" edc:nzwidth="0x10" edc:access="nnnnnnnnnnnnnnnn" edc:por="0000000000000000" edc:mclr="0000000000000000" edc:addr="0x42004032">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x10" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:RegisterMap edc:id="TC4/COUNT32">
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="COUNT" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42004014">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="COUNT" edc:nzwidth="0x20" edc:desc="Counter Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x4200401C">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CC1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42004020">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CC" edc:nzwidth="0x20" edc:desc="Counter/Compare Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF0" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42004030">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
      <edc:SFRDef ltx:memberofperipheral="TC4" edc:cname="CCBUF1" edc:nzwidth="0x20" edc:access="nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn" edc:por="00000000000000000000000000000000" edc:mclr="00000000000000000000000000000000" edc:addr="0x42004034">
        <edc:SFRModeList>
          <edc:SFRMode edc:id="DS.0" ltx:memberofperipheral="TC4">
            <edc:SFRFieldDef edc:cname="CCBUF" edc:nzwidth="0x20" edc:desc="Counter/Compare Buffer Value"/>
          </edc:SFRMode>
        </edc:SFRModeList>
      </edc:SFRDef>
    </edc:RegisterMap>
    <edc:EmulatorSector edc:beginaddr="0xE0001000" edc:endaddr="0xE000F000" edc:regionid="emulation"/>
  </edc:PhysicalSpace>
  <edc:PinList edc:ppsflavor="atmel">
    <edc:Pin>
      <edc:VirtualPin edc:name="PA00" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE0" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="XIN32" edc:ppsfunction="XIN32" ltx:memberofperipheral="OSC32KCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA01" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE1" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="XOUT32" edc:ppsfunction="XOUT32" ltx:memberofperipheral="OSC32KCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA02" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE2" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="VOUT" edc:ppsfunction="B" ltx:memberofperipheral="DAC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA03" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE3" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="VREFA" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="VREFA" edc:ppsfunction="B" ltx:memberofperipheral="DAC"/>
      <edc:VirtualPin edc:name="VREFREADY1" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA04" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT4" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE4" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN0" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN4" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="VREFB" edc:ppsfunction="B" ltx:memberofperipheral="SDADC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="BGBUFRRREADY" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA05" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT5" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE5" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN1" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN5" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="VREF_ANA_OUT" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA06" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT6" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE6" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN2" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN6" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="INN0" edc:ppsfunction="B" ltx:memberofperipheral="SDADC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="BIAS_TEST_OUT" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA07" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT7" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE7" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN3" edc:ppsfunction="B" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="AIN7" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="INP0" edc:ppsfunction="B" ltx:memberofperipheral="SDADC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="OUT3" edc:ppsfunction="J" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="BGBUFREADY5" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDANA"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA08" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="NMI" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE8" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN8" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="AIN10" edc:ppsfunction="B" ltx:memberofperipheral="ADC1"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="F" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="QDI0" edc:ppsfunction="J" ltx:memberofperipheral="PDEC"/>
      <edc:VirtualPin edc:name="BGBUFREADY0" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
      <edc:VirtualPin edc:name="XOSC_EN" edc:ppsfunction="XOSC" ltx:memberofperipheral="OSCCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA09" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT9" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE9" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN9" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="AIN11" edc:ppsfunction="B" ltx:memberofperipheral="ADC1"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="F" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="IN4" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="QDI1" edc:ppsfunction="J" ltx:memberofperipheral="PDEC"/>
      <edc:VirtualPin edc:name="BGBUFREADY1" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA10" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT10" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE10" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN10" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IO4" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN5" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="QDI2" edc:ppsfunction="J" ltx:memberofperipheral="PDEC"/>
      <edc:VirtualPin edc:name="BGBUFREADY2" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
      <edc:VirtualPin edc:name="XOSC_CLK" edc:ppsfunction="XOSC" ltx:memberofperipheral="OSCCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA11" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT11" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE11" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="AIN11" edc:ppsfunction="B" ltx:memberofperipheral="ADC0"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM0"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IO5" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
      <edc:VirtualPin edc:name="BGBUFREADY3" edc:ppsfunction="VREG" ltx:memberofperipheral="SUPC"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA14" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT14" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE14" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC4"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IO0" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="XIN" edc:ppsfunction="XIN" ltx:memberofperipheral="OSCCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA15" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT15" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="EXTWAKE15" edc:ppsfunction="A" ltx:memberofperipheral="RSTC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM2"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC4"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IO1" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="XOUT" edc:ppsfunction="XOUT" ltx:memberofperipheral="OSCCTRL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA16" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT0" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="WO6" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="QDI0" edc:ppsfunction="G" ltx:memberofperipheral="PDEC"/>
      <edc:VirtualPin edc:name="IO2" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA17" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT1" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC2"/>
      <edc:VirtualPin edc:name="WO7" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="QDI1" edc:ppsfunction="G" ltx:memberofperipheral="PDEC"/>
      <edc:VirtualPin edc:name="IO3" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA18" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT2" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC4"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="QDI2" edc:ppsfunction="G" ltx:memberofperipheral="PDEC"/>
      <edc:VirtualPin edc:name="CMP0" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="IN2" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA19" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT3" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC4"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="CMP1" edc:ppsfunction="H" ltx:memberofperipheral="AC"/>
      <edc:VirtualPin edc:name="OUT0" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA22" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT6" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD0" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="WO4" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IO6" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN6" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA23" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT7" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD1" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC0"/>
      <edc:VirtualPin edc:name="WO5" edc:ppsfunction="F" ltx:memberofperipheral="TCC0"/>
      <edc:VirtualPin edc:name="IO7" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN7" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA24" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT12" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TC1"/>
      <edc:VirtualPin edc:name="WO2" edc:ppsfunction="F" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="IN8" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA25" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT13" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="C" ltx:memberofperipheral="SERCOM3"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TC1"/>
      <edc:VirtualPin edc:name="WO3" edc:ppsfunction="F" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="OUT2" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA27" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT15" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IO0" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN10" edc:ppsfunction="J" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="RESET_N" edc:ppsfunction="default" ltx:memberofperipheral="PM"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA28" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT8" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="IO0" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN11" edc:ppsfunction="J" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="GNDIO"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDCORE"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="VDDIN"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA30" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT10" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD2" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="WO0" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="IO0" edc:ppsfunction="H" ltx:memberofperipheral="GCLK"/>
      <edc:VirtualPin edc:name="IN3" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
    <edc:Pin>
      <edc:VirtualPin edc:name="PA31" edc:ppsfunction="default" ltx:memberofperipheral="PORT"/>
      <edc:VirtualPin edc:name="EXTINT11" edc:ppsfunction="A" ltx:memberofperipheral="EIC"/>
      <edc:VirtualPin edc:name="PAD3" edc:ppsfunction="D" ltx:memberofperipheral="SERCOM1"/>
      <edc:VirtualPin edc:name="WO1" edc:ppsfunction="E" ltx:memberofperipheral="TCC1"/>
      <edc:VirtualPin edc:name="OUT1" edc:ppsfunction="I" ltx:memberofperipheral="CCL"/>
    </edc:Pin>
  </edc:PinList>
</edc:PIC>
